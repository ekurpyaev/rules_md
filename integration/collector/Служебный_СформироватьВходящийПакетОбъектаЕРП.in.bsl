	
	Если Ложь Тогда
		НаименованиеТипаОбъекта = "Документ.РасходнаяНакладная"; // указывается полное имя метаданных УНИКУМ
		ПараметрыВходящегоПакета = Новый Структура("СвязанныеОбъекты", Новый Массив);
		xdtoОбъект = Неопределено;
		ВидИдентификатора = "УНИКУМGUID";
		ПараметрыОбработки = Новый Структура;
		НенайденныеОбъекты = Новый ТаблицаЗначений;
	КонецЕсли;
	
	Если НЕ Константы.грСборкаКомплексныхОбъектов.Получить() Тогда
		Перейти ~ВыйтиИзФормированияПакетаСборки;
	КонецЕсли;
		
	//// Текст обработчика /////
	#Область ОбъявлениеПеременныхОбработчика
	Если ПараметрыВходящегоПакета.Свойство("КлючОснования") Тогда
		спрКлючОснования = ПараметрыВходящегоПакета.КлючОснования;
	Иначе
		спрКлючОснования = xdtoОбъект.Ссылка;
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("ВерсияПакета") Тогда
		спрВерсияПакета = ПараметрыВходящегоПакета.ВерсияПакета;
	Иначе
		спрВерсияПакета = грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "Версия", "Число", , 0);
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("Дата") Тогда
		спрДата = ПараметрыВходящегоПакета.Дата;
	Иначе
		спрДата = Неопределено;
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("Номер") Тогда
		спрНомер = ПараметрыВходящегоПакета.Номер;
	Иначе
		спрНомер = Неопределено;
	КонецЕсли;
			
	//спрТипОбъекта = Справочники.грТипыОбъектов.НайтиПоНаименованию(НаименованиеТипаОбъекта, Истина);
	
	спрЗапрос = Новый Запрос;
	спрЗапрос.Текст = 
		"ВЫБРАТЬ
		|	грТипыОбъектов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.грТипыОбъектов КАК грТипыОбъектов
		|ГДЕ
		|	грТипыОбъектов.Наименование = &Наименование";
	
	спрЗапрос.УстановитьПараметр("Наименование", НаименованиеТипаОбъекта);
	
	спрРезультат = спрЗапрос.Выполнить();
	
	спрВыборка = спрРезультат.Выбрать();
	
	Если спрВыборка.Следующий() Тогда
		спрТипОбъекта = спрВыборка.Ссылка;
	Иначе
		спрТипОбъекта = Неопределено;
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(спрТипОбъекта) Тогда
		
		//Блокировка Справочника Типы объектов на изменение 
		БлокировкаУстановлена = Ложь;
		Для СчетчикПопыток = 1 По ПараметрыОбработки.КоличествоПопытокБлокировки Цикл
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("Справочник.грТипыОбъектов");
				ЭлементБлокировки.УстановитьЗначение("Наименование", НаименованиеТипаОбъекта);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				Блокировка.Заблокировать();
				
				БлокировкаУстановлена = Истина;
				Прервать;
			Исключение КонецПопытки;
		КонецЦикла;
		
		Если НЕ БлокировкаУстановлена Тогда 
			ВызватьИсключение "Ошибка блокировки справочника грТипыОбъектов по наименованию" + НаименованиеТипаОбъекта;
		КонецЕсли;
		
		спрЗапрос = Новый Запрос;
		спрЗапрос.Текст = 
		"ВЫБРАТЬ
		|	грТипыОбъектов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.грТипыОбъектов КАК грТипыОбъектов
		|ГДЕ
		|	грТипыОбъектов.Наименование = &Наименование";
	
		спрЗапрос.УстановитьПараметр("Наименование", НаименованиеТипаОбъекта);
	
		спрРезультат = спрЗапрос.Выполнить();
	
		спрВыборка = спрРезультат.Выбрать();
	
		Если спрВыборка.Следующий() Тогда
			спрТипОбъекта = спрВыборка.Ссылка;
		Иначе
			спрТипОбъекта = Неопределено;
		КонецЕсли;
	
		Если Не ЗначениеЗаполнено(спрТипОбъекта) Тогда
			НовыйТипОбъекта = Справочники.грТипыОбъектов.СоздатьЭлемент();
			НовыйТипОбъекта.Наименование = НаименованиеТипаОбъекта;
			
			НовыйТипОбъекта.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
			НовыйТипОбъекта.ОбменДанными.Загрузка = Истина;
			НовыйТипОбъекта.Записать();
			
			спрТипОбъекта = НовыйТипОбъекта.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("СвязанныеОбъекты") Тогда
		спрСвязанныеОбъекты = ПараметрыВходящегоПакета.СвязанныеОбъекты;
	Иначе
		спрСвязанныеОбъекты = Новый Массив;
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("РезультатСборки") Тогда
		спрРезультатСборки = ПараметрыВходящегоПакета.РезультатСборки;
	Иначе
		спрРезультатСборки = Новый Массив;
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("ДополнительныеРеквизиты") Тогда
		спрДополнительныеРеквизиты = ПараметрыВходящегоПакета.ДополнительныеРеквизиты;
	Иначе
		спрДополнительныеРеквизиты = Новый Массив;
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("КлассСообщения") Тогда
		спрКлассСообщения = ПараметрыВходящегоПакета.КлассСообщения;
	Иначе
		спрКлассСообщения = КлассСообщения;
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("времСерииСправкиБ") Тогда
		времСерииСправкиБ = ПараметрыВходящегоПакета.времСерииСправкиБ;
	Иначе
		времСерииСправкиБ = Новый Массив;
	КонецЕсли;
	
	Если ПараметрыВходящегоПакета.Свойство("ИскатьПоКлючуОснования") Тогда
		ИскатьПоКлючуОснования = ПараметрыВходящегоПакета.ИскатьПоКлючуОснования;
	Иначе
		ИскатьПоКлючуОснования = Ложь;	
	КонецЕсли;
	
	ГотовКСборке = Ложь;
	Если ПараметрыВходящегоПакета.Свойство("ГотовКСборке") Тогда
		ГотовКСборке = ПараметрыВходящегоПакета.ГотовКСборке;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПоискСозданиеЭлементаСправочника_грОбъекты
	
	спрДокПараметры = Неопределено;
	Если спрКлассСообщения <> "" Тогда
		УсловияДляЗапроса = Новый Массив;
		УсловиеОтбора = Новый Структура("Условие, ПараметрИмя, ПараметрЗначение",
			" ВЫРАЗИТЬ(грТаблицаПереходныхКлючейERP.ОбъектERP КАК Справочник.грОбъекты).Класс = &КлассСообщения ",
			"КлассСообщения", спрКлассСообщения);
		
		УсловияДляЗапроса.Добавить(УсловиеОтбора);
		
		Если ИскатьПоКлючуОснования Тогда
			УсловиеОтбора = Новый Структура("Условие, ПараметрИмя, ПараметрЗначение",
				" ВЫРАЗИТЬ(грТаблицаПереходныхКлючейERP.ОбъектERP КАК Справочник.грОбъекты).КлючОснования = &КлючОснования ",
				"КлючОснования", спрКлючОснования);
		
			УсловияДляЗапроса.Добавить(УсловиеОтбора);
		КонецЕсли;
		
		спрДокПараметры = Новый Структура("УсловияДляЗапроса", УсловияДляЗапроса);
	КонецЕсли;
	
	спрРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(xdtoОбъект.Ссылка, 
		"Справочник.грОбъекты", ВидИдентификатора, ПараметрыОбработки, спрВерсияПакета, спрДокПараметры);
	
	Если НЕ спрРезультатПоиска.ИзменениеРазрешено Тогда 
		сткИзменениеРазрешено = спрРезультатПоиска.ИзменениеРазрешено;
		Перейти ~ВыйтиИзФормированияПакетаСборки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(спрРезультатПоиска.Ссылка) Тогда
		спрОбъект = спрРезультатПоиска.Объект;
		спрОбъектСсылка = спрРезультатПоиска.Ссылка;
	Иначе
		спрОбъект = Справочники.грОбъекты.СоздатьЭлемент();
		спрОбъект.УстановитьСсылкуНового(Справочники.грОбъекты.ПолучитьСсылку(Новый УникальныйИдентификатор));
		спрОбъектСсылка = спрОбъект.ПолучитьСсылкуНового();
	КонецЕсли;
	#КонецОбласти
	
	#Область ЗаполнениеДанныхСправочника
	
	// Основные реквизиты
	Если ЗначениеЗаполнено(спрДата) Тогда
		спрОбъект.Дата = спрДата;
	Иначе
		спрОбъект.Дата = грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "Дата", "Дата",, Дата(1,1,1));
	КонецЕсли;

	Если ЗначениеЗаполнено(спрНомер) Тогда
		спрОбъект.Номер = спрНомер;
	Иначе
		спрОбъект.Номер = грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "Номер",,, "");
	КонецЕсли;
		
	спрОбъект.Проведен = грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "Проведен", "Булево",, Ложь);
	спрОбъект.ПометкаУдаления = грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "ПометкаУдаления", "Булево",, Ложь);

	спрОбъект.ИдентификаторОбъекта = xdtoОбъект.Ссылка;
	спрОбъект.Наименование = НаименованиеТипаОбъекта + " <" + xdtoОбъект.Ссылка + ">";
	
	спрОбъект.ТипОбъекта = спрТипОбъекта;
	спрОбъект.Класс = КлассСообщения;
	спрОбъект.КлючОснования = спрКлючОснования;
	
	спрОбъект.Пакет = сшпОбщегоНазначения.ЗаписатьОбъектВПоток(Перечисления.сшпФорматыСообщений.XML, xdtoОбъект, Неопределено);
	
	Если спрОбъект.Метаданные().Реквизиты.Найти("ГотовКСборке") <> Неопределено Тогда
		спрОбъект.ГотовКСборке = ГотовКСборке;
	КонецЕсли;
	
	// Табличная часть СвязанныеОбъекты Временно не используется
	спрОбъект.СвязанныеОбъекты.Очистить();
	Для Каждого мсвЭлемент Из спрСвязанныеОбъекты Цикл
		НоваяСтрока = спрОбъект.СвязанныеОбъекты.Добавить();
		НоваяСтрока.Объект = мсвЭлемент;
	КонецЦикла;
	
	// Табличная часть РезультатСборки Временно не используется 
	//очистка табличной части при формировании пакета не предполагается
	//спрОбъект.РезультатСборки.Очистить();
	//Для Каждого мсвЭлемент Из спрРезультатСборки Цикл
	//	НоваяСтрока = спрОбъект.РезультатСборки.Добавить();
	//	НоваяСтрока.Объект = мсвЭлемент;
	//КонецЦикла;
	
	// Табличная часть ДополнительныеРеквизиты Временно не используется
	спрОбъект.ДополнительныеРеквизиты.Очистить();
	Для Каждого мсвЭлемент Из спрДополнительныеРеквизиты Цикл
		ЗаполнитьЗначенияСвойств(спрОбъект.ДополнительныеРеквизиты.Добавить(), мсвЭлемент);
	КонецЦикла;
	
	// Табличная часть времСерииСправкиБ 
	спрОбъект.времСерииСправкиБ.Очистить();

	Если КлассСообщения = "320" Или КлассСообщения = "335" Тогда
		
		Если ПараметрыВходящегоПакета.Свойство("ВидОперации")  Тогда
			времВидОперации = ПараметрыВходящегоПакета.ВидОперации;
		Иначе
			времВидОперации = Неопределено;		
		КонецЕсли;
		
		КолонкиСерийСправокБ = спрОбъект.времСерииСправкиБ.ВыгрузитьКолонки();
		
		Для Каждого мсвСтрока Из времСерииСправкиБ Цикл
			
			НоваяСтрока = спрОбъект.времСерииСправкиБ.Добавить();
			
			Для Каждого Колонка Из времСерииСправкиБ.Колонки Цикл
				
				ИмяКолонки = "врем" + Колонка.Имя;
				
				Если КолонкиСерийСправокБ.Колонки.Найти(ИмяКолонки) <> Неопределено Тогда
					НоваяСтрока[ИмяКолонки] = мсвСтрока[Колонка.Имя];
					Продолжить;
				КонецЕсли;
				
				Если Колонка.Имя = "грЧастьСправкиБ" Тогда
					НоваяСтрока.времЧастьСправкиБ = мсвСтрока[Колонка.Имя];
				КонецЕсли;
				
			КонецЦикла;
			
			НоваяСтрока.времВидОперации = времВидОперации;
			
		КонецЦикла;
	КонецЕсли;
	
	#КонецОбласти
	
	спрОбъект.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
	спрОбъект.ОбменДанными.Загрузка = Истина;
	спрОбъект.Записать();
	
	грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(спрОбъект.Ссылка, xdtoОбъект.Ссылка, ПараметрыОбработки.Отправитель, 
		Новый Структура("ВидИдентификатораСтрока, ДатаОбновления, Версия", ВидИдентификатора, ПараметрыОбработки.ВремяПакета, спрВерсияПакета));

	#Область ФормированиеДозапросовПриОтсутствииСвязанныхОбъектов
	ТабИдентификаторы = Новый ТаблицаЗначений;
	ТабИдентификаторы.Колонки.Добавить("Ключ", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(36)));
	ТабИдентификаторы.Колонки.Добавить("ВидДокумента", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	ТабИдентификаторы.Колонки.Добавить("КлассОбъекта", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	
	спрКлючПоиска = "";
	Если КлассСообщения = "281" Тогда
		спрКлючПоиска	= грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "ДокументОснование",, Ложь, "");
		спрВидДокумента	= "Заказ";
	ИначеЕсли КлассСообщения = "282"
		Или КлассСообщения = "289" Тогда
		спрКлючПоиска	= грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "ЗаказПоставщику",, Ложь, "");
		спрВидДокумента	= "Заказ";
	ИначеЕсли КлассСообщения = "320"
		Или КлассСообщения = "335" Тогда
		
		спрВидДокумента	= грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "ВидДокументаОснования");
		
		Если спрВидДокумента <> "ЕГАИС_Ввод_Остатков" Тогда
			спрКлючПоиска = грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "ДокументОснование",, Ложь, "");
		КонецЕсли;
		
	КонецЕсли;
	
	Если спрКлючПоиска <> "" Тогда
		НоваяСтрока = ТабИдентификаторы.Добавить();
		НоваяСтрока.Ключ			= спрКлючПоиска;
		НоваяСтрока.ВидДокумента	= спрВидДокумента;
	КонецЕсли;
	
	Если грОбработкаПакетовИнтеграции.РеквизитЕстьВПакете(xdtoОбъект, "СтруктураПодчиненности")
		 И xdtoОбъект.СтруктураПодчиненности <> Неопределено Тогда 
		
		xdtoСтруктураПодчиненности = xdtoОбъект.СтруктураПодчиненности.Последовательность();
		Для ИндексТаблицы = 0 По xdtoСтруктураПодчиненности.Количество()-1 Цикл
			
			xdtoСтрока = xdtoСтруктураПодчиненности.ПолучитьЗначение(ИндексТаблицы);
			стрВидДокумента = грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoСтрока, "ВидДокумента",,, "");
			
			Следущий = стрВидДокумента <> "Партии"
								И стрВидДокумента <> "СправкиБ";
								
			спрКлассОбъекта = "";
			
			Если КлассСообщения = "519" 
				И (стрВидДокумента = "КорректировкаЗаказа"
				ИЛИ стрВидДокумента = "СнятиеЗаказа"
				ИЛИ стрВидДокумента = "ПоступлениеНаТранзитныйСклад") Тогда 
				
				Если стрВидДокумента = "ПоступлениеНаТранзитныйСклад" Тогда
					спрКлассОбъекта = "282";
				КонецЕсли;
				
				Следущий = Ложь;
			КонецЕсли;
			
			Если Следущий Тогда
				Продолжить;
			КонецЕсли;
			
			стрКлюч = грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoСтрока, "Ссылка",, Ложь, "");
			
			НоваяСтрока = ТабИдентификаторы.Добавить();
			НоваяСтрока.Ключ			= стрКлюч;
			НоваяСтрока.ВидДокумента	= стрВидДокумента;
			НоваяСтрока.КлассОбъекта	= спрКлассОбъекта;
			
		КонецЦикла;
		
		Если КлассСообщения <> "320" И КлассСообщения <> "335" 
			И грОбработкаПакетовИнтеграции.РеквизитЕстьВПакете(xdtoОбъект, "ДокументОснование", Истина)
			И грОбработкаПакетовИнтеграции.РеквизитЕстьВПакете(xdtoОбъект, "ВидДокументаОснования", Истина) Тогда
			
			НоваяСтрока = ТабИдентификаторы.Добавить();
			НоваяСтрока.Ключ			= грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "ДокументОснование",, Ложь);
			НоваяСтрока.ВидДокумента	= грОбработкаПакетовИнтеграции.ЗначениеРеквизита(xdtoОбъект, "ВидДокументаОснования");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТабИдентификаторы.Количество() Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТабИдентификаторы", ТабИдентификаторы);
		Запрос.УстановитьПараметр("ВидИдентификатора", ВидИдентификатора);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабИдентификаторы.Ключ КАК Ключ,
		|	ТабИдентификаторы.ВидДокумента КАК ВидДокумента,
		|	ТабИдентификаторы.КлассОбъекта КАК КлассОбъекта
		|ПОМЕСТИТЬ ВтКлючиВидыДокументов
		|ИЗ
		|	&ТабИдентификаторы КАК ТабИдентификаторы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВзКлючиВидыДокументов.Ключ КАК Ключ,
		|	ВзКлючиВидыДокументов.ВидДокумента КАК ВидДокумента
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВтКлючиВидыДокументов.Ключ КАК Ключ,
		|		ВтКлючиВидыДокументов.ВидДокумента КАК ВидДокумента,
		|		ВтКлючиВидыДокументов.КлассОбъекта КАК КлассОбъекта
		|	ИЗ
		|		ВтКлючиВидыДокументов КАК ВтКлючиВидыДокументов
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВтКлючиВидыДокументов.Ключ,
		|		ВтКлючиВидыДокументов.ВидДокумента,
		|		ВтКлючиВидыДокументов.КлассОбъекта) КАК ВзКлючиВидыДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.грТаблицаПереходныхКлючейERP КАК ТПК
		|		ПО ВзКлючиВидыДокументов.Ключ = ТПК.ИдентификаторОбъекта
		|			И (ТПК.ВидИдентификатораСтрока = &ВидИдентификатора)
		|			И (ТПК.ОбъектERP ССЫЛКА Справочник.грОбъекты)
		|			И (ВЫБОР
		|				КОГДА ВзКлючиВидыДокументов.КлассОбъекта <> """"
		|					ТОГДА ВзКлючиВидыДокументов.КлассОбъекта = ВЫРАЗИТЬ(ТПК.ОбъектERP КАК Справочник.грОбъекты).Класс
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|ГДЕ
		|	ТПК.ОбъектERP ЕСТЬ NULL";
		
		спрРезультат= Запрос.Выполнить();
		
		Если Не спрРезультат.Пустой() Тогда
			спрВыборка = спрРезультат.Выбрать();
			
			Пока спрВыборка.Следующий() Цикл
				idflow = "УНИКУМ.Документ." + спрВыборка.ВидДокумента;
				грОбработкаПакетовИнтеграции.ЗарегистрироватьНенайденныйОбъект(НенайденныеОбъекты, спрВыборка.Ключ,
					"Документ." + спрВыборка.ВидДокумента, ВидИдентификатора, idflow, xdtoОбъект.Ссылка, xdtoОбъект.Ссылка, КлассСообщения); 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	#КонецОбласти

	~ВыйтиИзФормированияПакетаСборки:		