		
#Область Обработчик	
		
		#Область ПодготовкаПараметровОбработки
		
		//Получение тела сообщения ....
		xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(ФорматСообщения, ОбъектСообщение.Body);
		Если xdtoОбъект = Неопределено тогда
			ВызватьИсключение "Тело сообщения пустое или его не удалось прочитать."; 
		КонецЕсли;
		//ЗаписьЖурналаРегистрации(
		//"Datareon. Обработка сообщения", УровеньЖурналаРегистрации.Предупреждение, , Идентификатор, ОбъектСообщение.Body			
		//);
		_ = грОбработкаПакетовИнтеграции;
		
		ПараметрыОбработки = грОбработкаПакетовИнтеграции.ПолучитьПараметрыОбработкиСообщения(ОбъектСообщение, xdtoОбъект);
		
		ТаблицаИдентификаторовПотоков = грОбработкаПакетовИнтеграцииПовтИсп.ПолучитьТаблицуИдентификаторыПотоковESB();
		НенайденныеОбъекты = грОбработкаПакетовИнтеграции.СоздатьТаблицуНенайденныхОбъектов();
		
		// ++ Градум Вахрушев А.В. 15.03.2021 Задача № 20477
		ПараметрыОбработки = грОбработкаПакетовИнтеграции.ПолучитьПараметрыОбработкиСообщения(ОбъектСообщение, xdtoОбъект);
		ТаблицаИдентификаторовПотоков	= грОбработкаПакетовИнтеграцииПовтИсп.ПолучитьТаблицуИдентификаторыПотоковESB();
		НенайденныеОбъекты				= грОбработкаПакетовИнтеграции.СоздатьТаблицуНенайденныхОбъектов();				
		КлассСообщения					= "428";					
		
		МетаданныеПолноеИмяБП				= "Справочник.грБизнесПартнеры";
		ИдентификаторПотокаБП				= "523_Bitrix_BITRIXGUID";
		
		МетаданныеПолноеИмяКонтрагент		= "Справочник.Контрагенты";
		ИдентификаторПотокаКонтрагент		= "523_Bitrix_BITRIXGUID";
		
		МетаданныеПолноеИмяКЛ				= "Справочник.КонтактныеЛицаПартнеров";
		ИдентификаторПотокаКЛ				= "384_Bitrix_BITRIXGUID";
		
		МетаданныеПолноеИмяМенеджер			= "Справочник.грМенеджеры";
		ИдентификаторПотокаМенеджер			= "497_Bitrix_BITRIXGUID";
		
		ПараметрыОбработки.Вставить("ВыполнятьДозапросы", Истина);
		НенайденныеОбъекты				= грОбработкаПакетовИнтеграции.СоздатьТаблицуНенайденныхОбъектов();
		КэшСсылок						= Новый Соответствие;
		// -- Градум Вахрушев А.В. 15.03.2021 Задача № 20477
		
		// +дозапрос
		МетаданныеПолноеИмя = "Документ.CRM_Интерес";
		
		// ++ Градум Вахрушев А.В. 18.03.2021 Задача № 20477
		//ПараметрыОбработки = Новый Структура;
		// ПЖЛ НЕ ПЕРЕОПРЕДЕЛЯЙТЕ СТРУКТУРУ, ПАДАЕТ ОБРАБОТЧИК, ОНА ИНИЦИАЛИЗИРУЕТСЯ ВЫШЕ
		// -- Градум Вахрушев А.В. 18.03.2021 Задача № 20477
		ПараметрыОбработки.Вставить("РежимПерезаписи", "ПерезаписыватьСтарые");
		ПараметрыОбработки.Вставить("ВремяПакета", _.ЗначениеРеквизита(xdtoОбъект, "ВремяПакета", "Дата"));
		ПараметрыОбработки.Вставить("ЗадержкаПриНеудачнойБлокировке", 30);
		ПараметрыОбработки.Вставить("Отправитель", _.ПолучитьВнешнююСистему("Bitrix"));
		ПараметрыОбработки.Вставить("МаксКоличествоПопытокОжидания", 5);
		ПараметрыОбработки.Вставить("ЗадержкаПриДозапросе", 60);
		ПараметрыОбработки.Вставить("МаксВремяОжидания", 60);
		//ПараметрыОбработки.Вставить("МассоваяЗагрузка", ложь);
		//ПараметрыОбработки.Вставить("ВыполнятьДозапросы", ложь);
		
		Если ПараметрыОбработки.Свойство("МассоваяЗагрузка") = Ложь Тогда
			ПараметрыОбработки.Вставить("МассоваяЗагрузка", Ложь);
		КонецЕсли;
		
		ВидИдентификатора = "BITRIXGUID";
		
		КэшСсылок = Новый Соответствие;
		мсвОшибки = Новый Массив;
		
		ВсегдаОбновлятьДокументы = Истина;
		#КонецОбласти		
		
		#Область Запросы
		
		ЗапросСКСПоУмолчанию = Новый Запрос;
		ЗапросСКСПоУмолчанию.Текст = "ВЫБРАТЬ
		|	CRM_НастройкиПользователей.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.CRM_НастройкиПользователей КАК CRM_НастройкиПользователей
		|ГДЕ
		|	CRM_НастройкиПользователей.Пользователь = &Пользователь
		|	И CRM_НастройкиПользователей.Настройка = &Настройка";
		ЗапросСКСПоУмолчанию.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.CRM_НастройкиПользователей.CRMLAB_УзелСКСПоУмолчанию);
		
		ЗапросСКЮпоКодуУникум = Новый Запрос;
		ЗапросСКЮпоКодуУникум.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.грКодУникум = &грКодУникум
		|	И Номенклатура.грАГТ = Ложь";
		
		ЗапросЗаказПоИнтересу = Новый Запрос;
		ЗапросЗаказПоИнтересу.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаказКлиента.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.грИнтерес = &Интерес
		|	И НЕ &Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
		|	И НЕ ЗаказКлиента.ПометкаУдаления";
		
		ЗапросЗаказНаТВПоИнтересу = Новый Запрос;
		ЗапросЗаказНаТВПоИнтересу.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаказКлиента.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.грЗаказНаТочкуВыдачи КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Интерес = &Интерес
		|	И НЕ &Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
		|	И НЕ ЗаказКлиента.ПометкаУдаления";
		
		ЗапросСКСпоБП = Новый Запрос;
		ЗапросСКСпоБП.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Партнеры.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Партнеры КАК Партнеры
		|ГДЕ
		|	 Партнеры.грЗначениеУзла = &грЗначениеУзла";
		
		// ++ Градум Вахрушев А.В. 16.03.2021 Задача № 20629  
		грЧекККМВторичнаяПродажаОснование = Новый Запрос;
		грЧекККМВторичнаяПродажаОснование.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	грЧекККМВторичнаяПродажа.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.грЧекККМВторичнаяПродажа КАК грЧекККМВторичнаяПродажа
		|ГДЕ
		|	НЕ грЧекККМВторичнаяПродажа.ПометкаУдаления
		|	И грЧекККМВторичнаяПродажа.Основание = &ЗаказНаТочкуВыдачи";
		// -- Градум Вахрушев А.В. 16.03.2021 Задача № 20629  
		
		// ++ Градум Вахрушев А.В. 14.04.2021 Задача № ERP-330
		ГородИнтереса = Новый Запрос;
		ГородИнтереса.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	БизнесРегионы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БизнесРегионы КАК БизнесРегионы
		|ГДЕ
		|	БизнесРегионы.Наименование В (&ИмяГород)";
		// -- Градум Вахрушев А.В. 14.04.2021 Задача № ERP-330
		
		// ++ Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
		ЗапросСкидкиИКупоны = Новый Запрос;
		ЗапросСкидкиИКупоны.Текст = 
		"ВЫБРАТЬ
		|	УсловияПредоставленияСкидокНаценокгрСкидочныеКупоны.СкидочныйКупон КАК Купон,
		|	СкидкиНаценкиУсловияПредоставления.Ссылка КАК СкидкаНаценка
		|ИЗ
		|	Справочник.СкидкиНаценки.УсловияПредоставления КАК СкидкиНаценкиУсловияПредоставления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УсловияПредоставленияСкидокНаценок.грСкидочныеКупоны КАК УсловияПредоставленияСкидокНаценокгрСкидочныеКупоны
		|		ПО СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления = УсловияПредоставленияСкидокНаценокгрСкидочныеКупоны.Ссылка
		|ГДЕ
		|	УсловияПредоставленияСкидокНаценокгрСкидочныеКупоны.СкидочныйКупон = &Купон";
		
		
		ЗапросКупоны = Новый Запрос;
		ЗапросКупоны.Текст = 
		"ВЫБРАТЬ
		|	грСкидочныеКупоны.Ссылка КАК Купон
		|ИЗ
		|	Справочник.грСкидочныеКупоны КАК грСкидочныеКупоны
		|ГДЕ
		|	грСкидочныеКупоны.Наименование = &Наименование";
		
		// -- Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
		
		// ++ Градум Вахрушев А.В. 18.05.2021 Задача № ERP-412
		ЗапросПартнерПоУмолчанию = Новый Запрос;
		ЗапросПартнерПоУмолчанию.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
		|	грНастройкиПоУмолчаниюЗначения.Значение КАК УзелДУИВС
		|ИЗ
		|	Справочник.грНастройкиПоУмолчанию.Значения КАК грНастройкиПоУмолчаниюЗначения
		|ГДЕ
		|	грНастройкиПоУмолчаниюЗначения.Ссылка = ЗНАЧЕНИЕ(Справочник.грНастройкиПоУмолчанию.СКСДляДУИВС)
		|	И грНастройкиПоУмолчаниюЗначения.Ссылка.ЗначениеСписком = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	грНастройкиПоУмолчанию.Значение
		|ИЗ
		|	Справочник.грНастройкиПоУмолчанию КАК грНастройкиПоУмолчанию
		|ГДЕ
		|	грНастройкиПоУмолчанию.Ссылка = ЗНАЧЕНИЕ(Справочник.грНастройкиПоУмолчанию.СКСДляДУИВС)
		|	И грНастройкиПоУмолчанию.ЗначениеСписком = ЛОЖЬ";	
		// -- Градум Вахрушев А.В. 18.05.2021 Задача № ERP-412
		
		// ++ Градум Вахрушев А.В. 01.06.2021 Задача № ERP-438
		ЗапросИсторическиеСвойстваНСИ = Новый Запрос;
		ЗапросИсторическиеСвойстваНСИ.Текст = 
		"ВЫБРАТЬ
		|	грИсторическиеСвойстваНСИСрезПоследних.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.грИсторическиеСвойстваНСИ.СрезПоследних(
		|			&Период,
		|			ОбъектНСИ = &ОбъектНСИ
		|				И СвойствоНСИ = &СвойствоНСИ) КАК грИсторическиеСвойстваНСИСрезПоследних";
		// -- Градум Вахрушев А.В. 01.06.2021 Задача № ERP-438
		
		#КонецОбласти
		
		#Область Перечисления
		
		_ВремяДоставкиС = новый Соответствие;
		_ВремяДоставкиС.Вставить("602", Дата(1,1,1,07,30,0));
		_ВремяДоставкиС.Вставить("603", Дата(1,1,1,08,00,0));
		_ВремяДоставкиС.Вставить("604", Дата(1,1,1,08,30,0));
		_ВремяДоставкиС.Вставить("272", Дата(1,1,1,09,00,0));
		_ВремяДоставкиС.Вставить("273", Дата(1,1,1,09,30,0));
		_ВремяДоставкиС.Вставить("274", Дата(1,1,1,10,00,0));
		_ВремяДоставкиС.Вставить("275", Дата(1,1,1,10,30,0));
		_ВремяДоставкиС.Вставить("276", Дата(1,1,1,11,00,0));
		_ВремяДоставкиС.Вставить("277", Дата(1,1,1,11,30,0));
		_ВремяДоставкиС.Вставить("278", Дата(1,1,1,12,00,0));
		_ВремяДоставкиС.Вставить("279", Дата(1,1,1,12,30,0));
		_ВремяДоставкиС.Вставить("280", Дата(1,1,1,13,00,0));
		_ВремяДоставкиС.Вставить("281", Дата(1,1,1,13,30,0));
		_ВремяДоставкиС.Вставить("282", Дата(1,1,1,14,00,0));
		_ВремяДоставкиС.Вставить("283", Дата(1,1,1,14,30,0));
		_ВремяДоставкиС.Вставить("284", Дата(1,1,1,15,00,0));
		_ВремяДоставкиС.Вставить("285", Дата(1,1,1,15,30,0));
		_ВремяДоставкиС.Вставить("287", Дата(1,1,1,16,30,0));
		_ВремяДоставкиС.Вставить("288", Дата(1,1,1,17,00,0));
		_ВремяДоставкиС.Вставить("289", Дата(1,1,1,17,30,0));
		_ВремяДоставкиС.Вставить("290", Дата(1,1,1,18,00,0));
		_ВремяДоставкиС.Вставить("291", Дата(1,1,1,18,30,0));
		_ВремяДоставкиС.Вставить("292", Дата(1,1,1,19,00,0));
		_ВремяДоставкиС.Вставить("293", Дата(1,1,1,19,30,0));
		_ВремяДоставкиС.Вставить("294", Дата(1,1,1,20,00,0));
		_ВремяДоставкиС.Вставить("295", Дата(1,1,1,20,30,0));
		_ВремяДоставкиС.Вставить("296", Дата(1,1,1,21,00,0));
		_ВремяДоставкиС.Вставить("297", Дата(1,1,1,21,30,0));
		_ВремяДоставкиС.Вставить("298", Дата(1,1,1,22,00,0));
		
		_ВремяДоставкиПо = новый Соответствие;
		_ВремяДоставкиПо.Вставить("299", Дата(1,1,1,09,00,0));
		_ВремяДоставкиПо.Вставить("300", Дата(1,1,1,09,30,0));
		_ВремяДоставкиПо.Вставить("301", Дата(1,1,1,10,00,0));
		_ВремяДоставкиПо.Вставить("302", Дата(1,1,1,10,30,0));
		_ВремяДоставкиПо.Вставить("303", Дата(1,1,1,11,00,0));
		_ВремяДоставкиПо.Вставить("304", Дата(1,1,1,11,30,0));
		_ВремяДоставкиПо.Вставить("305", Дата(1,1,1,12,00,0));
		_ВремяДоставкиПо.Вставить("306", Дата(1,1,1,12,30,0));
		_ВремяДоставкиПо.Вставить("307", Дата(1,1,1,13,00,0));
		_ВремяДоставкиПо.Вставить("308", Дата(1,1,1,13,30,0));
		_ВремяДоставкиПо.Вставить("309", Дата(1,1,1,14,00,0));
		_ВремяДоставкиПо.Вставить("310", Дата(1,1,1,14,30,0));
		_ВремяДоставкиПо.Вставить("311", Дата(1,1,1,15,00,0));
		_ВремяДоставкиПо.Вставить("312", Дата(1,1,1,15,30,0));
		_ВремяДоставкиПо.Вставить("313", Дата(1,1,1,16,00,0));
		_ВремяДоставкиПо.Вставить("314", Дата(1,1,1,16,30,0));
		_ВремяДоставкиПо.Вставить("315", Дата(1,1,1,17,00,0));
		_ВремяДоставкиПо.Вставить("316", Дата(1,1,1,17,30,0));
		_ВремяДоставкиПо.Вставить("317", Дата(1,1,1,18,00,0));
		_ВремяДоставкиПо.Вставить("318", Дата(1,1,1,18,30,0));
		_ВремяДоставкиПо.Вставить("319", Дата(1,1,1,19,00,0));
		_ВремяДоставкиПо.Вставить("320", Дата(1,1,1,19,30,0));
		_ВремяДоставкиПо.Вставить("321", Дата(1,1,1,20,00,0));
		_ВремяДоставкиПо.Вставить("322", Дата(1,1,1,20,30,0));
		_ВремяДоставкиПо.Вставить("323", Дата(1,1,1,21,00,0));
		_ВремяДоставкиПо.Вставить("324", Дата(1,1,1,21,30,0));
		_ВремяДоставкиПо.Вставить("325", Дата(1,1,1,22,00,0));
		
		ЗаказОтФизЛица = новый Соответствие;
		ЗаказОтФизЛица.Вставить("582", Истина);
		ЗаказОтФизЛица.Вставить("583", Истина); // 22.04.2021 Вахрушев, Зотов, Хасанов убрали комент
		
		ЦенаВключаетНДС = Новый Соответствие;
		ЦенаВключаетНДС.Вставить("Y", Истина);
		ЦенаВключаетНДС.Вставить("N", Ложь);
		
		СтавкиНДС = Новый Соответствие;
		СтавкиНДС.Вставить(20, Перечисления.СтавкиНДС.НДС20);
		СтавкиНДС.Вставить(18, Перечисления.СтавкиНДС.НДС18);
		СтавкиНДС.Вставить(10, Перечисления.СтавкиНДС.НДС10);
		СтавкиНДС.Вставить(0, Перечисления.СтавкиНДС.НДС0);
		СтавкиНДС.Вставить(Неопределено, Перечисления.СтавкиНДС.БезНДС);
		
		ФормыОплаты = Новый Соответствие;
		ФормыОплаты.Вставить("44", Перечисления.ФормыОплаты.Безналичная);
		ФормыОплаты.Вставить("45", Перечисления.ФормыОплаты.Наличная);
		ФормыОплаты.Вставить("250", Перечисления.ФормыОплаты.ПлатежнаяКарта);
		
		ЕИ = Новый Соответствие;
		ЕИ.Вставить("796", "Штука");
		ЕИ.Вставить("1",   "Бутылка");
		ЕИ.Вставить("2",   "Услуга");
		
		СтатусыЗаказаКлиента = Новый Соответствие;
		СтатусыЗаказаКлиента.Вставить("NEW"                , Перечисления.СтатусыЗаказовКлиентов.Новый);
		СтатусыЗаказаКлиента.Вставить("PREPARATION"        , Перечисления.СтатусыЗаказовКлиентов.НеСогласован);
		СтатусыЗаказаКлиента.Вставить("PREPAYMENT_INVOICE" , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("EXECUTING"          , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("APOLOGY"            , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("1"                  , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("2"                  , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("4"                  , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("5"                  , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("17"                 , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("19"                 , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("20"                 , Перечисления.СтатусыЗаказовКлиентов.ОбработанМенеджером);
		СтатусыЗаказаКлиента.Вставить("WON"                , Перечисления.СтатусыЗаказовКлиентов.Закрыт);
		
		УНК = Новый Соответствие;
		УНК.Вставить("27", Ложь);
		УНК.Вставить("26", Истина);
		
		Валюты = Новый Соответствие;
		Валюты.Вставить("RUB", "643");
		Валюты.Вставить("USD", "840");
		Валюты.Вставить("EUR", "978");
		Валюты.Вставить("UAH", "980");
		Валюты.Вставить("BYN", "933");
		
		КатегорииДляСозданияЗаказаНаТочкуВыдачи = Новый Массив;
		КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("4");
		// ++ Градум Вахрушев. А.В. 25.06.2021
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("2");		
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("5"); 
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("7");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("8");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("9");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("10");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("11");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("12");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("13");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("15");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("16"); 
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("17");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("18");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("19");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("20");
		//КатегорииДляСозданияЗаказаНаТочкуВыдачи.Добавить("21");
		// -- Градум Вахрушев. А.В. 25.06.2021
		
		КатегорииДляСозданияЧекаВторичнойПродажи = КатегорииДляСозданияЗаказаНаТочкуВыдачи;
		
		КатегорииДляСозданияЗаказаКлиента = Новый Массив;
		КатегорииДляСозданияЗаказаКлиента.Добавить("0");
		КатегорииДляСозданияЗаказаКлиента.Добавить("3");
		КатегорииДляСозданияЗаказаКлиента.Добавить("6"); 
		
		КатегорииДляСозданияИсторическаяРеализация = Новый Массив;
		КатегорииДляСозданияИсторическаяРеализация.Добавить("0");
		КатегорииДляСозданияИсторическаяРеализация.Добавить("3");
		КатегорииДляСозданияИсторическаяРеализация.Добавить("6"); 
		
		#КонецОбласти
		
		#Область ОбщиеЗначения
		
		УзелСКС = Неопределено;
		Организация = _.НайтиСсылкуПоКлючу("   D     3", "Справочник.Организации",, "УНИКУМGUID").Ссылка;;
		Подразделение = Справочники.СтруктураПредприятия.НайтиПоКоду("25101");
		СкладРеализации = _.НайтиСсылкуПоКлючу("   V     Y", "Справочник.Склады",, "УНИКУМGUID").Ссылка;
		ВнешняяСистемаУникум = _.ПолучитьВнешнююСистему("Уникум");
		// ++ Градум Вахрушев А.В. 17.05.2021 Задача № ERP-404
		грАвтор = Пользователи.ТекущийПользователь();
		// -- Градум Вахрушев А.В. 17.05.2021 Задача № ERP-404
		
		#КонецОбласти
		
		#Область ОсновнойАлгоритмОбработкиСпискаЗаказов
		
		//+++Начало Гарчуков (20 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-1086
		МассивИдУдачноОбработанныхСделок = Новый Массив;
		УИДСообщения = Новый УникальныйИдентификатор(Идентификатор);
		
		НужноСохранятьУспешноОбработанныеСделки = xdtoОбъект.Data.Последовательность().Количество() > 1;
		Если НужноСохранятьУспешноОбработанныеСделки Тогда
			ЗапросИдОбработанныхСделок = Новый Запрос;
			ЗапросИдОбработанныхСделок.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	грЗаданияОтложеннойОбработкиДанных.Данные КАК Данные
			|ИЗ
			|	РегистрСведений.грЗаданияОтложеннойОбработкиДанных КАК грЗаданияОтложеннойОбработкиДанных
			|ГДЕ
			|	грЗаданияОтложеннойОбработкиДанных.Задание = &Задание";
			ЗапросИдОбработанныхСделок.УстановитьПараметр("Задание", УИДСообщения);
			
			РезультатЗапросаПоИдОбработанныхСделок = ЗапросИдОбработанныхСделок.Выполнить();
			Если не РезультатЗапросаПоИдОбработанныхСделок.Пустой() Тогда
				Выборка = РезультатЗапросаПоИдОбработанныхСделок.Выбрать();
				Выборка.Следующий();
				МассивИдУдачноОбработанныхСделок = Выборка.Данные.Получить();
			КонецЕсли;
		КонецЕсли;
		//---Конец Гарчуков (20 сентября 2021)
		
		КэшКупонов = Новый Соответствие;
		
		Последовательность = xdtoОбъект.Data.Последовательность();
		Для инд = 0 по Последовательность.Количество()-1 цикл
			xdtoОбъект = Последовательность.ПолучитьЗначение(инд);
			
			ТекстОшибки = "";
			
			Ключ = _.ЗначениеРеквизита(xdtoОбъект, "ID", "Строка", Ложь, "");
			
			//+++Градум Гарчуков (20 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-1086
			Если МассивИдУдачноОбработанныхСделок.Найти(Ключ) <> Неопределено Тогда //Уже загружали, пропускаем
				Продолжить;
			КонецЕсли;
			//---Градум Гарчуков (20 сентября 2021)
			#Область Купоны
			
			// ++ Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360			
			тзСкидкиИКупоны = Неопределено;
			Купон = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1526287400", "Строка", Ложь, "");
			
			// ++ Градум Вахрушев А.В. 22.06.2021
			Если (ЗначениеЗаполнено(Купон)) Тогда				
				НачатьТранзакцию();
				Попытка
					Блокировка = Новый БлокировкаДанных;
					Эл = Блокировка.Добавить("Справочник.грСкидочныеКупоны");
					Эл.УстановитьЗначение("Наименование", Купон);
					Блокировка.Заблокировать();					
				Исключение       						
					Пока ТранзакцияАктивна() Цикл
						ОтменитьТранзакцию();
					КонецЦикла;
					СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;
					Задержка = ПараметрыОбработки.ЗадержкаПриНеудачнойБлокировке;
					
					//++ Градум Гусев А.С. 12.07.2021 
					мсвОшибки.Добавить("Ошибка обработки сделки ID=" + Ключ + ": неудачная блокировка купона " + Купон + ". Сообщение отложено на " + Задержка); 
					//-- Градум Гусев А.С. 12.07.2021
					
					Перейти ~Возврат;					
				КонецПопытки;
				// -- Градум Вахрушев А.В. 22.06.2021
				
				ЗапросКупоны.УстановитьПараметр("Наименование", Купон);
				РезультатКупон							= ЗапросКупоны.Выполнить();
				ОбъектКупон								= Неопределено;
				Если (РезультатКупон.Пустой()) Тогда
					ОбъектКупон							= Справочники.грСкидочныеКупоны.СоздатьЭлемент();
					ОбъектКупон.Наименование			= Купон;
					ОбъектКупон.ОбменДанными.Загрузка	= Истина;
					ОбъектКупон.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
					//+++Начало Гарчуков (02 августа 2021) https://ludingkis.atlassian.net/browse/ERP-585
					ОбъектКупон.Активен = Истина;
					//---Конец Гарчуков (02 августа 2021)
					ОбъектКупон.Записать();
					Купон								= ОбъектКупон.Ссылка;
				Иначе
					ВыборкаКупон	= РезультатКупон.Выбрать(); ВыборкаКупон.Следующий();
					Купон			= ВыборкаКупон.Купон;
				КонецЕсли;						
				Если (ОбъектКупон <> Неопределено) Тогда
					ЗапросСкидкиИКупоны.УстановитьПараметр("Купон", Купон); 				
					тзСкидкиИКупоны = ЗапросСкидкиИКупоны.Выполнить().Выгрузить();				
					тзСкидкиИКупоны.Индексы.Добавить("СкидкаНаценка");						
				КонецЕсли;
			КонецЕсли;
			
			// ++ Градум Вахрушев А.В. 22.06.2021
			Пока ТранзакцияАктивна() Цикл
				ЗафиксироватьТранзакцию();
			КонецЦикла;
			// -- Градум Вахрушев А.В. 22.06.2021	
			// -- Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360			
			
			#КонецОбласти  //Купоны
			
			#Область АдресДоставки
			
			//+++Начало Гарчуков (16 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-617
			//АдресДоставкиСтрокой = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_DELIV_ADDR", "Строка", Ложь, "");
			АдресДоставкиСтрокой = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_DELIV_ADDR", "Строка", Истина, "");
			//---Конец Гарчуков (16 сентября 2021)			НачатьТранзакцию();
			
			АдресДоставки = Справочники.грАдресаДоставки.ПустаяСсылка(); 
			Если										
				ЗначениеЗаполнено(АдресДоставкиСтрокой) 
				//И ЗначениеЗаполнено(БизнесПартнер) 
				// ++ Градум Вахрушев А.В. 24.06.2021
				// И Не БизнесПартнер.ТочкаВыдачи
				// ++ Градум Вахрушев А.В. 18.06.2021 Задача № ERP-460
				// https://ludingkis.atlassian.net/browse/ERP-460
				//// Датареон, Новиков, 26.09.2020 -->
				//И Не _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1556086186") = "583"
				//// <-- Датареон, Новиков, 26.09.2020
				//И БизнесПартнер <> грБизнесПартнерЮЛ
				// -- Градум Вахрушев А.В. 18.06.2021 Задача № ERP-451
				// -- Градум Вахрушев А.В. 24.06.2021
				тогда
				
				НачатьТранзакцию();
				
				//+++Начало Гарчуков (14 мая 2021) https://ludingkis.atlassian.net/browse/ERP-391
				НаименованиеАдреса = АдресДоставкиСтрокой;
				
				БлокировкаАдресаДоставки = Новый БлокировкаДанных;  
				ЭлементыБлокировкиАдресаДоставки = БлокировкаАдресаДоставки.Добавить("Справочник.грАдресаДоставки");
				ЭлементыБлокировкиАдресаДоставки.Режим = РежимБлокировкиДанных.Исключительный;
				//+++Начало Гарчуков (25 августа 2021) https://ludingkis.atlassian.net/browse/ERP-617
				//ЭлементыБлокировкиАдресаДоставки.УстановитьЗначение("Наименование", НаименованиеАдреса);  
				ЭлементыБлокировкиАдресаДоставки.УстановитьЗначение("ХешАдреса", Справочники.грАдресаДоставки.РассчитатьХешАдреса(НаименованиеАдреса));  
				//---Конец Гарчуков (25 августа 2021)
				
				//ЗаблокироватьКлючСПопытками							
				КоличествоПопытокБлокировки = 5; СчетчикПопыток = 0; БлокировкаАдресаДоставкиУстановлена = Ложь;
				
				Пока СчетчикПопыток < КоличествоПопытокБлокировки Цикл
					Попытка
						БлокировкаАдресаДоставки.Заблокировать();
						БлокировкаАдресаДоставкиУстановлена = Истина;
						Прервать;
					Исключение
						ОписаниеОшибки = ОписаниеОшибки();
					КонецПопытки;
					СчетчикПопыток = СчетчикПопыток + 1;
				КонецЦикла; 
				Если Не БлокировкаАдресаДоставкиУстановлена Тогда 
					//ВызватьИсключение "Ошибка устновки блокировки на справочник ""Адрес доставки""";								
					Задержка = 60;
					СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;
					
					//++ Градум Гусев А.С. 12.07.2021 
					мсвОшибки.Добавить("Ошибка обработки сделки ID=" + Ключ + ": неудачная блокировка адреса доставки. Сообщение отложено на " + Задержка); 
					//-- Градум Гусев А.С. 12.07.2021
					
					Перейти ~Возврат;
				КонецЕсли;			
				//---Конец Гарчуков (14 мая 2021)
				
				//+++Начало Гарчуков (25 августа 2021) https://ludingkis.atlassian.net/browse/ERP-617
				//АдресДоставки = Справочники.грАдресаДоставки.НайтиПоНаименованию(АдресДоставкиСтрокой, Истина);
				АдресДоставки = Справочники.грАдресаДоставки.НайтиПоСтроковомуПредставлению(АдресДоставкиСтрокой);
				//---Конец Гарчуков (25 августа 2021)
				
				Если АдресДоставки.Пустая() тогда
					
					ОбъектОбработки = Справочники.грАдресаДоставки.СоздатьЭлемент();
					//+++Градум Гарчуков (25 августа 2021) https://ludingkis.atlassian.net/browse/ERP-617
					ОбъектОбработки.КомменарийИнтеграции = СтрШаблон("ТПК :%1 Обработчик: %2 Дата: %3", Ключ, "Сделки_Bitrix_ERP.In", ПараметрыОбработки.ВремяПакета);
					//---Градум Гарчуков (25 августа 2021)
					
					//+++Начало Гарчуков (15 июля 2021) https://ludingkis.atlassian.net/browse/ERP-509
					//Старый код пока оставим
					//
					//// ++ Градум Вахрушев А.В. 08.07.2021 Задача № ERP-500
					//ИндексФактическийАД	= _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1547101358", "Строка", Ложь, "");
					//ГородАД			   	= _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1547101369", "Строка", Ложь, "");
					//УлицаАД			   	= _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1547101380", "Строка", Ложь, "");
					//ДомАД			   	= _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1547101392", "Строка", Ложь, "");
					//Если (ИндексФактическийАД <> "" И ГородАД <> "" И УлицаАД <> "" И ДомАД <> "") Тогда
					//	ОбъектОбработки.ИндексФактический	= ИндексФактическийАД;
					//	ОбъектОбработки.Город				= ГородАД;
					//	ОбъектОбработки.Улица				= УлицаАД;
					//	ОбъектОбработки.Дом					= ДомАД;							
					//КонецЕсли;						
					//// -- Градум Вахрушев А.В. 08.07.2021 Задача № ERP-500
					//
					//
					//ОбъектАдреса = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияПоПредставлению(АдресДоставкиСтрокой, Перечисления.ТипыКонтактнойИнформации.Адрес);
					//
					//
					//ОбъектОбработки.Наименование = АдресДоставкиСтрокой;
					//ОбъектОбработки.Архивный = Ложь;
					//// ++ Градум Вахрушев А.В. 08.07.2021 Задача № ERP-500
					////ОбъектОбработки.ИндексФактический = ОбъектАдреса.ZIPcode;
					//Если (НЕ ЗначениеЗаполнено(ОбъектОбработки.ИндексФактический)) Тогда
					//	ОбъектОбработки.ИндексФактический = ОбъектАдреса.ZIPcode;
					//КонецЕсли;						
					//// -- Градум Вахрушев А.В. 08.07.2021 Задача № ERP-500
					//
					//
					//ОбъектОбработки.АдресФактический = АдресДоставкиСтрокой;						
					//
					//ВидКИ = Справочники.ВидыКонтактнойИнформации.грАдресДоставкиФактический;
					//
					//КонтактнаяИнформация = ОбъектОбработки.удалитьКонтактнаяИнформация.Найти(ВидКИ, "Вид");
					//Если КонтактнаяИнформация = Неопределено тогда
					//	КонтактнаяИнформация = ОбъектОбработки.удалитьКонтактнаяИнформация.Добавить();
					//КонецЕсли;	
					//
					//КонтактнаяИнформация.Вид = ВидКИ;
					//КонтактнаяИнформация.Тип = ВидКИ.Тип;
					//КонтактнаяИнформация.Представление = АдресДоставкиСтрокой;
					//КонтактнаяИнформация.Страна = ОбъектАдреса.country;
					//КонтактнаяИнформация.Значение = УправлениеКонтактнойИнформациейСлужебный.СтруктураВСтрокуJSON(ОбъектАдреса);
					
				Иначе
					ОбъектОбработки = АдресДоставки.ПолучитьОбъект();
				КонецЕсли;
				
				ОбъектОбработки.Наименование 	 = АдресДоставкиСтрокой;
				ОбъектОбработки.АдресФактический = АдресДоставкиСтрокой;
				ОбъектОбработки.Архивный 		 = Ложь;
				
				ИндексАД	 = СокрЛП(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1547101358", "Строка", Ложь, ""));
				РегионАД	 = СокрЛП(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1547101369", "Строка", Ложь, ""));
				ГородАД		 = СокрЛП(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532958193", "Строка", Ложь, ""));
				УлицаАД		 = СокрЛП(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1547101380", "Строка", Ложь, ""));
				ДомАД		 = СокрЛП(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1547101392", "Строка", Ложь, ""));
				
				Если ЗначениеЗаполнено(ИндексАД+РегионАД+ГородАД+УлицаАД+ДомАД) Тогда
					ОбъектОбработки.ИндексФактический	= ИндексАД;
					ОбъектОбработки.Регион 				= РегионАД;
					ОбъектОбработки.Город				= ГородАД;
					ОбъектОбработки.Улица				= УлицаАД;
					ОбъектОбработки.Дом					= ДомАД;
					
					//Заполняем стандартную структуру адреса, чтобы из нее получить необходиму строку JSON в формате ФИАС
					СтруктураАдресаДетально = УправлениеКонтактнойИнформацией.ОписаниеНовойКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес); // Новый адрес
					СтруктураАдресаДетально.AddressType = РаботаСАдресамиКлиентСервер.АдминистративноТерриториальныйАдрес();
					
					СтруктураАдресаДетально.Вставить("type", 		"Адрес");
					СтруктураАдресаДетально.Вставить("value",		АдресДоставкиСтрокой);
					СтруктураАдресаДетально.Вставить("ZIPcode", 	ИндексАД);
					СтруктураАдресаДетально.Вставить("area", 		РегионАД);
					СтруктураАдресаДетально.Вставить("city",		ГородАД);
					СтруктураАдресаДетально.Вставить("street",		УлицаАД);
					СтруктураАдресаДетально.Вставить("houseNumber", ДомАД);							
					
					//Кусок старого кода, на всякий случай
					СтруктураАдресаИзНаименования = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияПоПредставлению(АдресДоставкиСтрокой, Перечисления.ТипыКонтактнойИнформации.Адрес);
					Если (НЕ ЗначениеЗаполнено(СтруктураАдресаДетально.ZIPcode)) Тогда
						СтруктураАдресаДетально.Вставить("ZIPcode", СтруктураАдресаИзНаименования.ZIPcode);							
						ОбъектОбработки.ИндексФактический = СтруктураАдресаИзНаименования.ZIPcode;
					КонецЕсли;
					СтруктураАдресаДетально.Вставить("country", 	СтруктураАдресаИзНаименования.country);
					СтруктураАдресаДетально.Вставить("countryCode", СтруктураАдресаИзНаименования.countryCode);
					Если ЗначениеЗаполнено(СтруктураАдресаИзНаименования.country) 
						И ВРег(СтруктураАдресаИзНаименования.country) = "РОССИЯ" Тогда
						ОбъектОбработки.Страна = Справочники.СтраныМира.НайтиПоКоду("643");
					КонецЕсли;
				Иначе
					//Если все поля не заполненны, попытаемся получить разложить представление адреса и запишем как есть
					СтруктураАдресаДетально = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияПоПредставлению(АдресДоставкиСтрокой, Перечисления.ТипыКонтактнойИнформации.Адрес);	
					СтрокаАдресаJson = УправлениеКонтактнойИнформациейСлужебный.СтруктураВСтрокуJSON(СтруктураАдресаДетально);
					ОбъектОбработки.ЗаполнитьПоСтрокеФИАС(СтрокаАдресаJson);
				КонецЕсли;					
				//---Конец Гарчуков (15 июля 2021)
				
				ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
				//+++Начало Гарчуков (15 июля 2021) https://ludingkis.atlassian.net/browse/ERP-509
				//ОбъектОбработки.ОбменДанными.Загрузка = Истина;
				//---Конец Гарчуков (15 июля 2021)
				ОбъектОбработки.Записать();
				
				АдресДоставки = ОбъектОбработки.Ссылка;
				
				//+++Начало Гарчуков (23 августа 2021) Запись в ТПК с ключом сделки не делать совсем - Гусев
				//// ++ Градум Вахрушев А.В. 08.07.2021 Задача № ERP-500
				//грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
				//			АдресДоставки, 
				//			Ключ, 
				//			ПараметрыОбработки.Отправитель,  
				//			новый Структура("ВидИдентификатораСтрока, ДатаОбновления",
				//							 ВидИдентификатора,		  ПараметрыОбработки.ВремяПакета)
				//			);
				//// -- Градум Вахрушев А.В. 08.07.2021 Задача № ERP-500
				//---Конец Гарчуков (23 августа 2021)
				
				//+++Начало Гарчуков (15 июля 2021) https://ludingkis.atlassian.net/browse/ERP-509
				//КонецЕсли;	
				//---Конец Гарчуков (15 июля 2021)
				
				ЗафиксироватьТранзакцию();
				
			КонецЕсли;
			
			
			#КонецОбласти //АдресДоставки
			
			
			#Область ПоискИнтереса
			
			НачатьТранзакцию();
				
			// Блокировка 
			Если НЕ грОбработкаПакетовИнтеграции.ЗаблокироватьКлючСПопытками(Ключ, ВидИдентификатора) Тогда 
				
				ОтменитьТранзакцию();
				СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;
				Задержка = ПараметрыОбработки.ЗадержкаПриНеудачнойБлокировке;
				
				мсвОшибки.Добавить("Ошибка обработки сделки ID=" + Ключ + ": неудачная блокировка ключа. Сообщение отложено на " + Задержка); 
				
				Перейти ~Возврат;
				
			КонецЕсли;
			
			сткРезультатПоискаИнтереса = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
			Ключ, 
			"Документ.CRM_Интерес", 
			ВидИдентификатора, 
			ПараметрыОбработки);
			
			#КонецОбласти
			
			// --> Изменил Лемцё 16.10.2020
			КодСостояния = _.ЗначениеРеквизита(xdtoОбъект, "STAGE_ID", "Строка", Ложь, "");
			
			// Тимофеев 19947
			ЧастиКодаСостоянияИсходного=СтрРазделить(КодСостояния, ";");   
			Если ЧастиКодаСостоянияИсходного.Количество()>0 тогда
				КодСостояния =ЧастиКодаСостоянияИсходного[0];
			КонецЕсли;
			// 19947 - конец
			
			// ++ Градум Вахрушев А.В. 29.03.2021 Задача № ERP-281
			ПерезаписыватьДокументы = Ложь;			
			// -- Градум Вахрушев А.В. 29.03.2021 Задача № ERP-281			
			
			// ++ Градум Вахрушев А.В. 14.04.2021 Задача № ERP-330
			массСостояния			= СтрРазделить(КодСостояния, ";");
			ЭтоНовыйДокумент		= Ложь;
			Для Каждого КодСостоянияСтрока Из массСостояния Цикл
				Если (ЭтоНовыйДокумент) Тогда
					Прервать;
				КонецЕсли;				
				ЭтоНовыйДокумент	= СтрНайти(НРег(КодСостоянияСтрока), "new") <> 0 ;
			КонецЦикла;			
			// -- Градум Вахрушев А.В. 14.04.2021 Задача № ERP-330
			
			КодСостоянияДляПоиска = "%" + КодСостояния + "%";
			СостояниеИнтереса = Неопределено;
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	CRM_СостоянияИнтересов.Ссылка.КодСостояния КАК КодСостояния,
			|	CRM_СостоянияИнтересов.Ссылка КАК Ссылка,
			|	CRM_СостоянияИнтересов.РазрешитьРедактированиеТовары КАК РазрешитьРедактированиеТовары
			|ИЗ
			|	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
			|ГДЕ
			|	CRM_СостоянияИнтересов.КодСостояния ПОДОБНО &КодСостояния";
			Запрос.УстановитьПараметр("КодСостояния",КодСостоянияДляПоиска);
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				КодСостоянияДляПоиска = ВыборкаДетальныеЗаписи.КодСостояния;
				ЧастиКодаСостояния = СтрРазделить(КодСостоянияДляПоиска, ";");
				Для Каждого Элем ИЗ ЧастиКодаСостояния Цикл
					Вхождение = СтрНайти(КодСостоянияДляПоиска, КодСостояния);
					Если КодСостояния = Элем Тогда
						СостояниеИнтереса = ВыборкаДетальныеЗаписи.Ссылка;
						//++ Градум Гусев А.С. 17.09.2021 
						
						Если ЗначениеЗаполнено(сткРезультатПоискаИнтереса.Ссылка) Тогда
							СостояниеИнтересаИзСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(сткРезультатПоискаИнтереса.Ссылка, "СостояниеИнтереса");
							РазрешитьРедактированиеТоварыИзСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СостояниеИнтересаИзСсылки, "РазрешитьРедактированиеТовары");
							ОбработкаВЕРПизСсылки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(сткРезультатПоискаИнтереса.Ссылка, "грОбработкаВERP");
							
							Если ОбработкаВЕРПизСсылки И ЗначениеЗаполнено(СостояниеИнтересаИзСсылки) Тогда
								Если НЕ РазрешитьРедактированиеТоварыИзСсылки И НЕ ВыборкаДетальныеЗаписи.РазрешитьРедактированиеТовары Тогда
									ПерезаписыватьДокументы = Истина;
								Иначе
									ПерезаписыватьДокументы = Ложь;
								КонецЕсли;
							Иначе
								ПерезаписыватьДокументы = Истина;
							КонецЕсли;
						Иначе
							
							ПерезаписыватьДокументы = Истина;
						КонецЕсли;
						//-- Градум Гусев А.С. 17.09.2021
						
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ЗначениеЗаполнено(СостояниеИнтереса) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			
			
			// Датареон, Новиков, 20.08.2020 -->
			Если xdtoОбъект.CATEGORY_ID = "1" Тогда 
				//+++Градум Гарчуков (20 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-1086
				МассивИдУдачноОбработанныхСделок.Добавить(Ключ);
				//---Градум Гарчуков (20 сентября 2021)
				
				ЗаписьЖурналаРегистрации(
				"Datareon. Обработка сообщения", УровеньЖурналаРегистрации.Предупреждение, , Идентификатор, 
				"Обработка сообщения " + Идентификатор +": Сделка " + Ключ+ " не загружена т.к. категория - Академия L-wine"
				);
				Продолжить;
			ИначеЕсли xdtoОбъект.CATEGORY_ID = "14" Тогда 
				//+++Градум Гарчуков (20 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-1086
				МассивИдУдачноОбработанныхСделок.Добавить(Ключ);
				//---Градум Гарчуков (20 сентября 2021)
				
				ЗаписьЖурналаРегистрации(
				"Datareon. Обработка сообщения", УровеньЖурналаРегистрации.Предупреждение, , Идентификатор, 
				"Обработка сообщения " + Идентификатор +": Сделка " + Ключ+ " не загружена т.к. категория - Академия Вина (Воронеж)"
				);
				Продолжить;
			КонецЕсли;
			// <-- Датареон, Новиков, 20.08.2020			
			Попытка
				
				#Область ОбщиеРеквизиты				
				
				ТочкаВыдачи = Неопределено;
				Если xdtoОбъект.CATEGORY_ID = "4" Тогда
					ЗначениеПоиска =  _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1549889644", "Строка", Ложь, "");
					Если ЗначениеЗаполнено(ЗначениеПоиска) тогда						
						
						КлючДозапросБП = ЗначениеПоиска;
						КлючБизнесПартнера = "ТВ-" + ЗначениеПоиска;
						
						ДопПараметрыДозапросов = Новый Структура;
						ДопПараметрыДозапросов.Вставить( "ID",  КлючДозапросБП );
						ДопПараметрыДозапросов.Вставить( "Класс", КлассСообщения );			
						
						
						ТочкаВыдачи = грОбработкаПакетовИнтеграции.НайтиОбъектПоКлючу(КлючБизнесПартнера, МетаданныеПолноеИмяБП,
						ВидИдентификатора, ИдентификаторПотокаБП,
						, КэшСсылок, ДопПараметрыДозапросов);
						
						СтрокаНашел = НенайденныеОбъекты.Найти(КлючБизнесПартнера, "Ключ");
						Если (СтрокаНашел <> Неопределено) Тогда
							СтрокаНашел.Ключ = КлючДозапросБП;
						КонецЕсли;						
						// ++ Градум Вахрушев А.В. 29.06.2021 Задача № ERP-482
					Иначе						
						ТочкаВыдачи = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("ТочкаВыдачиНеЗаполнена");
						// -- Градум Вахрушев А.В. 29.06.2021 Задача № ERP-482 					
					КонецЕсли;					
					//Иначе
					//	Запрос = Новый Запрос;
					//	Запрос.Текст = 
					//	"ВЫБРАТЬ
					//	|	грИсторическиеСвойстваНСИ.ОбъектНСИ КАК ОбъектНСИ
					//	|ИЗ
					//	|	РегистрСведений.грИсторическиеСвойстваНСИ КАК грИсторическиеСвойстваНСИ
					//	|ГДЕ
					//	|	грИсторическиеСвойстваНСИ.СвойствоНСИ = &СвойствоНСИ
					//	|	И грИсторическиеСвойстваНСИ.Значение = &Значение";
					//	Запрос.УстановитьПараметр("Значение", xdtoОбъект.CATEGORY_ID);
					//	Запрос.УстановитьПараметр("СвойствоНСИ", ПланыВидовХарактеристик.грСвойстваНСИ.грИдНаправленийБитрикс);
					//	
					//	Выборка = Запрос.Выполнить().Выбрать();
					//	Если Выборка.Следующий() тогда
					//		ТочкаВыдачи = Выборка.ОбъектНСИ;
					//	КонецЕсли;
				КонецЕсли;
				
				ДатаДокумента        = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "DATE_CREATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				// ++ Градум Вахрушев А.В. 09.06.2021 Задача № https://ludingkis.atlassian.net/browse/ERP-452
				Если (Год(ДатаДокумента) < 1000) Тогда						
					ТекДата = ДатаДокумента;
					тГод	= Год(ТекДата);
					тМесяц	= Месяц(ТекДата);
					тДень	= День(ТекДата);
					тЧас	= Час(ТекДата);
					тМин	= Минута(ТекДата);
					тСек	= Секунда(ТекДата);						
					ДатаДокумента = Дата(тГод + 2000, тМесяц, тДень, тчас, тМин, тСек);						
				КонецЕсли;
				// -- Градум Вахрушев А.В. 09.06.2021 Задача № https://ludingkis.atlassian.net/browse/ERP-452
				
				
				#Область ПоискГорода
				
				Город = Неопределено;				
				
				Если (НЕ ЗначениеЗаполнено(сткРезультатПоискаИнтереса.Ссылка)
					ИЛИ (ЗначениеЗаполнено(сткРезультатПоискаИнтереса.Ссылка) И
					НЕ ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(сткРезультатПоискаИнтереса.Ссылка, "Город")))) Тогда				
					ИмяГородТег = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532958193", "Строка", Истина, "");
					
					масПараметрыЗапроса = Новый СписокЗначений;
					массПодстроки = СтрРазделить(ИмяГородТег, " ", Ложь);
					Для Каждого ИмяГород Из массПодстроки Цикл
						Если (ИмяГород <> "") Тогда												
							ИмяГород = СтрЗаменить(ИмяГород, ".", "");
							ИмяГород = СтрЗаменить(ИмяГород, ",", "");
							масПараметрыЗапроса.Добавить(ИмяГород);													
						КонецЕсли;
					КонецЦикла;
					масПараметрыЗапроса.Добавить(ИмяГородТег);
					ГородИнтереса.УстановитьПараметр("ИмяГород", масПараметрыЗапроса);
					РезультатГород = ГородИнтереса.Выполнить();
					Если (НЕ РезультатГород.Пустой()) Тогда
						ВыборкаГород = РезультатГород.Выбрать();
						ВыборкаГород.Следующий();
						Город = ВыборкаГород.Ссылка;
					КонецЕсли;
				Иначе
					Город = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(сткРезультатПоискаИнтереса.Ссылка, "Город");
				КонецЕсли;
				#КонецОбласти
				
				#Область БизнесПартнер
				
				КлючДозапросБП = _.ЗначениеРеквизита(xdtoОбъект, "CONTACT_ID", "Строка", Ложь, "");
				КлючБизнесПартнера = "ФЛ" + КлючДозапросБП;
				
				БизнесПартнер = Справочники.грБизнесПартнеры.ПустаяСсылка();
				грБизнесПартнерФЛ	= Справочники.грБизнесПартнеры.ПустаяСсылка();
				грБизнесПартнерЮЛ	= Справочники.грБизнесПартнеры.ПустаяСсылка();
				Контрагент = Справочники.Контрагенты.ПустаяСсылка();			
				
				Если (КлючБизнесПартнера <> "ФЛ") Тогда
					БизнесПартнер = грОбработкаПакетовИнтеграции.НайтиОбъектПоКлючу(КлючБизнесПартнера, МетаданныеПолноеИмяБП,
					ВидИдентификатора,
					ИдентификаторПотокаБП,
					, КэшСсылок, ДопПараметрыДозапросов);
				КонецЕсли;
				Если (НЕ ОбщегоНазначения.СсылкаСуществует(БизнесПартнер)) Тогда					
					БизнесПартнер = Справочники.грБизнесПартнеры.НетКонтактовВСделке;
					
					//++ Градум Гусев А.С. 13.07.2021
					Если ЗначениеЗаполнено(КлючДозапросБП) И КлючДозапросБП <> "0" Тогда
						грОбработкаПакетовИнтеграции.ЗарегистрироватьНенайденныйОбъект(НенайденныеОбъекты,КлючДозапросБП, МетаданныеПолноеИмяКЛ, ВидИдентификатора, ИдентификаторПотокаКЛ);  
					КонецЕсли;
					//-- Градум Гусев А.С. 13.07.2021
					
				КонецЕсли; 
				
				// ++ Градум Вахрушев А.В. 01.06.2021 Задача № ERP-438
				грБизнесПартнерФЛ	= БизнесПартнер;
				
				ЗначениеПоиска		=  _.ЗначениеРеквизита(xdtoОбъект, "COMPANY_ID", "Строка", Ложь, "");
				
				Если (ЗначениеЗаполнено(ЗначениеПоиска) и ЗначениеПоиска<> "0") Тогда
					грБизнесПартнерЮЛ = грОбработкаПакетовИнтеграции.НайтиОбъектПоКлючу("ЮЛ" + ЗначениеПоиска, МетаданныеПолноеИмяБП,
					ВидИдентификатора,
					ИдентификаторПотокаБП,
					, КэшСсылок, ДопПараметрыДозапросов);
				КонецЕсли;
				
				Если (НЕ ОбщегоНазначения.СсылкаСуществует(грБизнесПартнерЮЛ)) Тогда					
					грБизнесПартнерЮЛ = Справочники.грБизнесПартнеры.НетКонтактовВСделке;					
					//++ Градум Гусев А.С. 13.07.2021
					Если ЗначениеЗаполнено(ЗначениеПоиска) и ЗначениеПоиска<> "0" Тогда
						грОбработкаПакетовИнтеграции.ЗарегистрироватьНенайденныйОбъект(НенайденныеОбъекты,ЗначениеПоиска, МетаданныеПолноеИмяБП, ВидИдентификатора, ИдентификаторПотокаБП);  
					КонецЕсли;
					//-- Градум Гусев А.С. 13.07.2021
				КонецЕсли;				
				
				тчЗначенияТТ = Справочники.грНастройкиПоУмолчанию.ТипТорговойТочкиРозничнойПродажи.Значения;
				Если (тчЗначенияТТ.Количество() > 0) Тогда
					
					ЗапросИсторическиеСвойстваНСИ.УстановитьПараметр("Период", ТекущаяДата());
					ЗапросИсторическиеСвойстваНСИ.УстановитьПараметр("ОбъектНСИ", грБизнесПартнерЮЛ);
					ЗапросИсторическиеСвойстваНСИ.УстановитьПараметр("СвойствоНСИ", ПланыВидовХарактеристик.грСвойстваНСИ.ПечататьТолькоРозничныеПечатныеФормы);
					РезультатЗапроса = ЗапросИсторическиеСвойстваНСИ.Выполнить();
					ПечататьТолькоРозничныеПечатныеФормы = НЕ РезультатЗапроса.Пустой();
					Если (ПечататьТолькоРозничныеПечатныеФормы) Тогда
						ВыборкаСвойство = РезультатЗапроса.Выбрать();
						ВыборкаСвойство.Следующий();
						ПечататьТолькоРозничныеПечатныеФормы = ВыборкаСвойство.Значение;							
					КонецЕсли;
					
					Если (Не ПечататьТолькоРозничныеПечатныеФормы) Тогда
						
						ЗапросИсторическиеСвойстваНСИ.УстановитьПараметр("Период", ТекущаяДата());
						ЗапросИсторическиеСвойстваНСИ.УстановитьПараметр("ОбъектНСИ", грБизнесПартнерЮЛ);
						ЗапросИсторическиеСвойстваНСИ.УстановитьПараметр("СвойствоНСИ", ПланыВидовХарактеристик.грСвойстваНСИ.ТипТорговойТочки);
						
						РезультатЗапроса = ЗапросИсторическиеСвойстваНСИ.Выполнить();
						Если (НЕ РезультатЗапроса.Пустой()) Тогда
							ВыборкаСвойство = РезультатЗапроса.Выбрать();
							ВыборкаСвойство.Следующий();
							ТипТорговойТочки = ВыборкаСвойство.Значение;							
							Если(тчЗначенияТТ.Найти(ТипТорговойТочки, "Значение") = Неопределено) Тогда
								БизнесПартнер		= грБизнесПартнерЮЛ;
							КонецЕсли;								
						КонецЕсли;							
					КонецЕсли;												
				КонецЕсли;			
				
				// -- Градум Вахрушев А.В. 01.06.2021 Задача № ERP-438				
				
				Если ЗначениеЗаполнено(АдресДоставки) тогда
					Набор = РегистрыСведений.грСвязьБПАдрес.СоздатьНаборЗаписей();
					Набор.Отбор.АдресДоставки.Установить(АдресДоставки);
					Набор.Отбор.БизнесПартнер.Установить(БизнесПартнер);
					Набор.Прочитать();
					
					Если Набор.Количество() = 0 тогда
						НоваяЗапись = Набор.Добавить();
						НоваяЗапись.АдресДоставки = АдресДоставки;
						НоваяЗапись.БизнесПартнер = БизнесПартнер;
						
						Набор.Записать();
					КонецЕсли;
				КонецЕсли;
				
				#КонецОбласти
				
				#Область Контрагент
				Если (КлючБизнесПартнера <> "ФЛ") Тогда
					Контрагент = грОбработкаПакетовИнтеграции.НайтиОбъектПоКлючу(КлючБизнесПартнера, МетаданныеПолноеИмяКонтрагент,
					ВидИдентификатора, ИдентификаторПотокаКонтрагент,					
					, КэшСсылок, ДопПараметрыДозапросов);
				КонецЕсли;
				Если (НЕ ОбщегоНазначения.СсылкаСуществует(Контрагент)) Тогда
					Контрагент = Справочники.Контрагенты.НетКонтактовВСделке;
					
					//++ Градум Гусев А.С. 13.07.2021
					Если ЗначениеЗаполнено(КлючДозапросБП) И КлючДозапросБП <> "0" Тогда
						грОбработкаПакетовИнтеграции.ЗарегистрироватьНенайденныйОбъект(НенайденныеОбъекты,КлючДозапросБП, МетаданныеПолноеИмяКЛ, ВидИдентификатора, ИдентификаторПотокаКЛ);  
					КонецЕсли;
					//-- Градум Гусев А.С. 13.07.2021
				КонецЕсли;				 
				#КонецОбласти
				
				#Область КонтрагентУникум
				ЗначениеПоиска		=  _.ЗначениеРеквизита(xdtoОбъект, "COMPANY_ID", "Строка", Ложь, "");
				
				КонтрагентУникум	= Неопределено;			
				Если ЗначениеЗаполнено(ЗначениеПоиска) и ЗначениеПоиска<>"0" тогда
					
					КонтрагентУникум = грОбработкаПакетовИнтеграции.НайтиОбъектПоКлючу(
					"ЮЛ" +ЗначениеПоиска, 
					"Справочник.Контрагенты", 
					ВидИдентификатора,
					,
					,
					КэшСсылок
					);				
					Если (НЕ ОбщегоНазначения.СсылкаСуществует(КонтрагентУникум)) Тогда
						КонтрагентУникум = Неопределено;
						//++ Градум Гусев А.С. 13.07.2021
						Если ЗначениеЗаполнено(ЗначениеПоиска) И ЗначениеПоиска <> "0" Тогда
							грОбработкаПакетовИнтеграции.ЗарегистрироватьНенайденныйОбъект(НенайденныеОбъекты,ЗначениеПоиска, МетаданныеПолноеИмяБП, ВидИдентификатора, ИдентификаторПотокаБП);  
						КонецЕсли;
						//-- Градум Гусев А.С. 13.07.2021
					КонецЕсли;									
				КонецЕсли;			
				
				#КонецОбласти
				
				#Область Менеджер						
				
				КлючМенеджера=_.ЗначениеРеквизита(xdtoОбъект, "ASSIGNED_BY_ID", "Строка", Ложь, "");
				
				//Тимофеев ------------исключения - удалено на стороне битрикса
				Если КлючМенеджера="25" тогда
					КлючМенеджера="1309"
				КонецЕсли;
				
				//исключения конец
				
				Если КлючМенеджера="" тогда
					ВызватьИсключение  "В пакете не заполнен ключ менеджера (ASSIGNED_BY_ID)";
				КонецЕсли;
				
				// ++ Градум Вахрушев А.В. 17.03.2021 Задача № 20477				
				ДопПараметрыДозапросов = Новый Структура;
				ДопПараметрыДозапросов.Вставить( "ID",  КлючМенеджера );
				ДопПараметрыДозапросов.Вставить( "Класс", КлассСообщения );			
				
				
				Менеджер = грОбработкаПакетовИнтеграции.НайтиОбъектПоКлючу(КлючМенеджера, МетаданныеПолноеИмяМенеджер,
				ВидИдентификатора, ИдентификаторПотокаМенеджер, , КэшСсылок, ДопПараметрыДозапросов);			
				
				//++ Градум Гусев А.С. 13.07.2021 
				//грОбработкаПакетовИнтеграции.ЗаписатьОтложенныеДозапросы(КлючМенеджера, МетаданныеПолноеИмяМенеджер, КлассСообщения,
				//xdtoОбъект, ПараметрыОбработки, НенайденныеОбъекты);
				//-- Градум Гусев А.С. 13.07.2021
				
				Если (НЕ ОбщегоНазначения.СсылкаСуществует(Менеджер)) Тогда
					Менеджер = Справочники.грМенеджеры.ПустаяСсылка();
					
					//++ Градум Гусев А.С. 13.07.2021
					Если ЗначениеЗаполнено(КлючМенеджера) Тогда
						грОбработкаПакетовИнтеграции.ЗарегистрироватьНенайденныйОбъект(НенайденныеОбъекты, КлючМенеджера, МетаданныеПолноеИмяМенеджер, ВидИдентификатора, ИдентификаторПотокаМенеджер);  
					КонецЕсли;
					//-- Градум Гусев А.С. 13.07.2021
				КонецЕсли;
				// -- Градум Вахрушев А.В. 17.03.2021 Задача № 20477				
				
				#КонецОбласти
				
				#Область ОтветственныйПользователь
				
				// ++ Градум Вахрушев А.В. 02.02.2021 Задача № 19769
				ОтветственныйПользователь = Неопределено;				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	Пользователи.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.Пользователи КАК Пользователи
				|ГДЕ
				|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо
				//+++Градум Гарчуков (18 августа 2021) https://ludingkis.atlassian.net/browse/ERP-620
				|	И Пользователи.Недействителен = Ложь";
				//---Градум Гарчуков (18 августа 2021)
				
				Запрос.УстановитьПараметр("ФизическоеЛицо", Менеджер.ФизЛицо);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					ОтветственныйПользователь = ВыборкаДетальныеЗаписи.Ссылка;
					Прервать;
				КонецЦикла;				
				// -- Градум Вахрушев А.В. 02.02.2021 Задача № 19769
				
				#КонецОбласти //ОтветственныйПользователь
				
				#Область УзелСКСПоУмолчаниюМенеджера
				
				УзелСКСПоУмолчаниюМенеджера = Неопределено;
				
				ЗапросСКСПоУмолчанию.УстановитьПараметр("Пользователь", ОтветственныйПользователь);
				
				ВыборкаСКСПоУмолчанию = ЗапросСКСПоУмолчанию.Выполнить().Выбрать();
				Если ВыборкаСКСПоУмолчанию.Следующий() Тогда						
					УзелСКСПоУмолчаниюМенеджера = ВыборкаСКСПоУмолчанию.Значение;
				КонецЕсли;
				
				#КонецОбласти //УзелСКСПоУмолчаниюМенеджера
				
				#Область УзелСКС
				
				УзелСКСАдресОтгрузкиПоУсловиям	= Неопределено;
				ТаблицаУзловСКС					= Неопределено;
				
				Если ЗначениеЗаполнено(ТочкаВыдачи) тогда					
					МассивЗначениеУзла = Новый Массив;
					МассивЗначениеУзла.Добавить(ТочкаВыдачи);
					
					ПараметрыУзловСКС = Новый Структура;
					ПараметрыУзловСКС.Вставить("ЗначениеУзла", МассивЗначениеУзла);		
					ПараметрыУзловСКС.Вставить("СмежныйУзел", УзелСКСПоУмолчаниюМенеджера);
					
					ТаблицаУзловСКС		= грСКССервер.ПолучитьТаблицуУзловСКС(ПараметрыУзловСКС);	
					
				Иначе					
					грКонтрагентУникум     = КонтрагентУникум;	
					
					УсловияАдресаОтгрузки = Новый Структура("БизнесПартнер, Город, КонтрагентУникум",
					БизнесПартнер,
					Город,
					грКонтрагентУникум);
					
					УзелСКСАдресОтгрузкиПоУсловиям = Документы.ЗаказКлиента.грОпределитьУзелСКСАдресОтгрузкиПоУсловиям(УсловияАдресаОтгрузки);				
					
					ПараметрыУзловСКС = Новый Структура;
					ПараметрыУзловСКС.Вставить("УзелСКС", УзелСКСАдресОтгрузкиПоУсловиям);
					
					ТаблицаУзловСКС = грСКССервер.ПолучитьТаблицуУзловСКС(ПараметрыУзловСКС);
					
				КонецЕсли;	
				
				УзелСКС							= УзелСКСПоУмолчаниюМенеджера;			
				
				#КонецОбласти //УзелСКС
				
				#Область ПоискРКУ							
				
				грРКУВидЦен	= грСКССервер.ПолучитьРКУСоглашениеПоУмолчаниюДляУзлаСКС(ДатаДокумента, ТаблицаУзловСКС);
				
				РКУ = грРКУВидЦен.РКУ;
				Если (РКУ = Неопределено) Тогда
					ЗаписьЖурналаРегистрации("Datareon. Обработка сообщения", УровеньЖурналаРегистрации.Ошибка, , Идентификатор, "Не найдно РКУ");
				КонецЕсли;
				
				ВидЦенДокумента = грРКУВидЦен.ВидЦен;
				
				ТекстСообщенияИнтереса = "";
				Если (ВидЦенДокумента = Неопределено ИЛИ ВидЦенДокумента.Пустая()) Тогда
					ТекстСообщенияИнтереса = "Вид цен заполнено значением по умолчанию.";
					ВидЦенДокумента = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("ВидЦенКлиентскогоСервиса");
					ЗаписьЖурналаРегистрации("Datareon. Обработка сообщения", УровеньЖурналаРегистрации.Предупреждение, , Идентификатор, "Не найдно ВидЦен");
				КонецЕсли;
				
				#КонецОбласти //ПоискРКУ
				
				КлючАдресОтгрузкиФЛ="ФЛ"+_.ЗначениеРеквизита(xdtoОбъект, "CONTACT_ID", "Строка", Ложь, "");
				
				Если КлючАдресОтгрузкиФЛ<>   "ФЛ" тогда
					АдресОтгрузкиФЛ = грОбработкаПакетовИнтеграции.НайтиОбъектПоКлючу(
					КлючАдресОтгрузкиФЛ, 
					"Справочник.грБизнесПартнеры", 
					ВидИдентификатора,
					,
					,
					КэшСсылок
					);
					
				КонецЕсли;
				
				// Тимофеев 1812 18923 - поиск по contact_ID из пакета
				
				КлючКЛ=_.ЗначениеРеквизита(xdtoОбъект, "CONTACT_ID", "Строка",, "");			
				
				Если (ЗначениеЗаполнено(КлючКЛ)) Тогда
					ДопПараметрыДозапросов = Новый Структура;
					ДопПараметрыДозапросов.Вставить( "ID",  КлючКЛ );
					ДопПараметрыДозапросов.Вставить( "Класс", КлассСообщения );	
					
					КонтактноеЛицо = грОбработкаПакетовИнтеграции.НайтиОбъектПоКлючу("ФЛ" + КлючКЛ, МетаданныеПолноеИмяКЛ,
					ВидИдентификатора, ИдентификаторПотокаКЛ,
					, КэшСсылок, ДопПараметрыДозапросов);								
					
					Если (КонтактноеЛицо <> Неопределено И НЕ ОбщегоНазначения.СсылкаСуществует(КонтактноеЛицо)) Тогда
						КонтактноеЛицо = Неопределено;
					КонецЕсли;
				КонецЕсли;				
				
				КлючКЛ = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532509483", "Строка",, "");
				ЧастиКлючаКЛ = СтрРазделить(КлючКЛ,",");								
				
				ИмяКЛ = "";
				НомерТелефонаКЛ = "";
				
				грКонтактноеЛицо = Неопределено;
				Если ЧастиКлючаКЛ.Количество() = 2 Тогда
					
					ИмяКЛ = ЧастиКлючаКЛ[0];
					НомерТелефонаКЛ = Сред(ЧастиКлючаКЛ[1],2);
					
					Запрос = Новый Запрос(
					"ВЫБРАТЬ
					|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
					|ГДЕ
					|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление = &НомерТелефона					
					|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица)"
					);
					Запрос.УстановитьПараметр("НомерТелефона", НомерТелефонаКЛ);
					Запрос.УстановитьПараметр("ИмяКЛ", ИмяКЛ);
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда 
						грКонтактноеЛицо = Выборка.Ссылка;
					Иначе
						Запрос = Новый Запрос(
						"ВЫБРАТЬ
						|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
						|ГДЕ
						|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка.Владелец = &БизнесПартнер
						|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица)"
						);
						Запрос.УстановитьПараметр("БизнесПартнер", БизнесПартнер);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							грКонтактноеЛицо = Выборка.Ссылка;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;			
				
				НомерДоговора = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1572942300", "Строка", Ложь, "");		
				Если ЗначениеЗаполнено(НомерДоговора) И ЗначениеЗаполнено(Контрагент) тогда		
					ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("Номер", ,, Контрагент);				
				Иначе 
					ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
				КонецЕсли;	
				
				TYPE_ID = _.ЗначениеРеквизита(xdtoОбъект, "TYPE_ID", "Строка", Ложь, "");
				Если ЗначениеЗаполнено(TYPE_ID) тогда
					CRM_ТипУслуги=Справочники.CRM_ТипУслуги.НайтиПоРеквизиту("грКодБитрикс24", TYPE_ID);
				Иначе
					CRM_ТипУслуги=Справочники.CRM_ТипУслуги.ПустаяСсылка();	
				КонецЕсли;
				
				ВремяДоставкиС       = _ВремяДоставкиС.Получить(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1536862985", "Строка", Ложь, ""));
				ВремяДоставкиПо      = _ВремяДоставкиПо.Получить(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1536863036", "Строка", Ложь, ""));				
				НомерДокумента       = Формат(_.ЗначениеРеквизита(xdtoОбъект, "ID", "Число",, ""), "ЧЦ=11; ЧВН=; ЧГ=");
				НомерЗаказаНаТочку   = Формат(_.ЗначениеРеквизита(xdtoОбъект, "ID", "Число",, ""), "ЧЦ=9; ЧВН=; ЧГ=");
				IDCRM                = _.ЗначениеРеквизита(xdtoОбъект, "ID", "Строка",, "");
				
				// --> Изменил Лемцё, Датареон 22.10.2020
				ДатаЗакрытия         = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "CLOSEDATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				Г =  Год(ДатаЗакрытия);
				Если Г < 1753 Тогда
					ДатаНачала         = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "BEGINDATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
					ДатаЗакрытия = Дата(Год(ДатаНачала), Месяц(ДатаЗакрытия), День(ДатаЗакрытия), Час(ДатаЗакрытия), Минута(ДатаЗакрытия), Секунда(ДатаЗакрытия));
				КонецЕсли;
				// <-- Изменил Лемцё, Датареон 22.10.2020
				
				ДатаОтгрузки         = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1540222557", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				Комментарий          = _.ЗначениеРеквизита(xdtoОбъект, "COMMENTS", "Строка", Ложь, "");
				КомментарийСклад     = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532509547", "Строка", Ложь, "");
				ДатаДокРеализации    = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1559569336", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				Соглашение           = Справочники.СоглашенияСКлиентами.НайтиПоКоду(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1585718103", "Строка", Ложь, ""));
				
				КодВалюты = Валюты.Получить(_.ЗначениеРеквизита(xdtoОбъект, "CURRENCY_ID", "Строка", Ложь, ""));
				Если ЗначениеЗаполнено(КодВалюты) тогда
					Валюта = Справочники.Валюты.НайтиПоКоду(КодВалюты);
				Иначе 
					Валюта = Справочники.Валюты.ПустаяСсылка();
				КонецЕсли;	
				
				СтатусЗаказаКлиента = СтатусыЗаказаКлиента.Получить(_.ЗначениеРеквизита(xdtoОбъект, "STAGE_ID", "Строка", Ложь, ""));
				Если Не ЗначениеЗаполнено(СтатусЗаказаКлиента) тогда
					СтатусЗаказаКлиента = Перечисления.СтатусыЗаказовКлиентов.Закрыт;
				КонецЕсли;					
				
				#КонецОбласти  //ОбщиеРеквизиты
				
				
				#Область ПотребностьКлиента
				
				ЗаказКлиента = Неопределено;
				ПотребностьКлиента = Неопределено;
				
				//НачатьТранзакцию();
				//
				//// Блокировка 
				//Если НЕ грОбработкаПакетовИнтеграции.ЗаблокироватьКлючСПопытками(Ключ, ВидИдентификатора) Тогда 
				//	
				//	ОтменитьТранзакцию();
				//	СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;
				//	Задержка = ПараметрыОбработки.ЗадержкаПриНеудачнойБлокировке;
				//	
				//	//++ Градум Гусев А.С. 12.07.2021 
				//	мсвОшибки.Добавить("Ошибка обработки сделки ID=" + Ключ + ": неудачная блокировка ключа. Сообщение отложено на " + Задержка); 
				//	//-- Градум Гусев А.С. 12.07.2021
				//	
				//	Перейти ~Возврат;
				//	
				//КонецЕсли;
				
				сткРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
				Ключ, 
				"Документ.грПотребностьКлиента", 
				ВидИдентификатора, 
				ПараметрыОбработки);
				
				// Потребность клиента не обновляем.	
				Если ЗначениеЗаполнено(сткРезультатПоиска.Ссылка) И Не ВсегдаОбновлятьДокументы тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+сткРезультатПоиска.Ссылка, сткРезультатПоиска.Ссылка);
					Перейти ~КонецПотребностьКлиента;		
				КонецЕсли;
				
				Если ЗначениеЗаполнено(сткРезультатПоиска.Ссылка) тогда
					ОбъектОбработки = сткРезультатПоиска.Ссылка.ПолучитьОбъект();
				Иначе 	
					ОбъектОбработки = Документы.грПотребностьКлиента.СоздатьДокумент();
				КонецЕсли;	
				
				ОбъектОбработки.ПометкаУдаления        = Ложь;
				ОбъектОбработки.Дата                   = ДатаДокумента;
				ОбъектОбработки.Номер                  = НомерДокумента;
				ОбъектОбработки.ДатаДоставки           = ДатаЗакрытия;
				ОбъектОбработки.ВремяДоставкиС         = ВремяДоставкиС;
				ОбъектОбработки.ВремяДоставкиПо        = ВремяДоставкиПо;
				ОбъектОбработки.ДатаВходящегоЗаказа    = Дата(1,1,1);
				ОбъектОбработки.ИмяКонтакта            = ИмяКЛ;
				ОбъектОбработки.ИсточникЗаказа         = Справочники.грВнешниеИсточники.НайтиПоКоду(_.ЗначениеРеквизита(xdtoОбъект, "SOURCE_ID", "Строка", Ложь, ""));
				ОбъектОбработки.НомерВходящегоЗаказа   = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_59F8C016018E5", "Строка", Ложь, "");
				ОбъектОбработки.Телефон                = НомерТелефонаКЛ;
				ОбъектОбработки.Комментарий            = Комментарий;
				
				// Датареон, Новиков, 28.08.2020 -->				
				ОбъектОбработки.Купон                  = Неопределено;
				// <-- Датареон, Новиков, 28.08.2020
				ОбъектОбработки.Валюта                 = Валюта;
				ОбъектОбработки.ВидОплаты              = ФормыОплаты.Получить(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1524477379", "Строка", Ложь, ""));
				
				ПовышенныйПриоритет = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532509451", "Булево",, Ложь);
				Если ПовышенныйПриоритет тогда
					ОбъектОбработки.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Высокий", Истина);
				Иначе 
					ОбъектОбработки.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний", Истина);
				КонецЕсли;
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+БизнесПартнер, БизнесПартнер);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+грКонтактноеЛицо, грКонтактноеЛицо);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+КонтактноеЛицо, КонтактноеЛицо);
				
				ОбъектОбработки.Ответственный = Менеджер;
				ОбъектОбработки.УзелСКС       = УзелСКС;
				ОбъектОбработки.Организация   = Организация;
				ОбъектОбработки.БизнесПартнер = БизнесПартнер;
				ОбъектОбработки.Контрагент    = Контрагент;
				ОбъектОбработки.КонтактноеЛицоЗаказа = ?(ЗначениеЗаполнено(грКонтактноеЛицо),грКонтактноеЛицо,КонтактноеЛицо);
				Если Не ЗначениеЗаполнено(ОбъектОбработки.БизнесПартнер) И ЗначениеЗаполнено(ОбъектОбработки.КонтактноеЛицоЗаказа) тогда
					ОбъектОбработки.БизнесПартнер = ОбъектОбработки.КонтактноеЛицоЗаказа.Владелец;
				КонецЕсли;	
				ОбъектОбработки.КонтактноеЛицоДоставки = ?(ЗначениеЗаполнено(грКонтактноеЛицо),грКонтактноеЛицо,КонтактноеЛицо);
				ОбъектОбработки.ТочкаВыдачи   = ТочкаВыдачи;
				ОбъектОбработки.АдресДоставки = АдресДоставки;
				ОбъектОбработки.ОПКонтрагента = ОбъектОбработки.Контрагент;		
				ОбъектОбработки.Договор       = ДоговорКонтрагента;
				
				ОбъектОбработки.UTMМеткаНачальная = "";
				Попытка
					Метки = xdtoОбъект.UF_CRM_1540379393.Последовательность();
				Исключение
					Метки = Новый Массив;
				КонецПопытки;
				Для ИндексМетки = 0 по Метки.Количество()-1 цикл
					
					Метка = Метки.ПолучитьЗначение(ИндексМетки);				
					ОбъектОбработки.UTMМеткаНачальная = ОбъектОбработки.UTMМеткаНачальная + Метка + ?(ИндексМетки = Метки.Количество()-1, "", Символы.ПС);														
				КонецЦикла;
				
				ОбъектОбработки.UTMМеткаПоследняя = "";
				Попытка
					Метки = xdtoОбъект.UF_CRM_1540454517.Последовательность();
				Исключение
					Метки = Новый Массив;
				КонецПопытки;
				Для ИндексМетки = 0 по Метки.Количество()-1 цикл
					
					Метка = Метки.ПолучитьЗначение(ИндексМетки);					
					//Градум.Начало; Гарчуков (10 ноября 2020) 
					ОбъектОбработки.UTMМеткаПоследняя = ОбъектОбработки.UTMМеткаПоследняя + Метка + ?(ИндексМетки = Метки.Количество()-1, "", Символы.ПС);
					//Градум.Конец; Гарчуков (10 ноября 2020)
					
				КонецЦикла;				
				
				КэшированныеЗначения = Новый Структура;
				
				СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ОбъектОбработки);
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
				
				Попытка
					Товары = xdtoОбъект.INITIAL_SITE_PRODUCTS.Последовательность();
				Исключение
					Товары = Новый Массив;
				КонецПопытки;	
				Если Товары.Количество() = 0 тогда
					Попытка
						Товары = xdtoОбъект.INITIAL_PRODUCTS.Последовательность();
					Исключение
						Товары = Новый Массив;		
					КонецПопытки;	
				КонецЕсли;
				Если Товары.Количество() = 0 тогда
					Попытка
						Товары = xdtoОбъект.PRODUCT_ROWS.Последовательность();
					Исключение
						Товары = Новый Массив;		
					КонецПопытки;	
				КонецЕсли;
				ОбъектОбработки.Товары.Очистить();
				Для индекс = 0 по Товары.Количество()-1 цикл
					xdtoСтрока = Товары.ПолучитьЗначение(индекс);
					
					НоваяСтрока = ОбъектОбработки.Товары.Добавить();					
					НоваяСтрока.ТочкаВыдачи = ОбъектОбработки.ТочкаВыдачи;
					
					//Градум.Начало; Гарчуков (11 ноября 2020) 18089 
					PRODUCT_CODE = _.ЗначениеРеквизита(xdtoСтрока, "PRODUCT_CODE", "Строка", Ложь, "");			
					Если ЗначениеЗаполнено(PRODUCT_CODE) тогда						
						ЗапросСКЮпоКодуУникум.УстановитьПараметр("грКодУникум", PRODUCT_CODE);
						Выборка = ЗапросСКЮпоКодуУникум.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НоваяСтрока.Номенклатура = Выборка.Ссылка;
						Иначе
							НоваяСтрока.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку();
						КонецЕсли;
					КонецЕсли;
					//Градум.Конец; Гарчуков (11 ноября 2020)
					
					Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура) тогда
						Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.УпаковкиЕдиницыИзмерения ГДЕ Владелец = &Владелец И Наименование = &Наименование И &Наименование <> НЕОПРЕДЕЛЕНО");
						Запрос.УстановитьПараметр("Наименование", ЕИ.Получить(_.ЗначениеРеквизита(xdtoОбъект, "MEASURE_CODE", "Строка", Ложь, "")));
						Запрос.УстановитьПараметр("Владелец", НоваяСтрока.Номенклатура);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() тогда
							НоваяСтрока.ЕдиницаИзмерения = Выборка.Ссылка;
						КонецЕсли;
					КонецЕсли;					
					
					НоваяСтрока.КоличествоУпаковок = _.ЗначениеРеквизита(xdtoСтрока, "QUANTITY", "Число",, 0);
					НоваяСтрока.Количество         = НоваяСтрока.КоличествоУпаковок;
					НоваяСтрока.СтавкаНДС          = СтавкиНДС[_.ЗначениеРеквизита(xdtoСтрока, "TAX_RATE", "Число",, Неопределено)];			
					НоваяСтрока.Цена               = _.ЗначениеРеквизита(xdtoСтрока, "PRICE", "Число",, 0);	
					//+++Начало Гарчуков (21 июля 2021) https://ludingkis.atlassian.net/browse/ERP-550
					//НоваяСтрока.ПроцентСкидкиАКУ   = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);			
					//НоваяСтрока.СуммаСкидкиАКУ     = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_SUM", "Число",, 0);
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда
						НоваяСтрока.ПроцентСкидкиАКУ   = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);			
						НоваяСтрока.СуммаСкидкиАКУ     = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_SUM", "Число",, 0) * НоваяСтрока.Количество;
					КонецЕсли;
					//---Конец Гарчуков (21 июля 2021)
					
					НоваяСтрока.КачествоТовара = Справочники.грКачествоТоваров.Кондиция;			
					
					СкидкаНаценка = Неопределено;			
					
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда 
						Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.СкидкиНаценки ГДЕ ЭтоГруппа = ЛОЖЬ И грВнешнийКод = &грВнешнийКод И &грВнешнийКод <> """"");
						Запрос.УстановитьПараметр("грВнешнийКод", _.ЗначениеРеквизита(xdtoСтрока, "STOCK_CODE", "Строка", Истина, ""));
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() тогда
							
							СкидкаНаценка = Выборка.Ссылка;
							
							// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
							Если (НЕ СкидкаНаценка.грПредоставляетсяНаЛюбуюНоменклатуру) Тогда
								// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
								
								Запрос = Новый Запрос(
								"ВЫБРАТЬ
								|	грСоответствиеАГТ_SKUСрезПоследних.АГТ КАК АГТ
								|ПОМЕСТИТЬ ВТ_АГТ
								|ИЗ
								|	РегистрСведений.грСоответствиеАГТ_SKU.СрезПоследних(&Период, SKU = &SKU) КАК грСоответствиеАГТ_SKUСрезПоследних
								|;
								|
								|////////////////////////////////////////////////////////////////////////////////
								|ВЫБРАТЬ
								|	ДействиеСкидокНаценокСрезПоследних.Источник КАК СкидкаНаценка
								|ИЗ
								|	РегистрСведений.ДействиеСкидокНаценокПоНоменклатуре.СрезПоследних(
								|			,
								|			Источник = &СкидкаНаценка
								|				И (Номенклатура = &SKU
								|					ИЛИ Номенклатура В
								|						(ВЫБРАТЬ
								|							ВТ_АГТ.АГТ
								|						ИЗ
								|							ВТ_АГТ)
								|					ИЛИ грСвойствоАГТ В
								|						(ВЫБРАТЬ
								|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних.Свойство
								|						ИЗ
								|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних(&Период, Объект В
								|								(ВЫБРАТЬ
								|									ВТ_АГТ.АГТ
								|								ИЗ
								|									ВТ_АГТ))))) КАК ДействиеСкидокНаценокСрезПоследних
								|ГДЕ
								|	ДействиеСкидокНаценокСрезПоследних.Статус = &СтатусДействует"
								);
								Запрос.УстановитьПараметр("SKU", НоваяСтрока.Номенклатура);
								Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
								Запрос.УстановитьПараметр("СкидкаНаценка", СкидкаНаценка);
								Запрос.УстановитьПараметр("СтатусДействует", Перечисления.СтатусыДействияСкидок.Действует);
								
								Если НЕ Запрос.Выполнить().Пустой() Тогда 
									НоваяСтрока.АКУ = СкидкаНаценка;
								КонецЕсли;
							Иначе
								НоваяСтрока.АКУ = СкидкаНаценка;
							КонецЕсли; 
						КонецЕсли;
						
						Если ЗначениеЗаполнено( _.ЗначениеРеквизита(xdtoСтрока, "STOCK_CODE", "Строка", Истина, "")) 
							И Не ЗначениеЗаполнено(НоваяСтрока.АКУ) тогда
							НоваяСтрока.АКУ = Справочники.СкидкиНаценки.ПолучитьСсылку();
						КонецЕсли;	
						
						НоваяСтрока.ЦенаАКУ = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0);
						
					КонецЕсли;
					
					//+++Начало Гарчуков (21 июля 2021) https://ludingkis.atlassian.net/browse/ERP-550
					ЭтоПодарок = _.ЗначениеРеквизита(xdtoСтрока, "IS_GIFT", "Булево",, Ложь);
					Если (НЕ ЗначениеЗаполнено(НоваяСтрока.АКУ)) Тогда
						Если (ЭтоПодарок) Тогда
							НоваяСтрока.АКУ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("ПодарочнаяАкцияПоУмолчанию");
						Иначе
							НоваяСтрока.АКУ = Справочники.СкидкиНаценки.ПолучитьСсылку();
						КонецЕсли;							
					КонецЕсли;
					//---Конец Гарчуков (21 июля 2021)
					
					Если ЗначениеЗаполнено(СкидкаНаценка) 
						И ЗначениеЗаполнено(Купон) 
						И ТипСкидки = "5"
						// ++ Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
						И тзСкидкиИКупоны <> Неопределено
						// -- Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
						Тогда						
						
						НайденаяСкидка = тзСкидкиИКупоны.Найти(СкидкаНаценка, "СкидкаНаценка");
						Если (НайденаяСкидка <> Неопределено) Тогда
							НоваяСтрока.Купон = Купон; 
						Иначе
							НоваяСтрока.Купон = Справочники.грСкидочныеКупоны.ПолучитьСсылку();
						КонецЕсли;					
						
					КонецЕсли;					
					
					//+++Начало Гарчуков (16 августа 2021) https://ludingkis.atlassian.net/browse/ERP-550					
					//Если ТипСкидки = "3" ИЛИ ТипСкидки = "0" Тогда
					//	НоваяСтрока.ЦенаРКУ = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_NETTO", "Число",, 0);
					//КонецЕсли;
					//---Конец Гарчуков (16 августа 2021)
					
					// Датареон, Новиков, 24.08.2020 -->
					НоваяСтрока.УНК = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1511359326") = "26";
					// <-- Датареон, Новиков, 24.08.2020
					
					ОбъектОбработки.ЦенаВключаетНДС = ЦенаВключаетНДС[_.ЗначениеРеквизита(xdtoСтрока, "TAX_INCLUDED", "Строка", Ложь, "")];
					
					СтруктураПересчетаСуммы.ЦенаВключаетНДС = ОбъектОбработки.ЦенаВключаетНДС;
					ОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
				КонецЦикла;
				
				ОбъектОбработки.СуммаПотребности = ОбъектОбработки.Товары.Итог("СуммаСНДС");
				
				ОбъектОбработки.ОбменДанными.Загрузка = Истина;
				ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
				ОбъектОбработки.Записать();
				
				ЗаписьСтатус = РегистрыСведений.грСтатусыПотребностейКлиентов.СоздатьМенеджерЗаписи();
				ЗаписьСтатус.ПотребностьКлиента = ОбъектОбработки.Ссылка;
				ЗаписьСтатус.Прочитать();
				Если Не ЗаписьСтатус.Выбран() тогда
					ЗаписьСтатус.ПотребностьКлиента = ОбъектОбработки.Ссылка;
					ЗаписьСтатус.Статус = Перечисления.грСтатусыПотребностейКлиентов.Принят;
					ЗаписьСтатус.Записать();
				КонецЕсли;	
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+ОбъектОбработки.Ссылка, ОбъектОбработки.Ссылка);
				
				грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
				ОбъектОбработки.Ссылка, 
				Ключ, 
				ПараметрыОбработки.Отправитель,  
				новый Структура(
				"ВидИдентификатораСтрока, ДатаОбновления",
				ВидИдентификатора,
				ПараметрыОбработки.ВремяПакета
				)
				);
				
				ПотребностьКлиента = ОбъектОбработки.Ссылка;
				
				~КонецПотребностьКлиента:
				
				#КонецОбласти //ПотребностьКлиента
				
				#Область ИнтересКлиента 
				
				Если ЗначениеЗаполнено(сткРезультатПоискаИнтереса.Ссылка) И НЕ ВсегдаОбновлятьДокументы тогда							
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+сткРезультатПоискаИнтереса.Ссылка, сткРезультатПоискаИнтереса.Ссылка);					
					Перейти ~КонецИнтересКлиента;		
				КонецЕсли;
				
				ОбъектОбработки = Неопределено;
				
				Если ЗначениеЗаполнено(сткРезультатПоискаИнтереса.Ссылка) тогда
					ОбъектОбработки = сткРезультатПоискаИнтереса.Ссылка.ПолучитьОбъект();				
				Иначе
					//+++Градум Гарчуков (25 августа 2021) https://ludingkis.atlassian.net/browse/ERP-631
					
					//GUIDСтрокой = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1600954090", "Строка", Ложь, ""); 
					//Если GUIDСтрокой<>"" Тогда
					//	НовыйGUID = Новый УникальныйИдентификатор(GUIDСтрокой);
					//	РезультатПоиска = Документы.CRM_Интерес.ПолучитьСсылку(НовыйGUID);
					//	ОбъектОбработки = РезультатПоиска.ПолучитьОбъект();
					//	
					//	Если  ОбъектОбработки=Неопределено тогда
					//		ОбъектОбработки = Документы.CRM_Интерес.СоздатьДокумент();
					//		ОбъектОбработки.УстановитьСсылкуНового(РезультатПоиска);
					//	КонецЕсли;
					//иначе
					//	ОбъектОбработки = Документы.CRM_Интерес.СоздатьДокумент();
					//КонецЕсли;
					
					ГУИДизПакета  =  _.ЗначениеРеквизита(xdtoОбъект, "GUID_ERP", "Строка", Ложь, ""); 
					Если ГУИДизПакета <> "" Тогда
						НовыйGUID = Новый УникальныйИдентификатор(ГУИДизПакета);
						РезультатПоиска = Документы.CRM_Интерес.ПолучитьСсылку(НовыйGUID);
						ОбъектОбработки = РезультатПоиска.ПолучитьОбъект();
					КонецЕсли;
					
					Если ОбъектОбработки = Неопределено Тогда
						GUIDСтрокой = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1600933509", "Строка", Ложь, ""); 
						Если GUIDСтрокой<>"" Тогда
							НовыйGUID = Новый УникальныйИдентификатор(GUIDСтрокой);
							РезультатПоиска = Документы.CRM_Интерес.ПолучитьСсылку(НовыйGUID);
							ОбъектОбработки = РезультатПоиска.ПолучитьОбъект();
							
							Если  ОбъектОбработки=Неопределено тогда
								ОбъектОбработки = Документы.CRM_Интерес.СоздатьДокумент();
								ОбъектОбработки.УстановитьСсылкуНового(РезультатПоиска);
							КонецЕсли;
						иначе
							ОбъектОбработки = Документы.CRM_Интерес.СоздатьДокумент();
						КонецЕсли;
					КонецЕсли;				
					//---Градум Гарчуков (25 августа 2021)
				КонецЕсли;	
				
				// ++ Градум Вахрушев А.В. 14.04.2021 Задача № ERP-330
				НеудачноеЗавершение = ОбъектОбработки.СостояниеИнтереса.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение;
				//ПерезаписыватьДокументы = ?(НеудачноеЗавершение И ПерезаписыватьДокументы, Ложь, ПерезаписыватьДокументы);
				// -- Градум Вахрушев А.В. 14.04.2021 Задача № ERP-330
				
				Если (ЭтоНовыйДокумент ИЛИ НЕ ЗначениеЗаполнено(ОбъектОбработки.Город)) Тогда
					ОбъектОбработки.Город = Город;					
				КонецЕсли;								
				
				ОбъектОбработки.НомерСделкиБ24=_.ЗначениеРеквизита(xdtoОбъект, "ID", "Строка", Ложь, "");
				ЗначениеФлагаОбработкаВERP=_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1596807954", "Булево",, Ложь);
				
				Если  не ЗначениеЗаполнено(ОбъектОбработки.Дата) тогда
					ОбъектОбработки.Дата                   = ДатаДокумента;
				КонецЕсли; 
				
				ЗапретитьИзменятьРеквизитыЗаказа=истина;
				
				Если (ЭтоНовыйДокумент
					ИЛИ НЕ (ЗначениеФлагаОбработкаВERP и ЗначениеЗаполнено(СостояниеИнтереса) И СостояниеИнтереса.РазрешитьРедактированиеТовары ))   тогда   // Тимофеев 18.11 18273
					
					ЗапретитьИзменятьРеквизитыЗаказа=Ложь;
					
					ОбъектОбработки.ПометкаУдаления        = Ложь;
					ОбъектОбработки.Дата                   = ДатаДокумента;
					
					// Тимофеев 17915
					Если Не ЗначениеЗаполнено(ОбъектОбработки.Номер ) Тогда
						ОбъектОбработки.УстановитьНовыйНомер();
					КонецЕсли;
					
					//+++Начало Гарчуков (28 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-1302
					ОбъектОбработки.грДатаИзменения = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "DATE_CREATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
					ОбъектОбработки.грДатаНачала	= _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "DATE_MODIFY", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
					//---Конец Гарчуков (28 сентября 2021)
					
					ОбъектОбработки.грОбработкаВERP        = ЗначениеФлагаОбработкаВERP;
					
					ТипУслугиПакет=_.ЗначениеРеквизита(xdtoОбъект, "TYPE_ID", "Строка", Ложь, "");
					ОбъектОбработки.ТипУслуги=?(ТипУслугиПакет="",неопределено,Справочники.CRM_ТипУслуги.НайтиПоРеквизиту("грКодБитрикс24",ТипУслугиПакет)); // Тимофеев 18489
					
					ОбъектОбработки.Тема                   = _.ЗначениеРеквизита(xdtoОбъект, "TITLE", "Строка", Ложь, ""); 
					ОбъектОбработки.Сдача                  = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532509522", "Число",, 0); 
					ОбъектОбработки.ОжидаемаяВыручка       = _.ЗначениеРеквизита(xdtoОбъект, "OPPORTUNITY", "Число",, 0); 
					ОбъектОбработки.КомментарийДляДКС      = Комментарий;
					//+++Начало Гарчуков (22 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-690
					//ОбъектОбработки.Комментарий            = Комментарий; 
					//---Конец Гарчуков (22 сентября 2021)
					
					// Тимофеев 18767 ++
					ОбъектОбработки.грНомерЗаказаCRM       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1544690963", "Строка", Ложь, "");
					ОбъектОбработки.грНомерРНК       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1510162999", "Строка", Ложь, "");
					// Тимофеев 18767 --
					
					// Тимофеев 19989 ++
					ОбъектОбработки.грНомерМаршрутногоЛиста       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1534319185", "Строка", Ложь, "");
					ОбъектОбработки.грТранспортноеСредство       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1534319222", "Строка", Ложь, "");
					ОбъектОбработки.грАвтомобиль       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1534319254", "Строка", Ложь, "");
					ОбъектОбработки.грВодитель       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1534319286", "Строка", Ложь, "");
					ОбъектОбработки.грЭкспедитор       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1534319395", "Строка", Ложь, "");
					// Тимофеев 19989 --
					
					ОбъектОбработки.CRM_ЦенаКакВЗаказе = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1561972197", "Булево",, Ложь);					
					ОбъектОбработки.ДатаЗакрытия           = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1559569336", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");   //ДатаЗакрытия; Тимофеев 0910
					ОбъектОбработки.ДатаДоставки           =  _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "CLOSEDATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");   //ДатаЗакрытия; Тимофеев 0910
					
					// ++ Градум Вахрушев А.В. 18.03.2021 Задача № ERP-237
					Если (Год(ОбъектОбработки.ДатаДоставки) < 1000) Тогда						
						ТекДата = ОбъектОбработки.ДатаДоставки;
						тГод	= Год(ТекДата);
						тМесяц	= Месяц(ТекДата);
						тДень	= День(ТекДата);
						тЧас	= Час(ТекДата);
						тМин	= Минута(ТекДата);
						тСек	= Секунда(ТекДата);						
						ОбъектОбработки.ДатаДоставки = Дата(тГод + 2000, тМесяц, тДень, тчас, тМин, тСек);						
					КонецЕсли;					
					// -- Градум Вахрушев А.В. 18.03.2021 Задача № ERP-237
					
					ОбъектОбработки.ВремяДоставкиС         = ВремяДоставкиС;
					ОбъектОбработки.ВремяДоставкиПо        = ВремяДоставкиПо;
					ОбъектОбработки.ВидОплаты              = ФормыОплаты.Получить(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1524477379", "Строка", Ложь, ""));; 
					ОбъектОбработки.Валюта                 = Валюта; 
					ОбъектОбработки.НалогообложениеНДС     = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
					ОбъектОбработки.Соглашение             = Соглашение;
					ОбъектОбработки.грМенеджер             = Менеджер;					
					
					ОбъектОбработки.грКупон = Купон;
					ОбъектОбработки.СостояниеИнтереса      = СостояниеИнтереса;	
					//+++Градум Гарчуков (03 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-643
					Если ЗначениеЗаполнено(СостояниеИнтереса) И СостояниеИнтереса.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение Тогда
						ЗапросПричинОтказа = Новый Запрос;
						ЗапросПричинОтказа.Текст = 
						"ВЫБРАТЬ ПЕРВЫЕ 1
						|	CRM_ПричиныОтказаПоИнтересам.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.CRM_ПричиныОтказаПоИнтересам КАК CRM_ПричиныОтказаПоИнтересам
						|ГДЕ
						|	CRM_ПричиныОтказаПоИнтересам.СценарийИнтереса = &СценарийИнтереса
						|	И CRM_ПричиныОтказаПоИнтересам.КодБитрикс24 = &КодБитрикс24";
						ЗапросПричинОтказа.УстановитьПараметр("СценарийИнтереса", СостояниеИнтереса.Родитель);
						STAGE_ID = _.ЗначениеРеквизита(xdtoОбъект, "STAGE_ID", "Строка", Ложь, "");
						ЗапросПричинОтказа.УстановитьПараметр("КодБитрикс24", STAGE_ID);
						РезультатПоискаПричиныОтказа = ЗапросПричинОтказа.Выполнить();
						Если Не РезультатПоискаПричиныОтказа.Пустой() Тогда 
							ВыборкаПричиныОтказа = РезультатПоискаПричиныОтказа.Выбрать();
							ВыборкаПричиныОтказа.Следующий();
							ОбъектОбработки.ПричинаОтказа = ВыборкаПричиныОтказа.Ссылка;
						КонецЕсли;						
					КонецЕсли;
					//---Градум Гарчуков (03 сентября 2021)
					ОбъектОбработки.Организация            = Организация;
					
					БизнесПартнерЭтоФизЛицо = (БизнесПартнер.ЮрФизЛицо=Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо);
					
					#Область КонтактыИнтереса
					
					ОбъектОбработки.CRM_БизнесПартнер		= БизнесПартнер;
					ОбъектОбработки.КонтактноеЛицо			= КонтактноеЛицо;
					ОбъектОбработки.КонтактноеЛицоДоставки	= КонтактноеЛицо;
					ОбъектОбработки.Контрагент				= Контрагент;
					ОбъектОбработки.грКонтрагентУникум 		= КонтрагентУникум;					
					
					Если (БизнесПартнер		= грБизнесПартнерЮЛ) Тогда
						ОбъектОбработки.Контрагент = КонтрагентУникум;
					КонецЕсли;				
					
					#КонецОбласти //КонтактыИнтереса
					
					ВыборкаСКСПоУмолчанию = ЗапросСКСПоУмолчанию.Выполнить().Выбрать();
					Если ВыборкаСКСПоУмолчанию.Следующий() Тогда
						ОбъектОбработки.Партнер = ВыборкаСКСПоУмолчанию.Значение;					
					КонецЕсли;	
					
					Если Не ЗначениеЗаполнено(ОбъектОбработки.Партнер) тогда
						
						ПартнерРезультат = ЗапросПартнерПоУмолчанию.Выполнить();
						Выборка = ПартнерРезультат.Выбрать();
						Если(Выборка.Следующий()) Тогда
							ОбъектОбработки.Партнер = Выборка.УзелДУИВС;													
						КонецЕсли; 												
						
					КонецЕсли;     
					
					СКСДляИсточникаПервичногоИнтереса = ОбъектОбработки.Партнер;
					
					//-----------------------------------------
					
					ОбъектОбработки.Подразделение          = Подразделение;
					ОбъектОбработки.грЗаказКлиента         = ЗаказКлиента;
					ОбъектОбработки.CRMLAB_ПотребностьКлиента = ПотребностьКлиента;    					
					ОбъектОбработки.Ответственный          = ОтветственныйПользователь;				
					ОбъектОбработки.Автор                  = ОбъектОбработки.Ответственный;
					ОбъектОбработки.АдресДоставки          = АдресДоставки;				
					
					ОбъектОбработки.ТипУслуги         = CRM_ТипУслуги;
					
					// Датареон, Лемцё, 16.09.2020 -->
					грИнтересДозаказ       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1553693924", "Строка", Ложь, "");
					
					сткРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
					грИнтересДозаказ, 
					"Документ.CRM_Интерес", 
					ВидИдентификатора, 
					ПараметрыОбработки);
					ОбъектОбработки.грИнтересДозаказ		= сткРезультатПоиска.Ссылка;					
					// <-- Датареон, Лемцё, 16.09.2020
					
					// Датареон, Новиков, 12.10.2020 -->
					ОбъектОбработки.грИнкассация = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1568362941", "Булево",, Ложь);		
					// <-- Датареон, Новиков, 12.10.2020
					
					// Датареон, Новиков, 24.08.2020 -->
					ПовышенныйПриоритет = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532509451", "Булево",, Ложь);
					Если ПовышенныйПриоритет тогда
						ОбъектОбработки.грПриоритет = Справочники.Приоритеты.НайтиПоНаименованию("Высокий", Истина);
					Иначе 
						ОбъектОбработки.грПриоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний", Истина);
					КонецЕсли;
					// <-- Датареон, Новиков, 24.08.2020
					
					// Датареон, Новиков, 26.09.2020 (
					ОбъектОбработки.грЕдинаяТочкаВыдачи = Истина;
					// ) Датареон, Новиков, 26.09.2020
					
					ОбъектОбработки.СКС.Очистить();
					СтрокаСКС = ОбъектОбработки.СКС.Добавить();
					СтрокаСКС.ТочкаВыдачи = ТочкаВыдачи;
					СтрокаСКС.Менеджер = ОбъектОбработки.Ответственный;
					
					КэшированныеЗначения = Новый Структура;
					
					СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ОбъектОбработки);
					
					СтруктураДействий = Новый Структура;
					СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
					СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
					
					Блокировка = Новый БлокировкаДанных;
					ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.CRM_ДоступККонтактам");
					ЭлементБлокировки.УстановитьЗначение("Клиент", ОбъектОбработки.Партнер);
					ЭлементБлокировки.УстановитьЗначение("Контакт", ОбъектОбработки.КонтактноеЛицо);
					ЭлементБлокировки.УстановитьЗначение("Подразделение", ОбъектОбработки.Подразделение);
					ЭлементБлокировки.УстановитьЗначение("Подразделение", ОбъектОбработки.Офис);
					Блокировка.Заблокировать();
					
				КонецЕсли;
				
				Если (ПерезаписыватьДокументы ИЛИ ОбъектОбработки.ЭтоНовый() // ++Градум Вахрушев А.В. 31.03.2021 ERP-281
					// ++Градум Вахрушев А.В. 22.06.2021
					ИЛИ ПараметрыОбработки.МассоваяЗагрузка) 	
					// ++Градум Вахрушев А.В. 22.06.2021
					//++ Градум Гусев А.С. 17.09.2021 https://ludingkis.atlassian.net/browse/ERP-567
					ИЛИ (ОбработкаВЕРПизСсылки = Ложь И ЗначениеФлагаОбработкаВERP = Ложь) Тогда
					//-- Градум Гусев А.С. 17.09.2021
					ОбъектОбработки.ОбменДанными.Загрузка = Истина;   
					ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");				
					ОбъектОбработки.Записать();
				КонецЕсли;							 																								// ++Градум Вахрушев А.В. 31.03.2021 ERP-281			
				
				Интерес = ОбъектОбработки.Ссылка;
				
				// ++ Градум Вахрушев А.В. 29.04.2021 Задача № ERP-363
				Если (ТекстСообщенияИнтереса <> "" И ЗначениеЗаполнено(Интерес)) Тогда
					
					Запись = РегистрыСведений.CRM_ИсторияРеквизитовПартнеров.СоздатьМенеджерЗаписи();
					Запись.Партнер		= Интерес;
					Запись.ПутьКДанным	= "ПодборРКУПартнера";
					Запись.Значение 	= ТекстСообщенияИнтереса;
					Запись.Период		= ДатаДокумента;
					Запись.Автор		= грАвтор;
					Запись.Записать();
				КонецЕсли;				
				// -- Градум Вахрушев А.В. 29.04.2021 Задача № ERP-363
				
				// Тимофеев 18489
				Если значениеЗаполнено (Интерес.грИнтересДозаказ)    и  _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1555077590", "Булево",, Ложь) тогда
					Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Интерес.грИнтересДозаказ, "грИнтересДозаказ") <> Интерес Тогда
						ДозаказА=ОбъектОбработки.грИнтересДозаказ.ПолучитьОбъект();
						ДозаказА.грИнтересДозаказ = Интерес;
						ДозаказА.ОбменДанными.Загрузка=истина;
						ДозаказА.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина); 
						ДозаказА.Записать();
					КонецЕсли;
				КонецЕсли;
				// 	18489 Конец 
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+ОбъектОбработки.Ссылка, ОбъектОбработки.Ссылка);			
				
				~КонецИнтересКлиента:
				
				// ++ Градум Вахрушев А.В. 31.03.2021 Задача № ERP-294
				Если (ЗначениеЗаполнено(ОбъектОбработки.Ссылка)) Тогда
					грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
					ОбъектОбработки.Ссылка, 
					Ключ, 
					ПараметрыОбработки.Отправитель,  
					новый Структура(
					"ВидИдентификатораСтрока, ДатаОбновления",
					ВидИдентификатора,
					ПараметрыОбработки.ВремяПакета
					)
					);
				КонецЕсли;
				// -- Градум Вахрушев А.В. 31.03.2021 Задача № ERP-294 
				
				#КонецОбласти
				
				#Область ИсточникиПервичногоИнтереса
				
				Источник=_.ЗначениеРеквизита(xdtoОбъект, "SOURCE_ID", "Строка", Ложь, "");
				Если ЗначениеЗаполнено(Источник) Тогда
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	КаналыРекламныхВоздействий.Ссылка КАК Ссылка,
					|	КаналыРекламныхВоздействий.КодБитрикс24 КАК КодБитрикс24,
					|	КаналыРекламныхВоздействий.ТипЗначения КАК ТипЗначения
					|ИЗ
					|	ПланВидовХарактеристик.КаналыРекламныхВоздействий КАК КаналыРекламныхВоздействий
					|ГДЕ
					|	КаналыРекламныхВоздействий.КодБитрикс24 ПОДОБНО ""%"" + &КодБитрикс24 + ""%""";
					
					Запрос.УстановитьПараметр("КодБитрикс24", Источник);
					Выборка = Запрос.Выполнить().Выбрать();
					
					Пока Выборка.Следующий() Цикл          // Тимофеев 18925  источник больше не заполняем;
						
						МассивИсточников = СтрРазделить(Выборка.КодБитрикс24, ";");
						Значение = МассивИсточников.Найти(Источник);
						Если Значение <> Неопределено Тогда
							Тип = Выборка.ТипЗначения.Типы()[0];
							Мета = Метаданные.НайтиПоТипу(Тип);
							
							Ссылка = Неопределено;
							Если Справочники.ТипВсеСсылки().СодержитТип(Тип) Тогда
								Если Мета.Реквизиты.Найти("КодБитрикс24") <> Неопределено Тогда
									Ссылка = Справочники[Мета.Имя].НайтиПоРеквизиту("КодБитрикс24", Источник);
								КонецЕсли;
							ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(Тип) Тогда
								Если Мета.ЗначенияПеречисления.Найти(Источник) <> Неопределено Тогда
									Ссылка = Перечисления[Мета.Имя][Источник];
								КонецЕсли;
							КонецЕсли;
							
							Если ЗначениеЗаполнено(Ссылка) Тогда
								
								МЗ = РегистрыСведений.ИсточникиПервичногоИнтереса.СоздатьМенеджерЗаписи();
								МЗ.Период = Интерес.Дата;
								МЗ.Сделка = Интерес;
								МЗ.Партнер = СКСДляИсточникаПервичногоИнтереса;
								МЗ.БизнесПартнер= БизнесПартнер;
								МЗ.КаналПервичногоИнтереса = Выборка.Ссылка;
								МЗ.ИсточникПервичногоИнтереса = Ссылка;    // Тимофеев 18925
								МЗ.Записать(Истина); 								
							КонецЕсли;							
							Прервать;
						КонецЕсли; 						
					КонецЦикла;					
				КонецЕсли;
				
				#КонецОбласти
				
				#Область ЗаказКлиента
				
				Если (ЗначениеЗаполнено(ТочкаВыдачи) И ТочкаВыдачи.ТочкаВыдачи
					// ++ Градум Вахрушев А.В. 09.07.2021 Задача № ERP-504
					И НЕ ТочкаВыдачи.Внутригрупповой)					
					// -- Градум Вахрушев А.В. 09.07.2021 Задача № ERP-504					
					ИЛИ ЗначениеЗаполнено(ТочкаВыдачи) И ТочкаВыдачи.ПолучитьОбъект() = Неопределено
					// ++ Градум Вахрушев. А.В. 25.06.2021
					ИЛИ КатегорииДляСозданияЗаказаНаТочкуВыдачи.Найти(xdtoОбъект.CATEGORY_ID) <> Неопределено Тогда					
					//ИЛИ КатегорииДляСозданияЗаказаКлиента.Найти(xdtoОбъект.CATEGORY_ID) = Неопределено тогда
					// -- Градум Вахрушев. А.В. 25.06.2021
					Перейти ~КонецЗаказКлиента;	
				КонецЕсли;	
				
				сткРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
				Ключ, 
				"Документ.ЗаказКлиента", 
				ВидИдентификатора, 
				ПараметрыОбработки);
				
				ЗаказКлиента = сткРезультатПоиска.Ссылка;
				
				// ++ Вахрушев А.В. 22.06.2021
				ЕстьЗаказКлиентаУникум = Ложь;
				Если (ЗначениеЗаполнено(ЗаказКлиента)) Тогда
					сткРезультатПоискаУникум = грОбработкаПакетовИнтеграции.НайтиКлючПоСсылке(ЗаказКлиента,,,"УНИКУМGUID");
					ЕстьЗаказКлиентаУникум = ?(сткРезультатПоискаУникум.Ключ = Неопределено, Ложь, Истина);		
				КонецЕсли; 					
				// -- Вахрушев А.В. 22.06.2021
				
				//Тимофеев 30.10 ----не нашли заказ клиента совсем - проверяем, что у интереса уже есть связанный заказ (первый)
				//и исправляем его 
				
				Если не ЗначениеЗаполнено(ЗаказКлиента) тогда
					ЗапросЗаказПоИнтересу.УстановитьПараметр("Интерес", Интерес);
					РезультатЗапросаЗаказПоИнтересу = ЗапросЗаказПоИнтересу.Выполнить();
					ВыборкаЗаказПоИнтересу = РезультатЗапросаЗаказПоИнтересу.Выбрать();
					Если ВыборкаЗаказПоИнтересу.Следующий() тогда
						ЗаказКлиента =  ВыборкаЗаказПоИнтересу.Ссылка;
					КонецЕсли;;
				КонецЕсли;
				
				// ++ Градум Вахрушев А.В. 18.05.2021 Задача № ERP-412
				НашлиЗаказПоIDCRM = Ложь;
				// -- Градум Вахрушев А.В. 18.05.2021 Задача № ERP-412
				
				Если Не ЗначениеЗаполнено(ЗаказКлиента) тогда
					ЗаказКлиента = Документы.ЗаказКлиента.НайтиПоРеквизиту("грIDCRM", Ключ);
					// ++ Градум Вахрушев А.В. 18.05.2021 Задача № ERP-412					
					Если (НЕ ЗаказКлиента.Пустая()) Тогда
						НашлиЗаказПоIDCRM = Истина;  						
					КонецЕсли;					
					// -- Градум Вахрушев А.В. 18.05.2021 Задача № ERP-412
				КонецЕсли;		
				
				
				Если ЗначениеЗаполнено(ЗаказКлиента) тогда
					ОбъектОбработки = ЗаказКлиента.ПолучитьОбъект();
					Если (НЕ ПерезаписыватьДокументы ИЛИ ЗапретитьИзменятьРеквизитыЗаказа = Истина) Тогда						
						// ++ Градум Вахрушев А.В. 18.05.2021 Задача № ERP-412
						Если (НашлиЗаказПоIDCRM И НЕ ЗначениеЗаполнено(ЗаказКлиента.грИнтерес)) Тогда
							ОбъектОбработки.грИнтерес = Интерес.Ссылка;						 
							ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
							ОбъектОбработки.Записать();
							
							грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
							ОбъектОбработки.Ссылка, 
							Ключ, 
							ПараметрыОбработки.Отправитель,  
							новый Структура(
							"ВидИдентификатораСтрока, ДатаОбновления",
							ВидИдентификатора,
							ПараметрыОбработки.ВремяПакета
							)
							);
							
						КонецЕсли;						
						// -- Градум Вахрушев А.В. 18.05.2021 Задача № ERP-412 						
						
						Перейти ~ЗаписьКлючаЗаказКлиента;
					КонецЕсли;	
				Иначе 
					// ++Вахрушев А.В. 25.06.2021
					Если (ПараметрыОбработки.МассоваяЗагрузка И НЕ ЕстьЗаказКлиентаУникум) Тогда
						// --Вахрушев А.В. 25.06.2021					
					ИначеЕсли (НЕ ПерезаписыватьДокументы ИЛИ ЗапретитьИзменятьРеквизитыЗаказа = Истина) Тогда
						Перейти ~КонецЗаказКлиента;
					КонецЕсли;					
					ОбъектОбработки = Документы.ЗаказКлиента.СоздатьДокумент();
				КонецЕсли;
				
				ОбъектОбработки.Дата                            = ДатаДокумента;
				ОбъектОбработки.Номер                           = НомерДокумента;
				ОбъектОбработки.ПометкаУдаления                 = Ложь;
				ОбъектОбработки.АдресДоставки                   = АдресДоставкиСтрокой;
				ОбъектОбработки.Валюта                          = Валюта;
				ОбъектОбработки.грIDCRM                         = Ключ;
				ОбъектОбработки.грДатаВходящегоДокумента        = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "DATE_CREATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				ОбъектОбработки.грНомерВходящегоДокумента       = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_59F8C016018E5", "Строка", Ложь, "");
				ОбъектОбработки.грСдача                         = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532509522", "Число",, 0);
				ОбъектОбработки.грЦеныКакВЗаказе                = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1561972197", "Булево",, Ложь);
				ОбъектОбработки.ДатаПоДаннымКлиента             = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "DATE_CREATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				ОбъектОбработки.Комментарий                     = Комментарий;
				ОбъектОбработки.НомерПоДаннымКлиента            = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_59F8C016018E5", "Строка", Ложь, "");
				ОбъектОбработки.Организация                     = Организация;
				ОбъектОбработки.Подразделение                   = Подразделение;
				ОбъектОбработки.ХозяйственнаяОперация           = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
				ОбъектОбработки.Соглашение                      = Соглашение;
				ОбъектОбработки.ЦенаВключаетНДС                 = Истина;
				ОбъектОбработки.Статус                          = СтатусЗаказаКлиента;
				
				ЗапросСКСпоБП.УстановитьПараметр("грЗначениеУзла", интерес.грКонтрагентУникум.грБизнесПартнер);
				ВыборкаСКСДляЗаказа= ЗапросСКСпоБП.Выполнить().Выбрать();
				Если ВыборкаСКСДляЗаказа.Следующий() тогда 
					ОбъектОбработки.Партнер=ВыборкаСКСДляЗаказа.ссылка;
				иначе
					ОбъектОбработки.Партнер=неопределено;
				КонецЕсли;            
				
				ОбъектОбработки.грИнтерес = Интерес.Ссылка;			
				
				// Датареон, Лемцё, 05.10.2020 -->
				Подразделение = Неопределено;
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	СтруктураПредприятия.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
				|ГДЕ
				|	СтруктураПредприятия.Код = ""5""
				|	И СтруктураПредприятия.Наименование = ""ДцР"""
				);
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда 
					Подразделение = Выборка.Ссылка;
				КонецЕсли;
				
				ОбъектОбработки.Подразделение                   = Подразделение;
				ОбъектОбработки.ФормаОплаты                     = ФормыОплаты.Получить(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1524477379", "Строка", Ложь, ""));;
				
				СтрокаЗаказаКлиента = Документы.грСтрокаЗаказаКлиента.НайтиПоРеквизиту("ДокументВладелец", ОбъектОбработки.Ссылка);
				Склад = СтрокаЗаказаКлиента.Склад;
				ОбъектОбработки.Склад                           = Склад;
				// <-- Датареон, Лемцё, 05.10.2020
				
				ОбъектОбработки.Согласован = Ложь;
				ОбъектОбработки.МаксимальныйКодСтроки = 0;
				
				ПовышенныйПриоритет = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1532509451", "Булево",, Ложь);
				Если ПовышенныйПриоритет тогда
					ОбъектОбработки.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Высокий", Истина);
				Иначе 
					ОбъектОбработки.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний", Истина);
				КонецЕсли;	
				
				ОбъектОбработки.грКлючевойКлиент = БизнесПартнер;
				ОбъектОбработки.Контрагент       = Контрагент;
				ОбъектОбработки.АдресОтгрузки = АдресОтгрузкиФЛ;		
				ОбъектОбработки.грКонтактноеЛицоЗаказа = КонтактноеЛицо;
				ОбъектОбработки.грКонтрагентУникум = КонтрагентУникум;			
				ОбъектОбработки.грМенеджер = Менеджер;
				ОбъектОбработки.грОПКлиента = КонтрагентУникум;
				ОбъектОбработки.Договор = ДоговорКонтрагента;
				ОбъектОбработки.КонтактноеЛицо = ?(ЗначениеЗаполнено(грКонтактноеЛицо),грКонтактноеЛицо,КонтактноеЛицо);
				ОбъектОбработки.CRMLAB_КонтактноеЛицоПолучатель = КонтактноеЛицо;
				грКонтактноеЛицо = Неопределено;
				Если ЧастиКлючаКЛ.Количество() = 2 Тогда
					Запрос = Новый Запрос(
					"ВЫБРАТЬ
					|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
					|ГДЕ
					|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление = &НомерТелефона
					|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица)"
					);
					Запрос.УстановитьПараметр("НомерТелефона", НомерТелефонаКЛ);
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда 
						грКонтактноеЛицо = Выборка.Ссылка;
					КонецЕсли;
				КонецЕсли;				
				
				// ГРАДУМ ++ Приходько, 25.06.2021, ERP-473
				грСКССервер.ЗаполнитьУзлыСКС(ОбъектОбработки);
				// ГРАДУМ -- Приходько, 25.06.2021, ERP-473				
				
				// Строки заказа клиента
				Товары = _.ТаблицаЗначенийПоДокументамСтрок("Документ.грСтрокаЗаказаКлиента",
				"SKU, АКУ, ДатаДокРеализации, ПроцентСкидкиРучная, ЦенаРучнаяСкидка, СуммаВзаиморасчетов, ЦенаАКУ,
				|ДатаДоставкиПо, Количество, КомментарийДКС, КомментарийСклад, ПроцентСкидкиАКУ, Сумма, СуммаНДС,
				|Цена, ВремяДоставкиПо, ВремяДоставкиС, АГТ, ЦенаМРЦ, ЦенаРКУ, ОтгрузкаВРозницу, СтавкаНДС, УНК, АдресДоставки, ВыставитьСчетНаОплату,
				|КЛКлиентаПоДоставке, РазныеЦены, СуммаМРЦ, СуммаРКУ, СуммаУПР, ЦенаПК, КомментарийТК,
				|СуммаСкидкиРучная, КачествоТовара, Серия, ЧастьСправкиБ, ТипДоставки, НомерСтроки,								
				|КанальнаяЦена, ВидКанальнойЦены, 				
				|ВложенностьВКороб, Купон");
				
				Товары.Колонки.Добавить("АдресДоставкиСтрокой", ОбщегоНазначения.ОписаниеТипаСтрока(150));
				
				ТипДата = Новый ОписаниеТипов("Дата", , ,
				Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
				
				Товары.Колонки.Добавить("НомерЧастиСправки2ЕГАИС", ОбщегоНазначения.ОписаниеТипаСтрока(100));
				Товары.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
				Товары.Колонки.Добавить("ДатаДоставки", ТипДата);				
				Товары.Колонки.Добавить("ДатаОтгрузки", ТипДата);
				//+++Начало Гарчуков (02 августа 2021) https://ludingkis.atlassian.net/browse/ERP-585
				Товары.Колонки.Добавить("АссортиментнаяДистрибьюция", Новый ОписаниеТипов("СправочникСсылка.грАссортиментнаяДистрибьюция"));
				//---Конец Гарчуков (02 августа 2021)
				
				КэшированныеЗначения = Новый Структура;
				
				СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ОбъектОбработки);
				
				СтруктураДействий 	 = Новый Структура;
				СтруктураДействий.Вставить("ЗаполнитьНормуВложенностиПоНоменклатуре"	, Новый Структура("Номенклатура", "ВложенностьВКороб"));
				СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
				
				Попытка
					xdtoТовары = xdtoОбъект.PRODUCT_ROWS.Последовательность();
				Исключение
					xdtoТовары = Новый Массив;
				КонецПопытки;	
				
				Для Индекс = 0 По xdtoТовары.Количество()-1 Цикл
					
					xdtoСтрока = xdtoТовары.ПолучитьЗначение(Индекс);
					КоличествоВСтроке = _.ЗначениеРеквизита(xdtoСтрока, "QUANTITY", "Число",, 0);
					
					Если  КоличествоВСтроке=0 тогда 
						Продолжить; 
					КонецЕсли;
					
					НовСтр = Товары.Добавить();
					НовСтр.НомерСтроки=Индекс;
					// Для контекстной подсказки.
					Если Ложь тогда
						НовСтр = Документы.грСтрокаЗаказаКлиента.СоздатьДокумент();
					КонецЕсли;	
					
					PRODUCT_CODE = _.ЗначениеРеквизита(xdtoСтрока, "PRODUCT_CODE", "Строка", Ложь, "");
					Если ЗначениеЗаполнено(PRODUCT_CODE) тогда						
						ЗапросСКЮпоКодуУникум.УстановитьПараметр("грКодУникум", PRODUCT_CODE);
						Выборка = ЗапросСКЮпоКодуУникум.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НовСтр.SKU = Выборка.Ссылка;
						КонецЕсли;
					КонецЕсли;
					
					
					Если ЗначениеЗаполнено(НовСтр.SKU) тогда
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	грСоответствиеАГТ_SKUСрезПоследних.АГТ КАК АГТ
						|ИЗ
						|	РегистрСведений.грСоответствиеАГТ_SKU.СрезПоследних(&Период, SKU = &SKU) КАК грСоответствиеАГТ_SKUСрезПоследних";
						Запрос.УстановитьПараметр("SKU", НовСтр.SKU);
						Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НовСтр.АГТ = Выборка.АГТ;
							//+++Начало Гарчуков (02 августа 2021) https://ludingkis.atlassian.net/browse/ERP-585
							НовСтр.АссортиментнаяДистрибьюция = ПланыВидовХарактеристик.грСвойстваАГТSKU.ПолучитьСвойствоАссортиментнаяДистрибуция(НовСтр.АГТ);
							//---Градум Гарчуков (02 августа 2021)
						КонецЕсли;                    
					КонецЕсли;	
					
					Если Не ЗначениеЗаполнено(НовСтр.SKU) И ЗначениеЗаполнено(PRODUCT_CODE) тогда
						НовСтр.SKU = Справочники.Номенклатура.ПолучитьСсылку();	
					КонецЕсли;	
					
					//+++Начало Гарчуков (21 июля 2021) https://ludingkis.atlassian.net/browse/ERP-553
					ВидЦеныМРЦ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("МРЦ");
					Если ЗначениеЗаполнено(ВидЦеныМРЦ) И ЗначениеЗаполнено(НовСтр.SKU) тогда
						ОтборЦен = Новый Структура;
						ОтборЦен.Вставить("Номенклатура", НовСтр.SKU);
						ОтборЦен.Вставить("ВидЦены", 	  ВидЦеныМРЦ);
						НовСтр.ЦенаМРЦ = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ОбъектОбработки.Дата, ОтборЦен).Цена;	
					КонецЕсли;
					//---Конец Гарчуков (21 июля 2021)
					
					НовСтр.ДатаДоставки          = ДатаЗакрытия;
					НовСтр.ДатаОтгрузки          = ДатаОтгрузки;
					НовСтр.КомментарийДКС        = Комментарий;
					НовСтр.КомментарийСклад      = КомментарийСклад;
					//+++Начало Гарчуков (21 июля 2021) https://ludingkis.atlassian.net/browse/ERP-550
					//НовСтр.ПроцентСкидкиАКУ      = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда
						НовСтр.ПроцентСкидкиАКУ      = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);
					КонецЕсли;
					//---Конец Гарчуков (21 июля 2021)
					НовСтр.Количество            = КоличествоВСтроке;
					НовСтр.Цена                  = _.ЗначениеРеквизита(xdtoСтрока, "PRICE", "Число",, 0);
					НовСтр.СтавкаНДС             = СтавкиНДС[_.ЗначениеРеквизита(xdtoСтрока, "TAX_RATE", "Число",, Неопределено)];
					НовСтр.УНК                   = УНК.Получить(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1511359326", "Строка",, ""));
					НовСтр.ДатаДокРеализации     = ДатаДокРеализации;
					НовСтр.ВремяДоставкиС        = ВремяДоставкиС;
					НовСтр.ВремяДоставкиПо       = ВремяДоставкиПо;
					//+++Начало Гарчуков (10 августа 2021) https://ludingkis.atlassian.net/browse/ERP-568
					//НовСтр.ОтгрузкаВРозницу      = НовСтр.УНК;
					Если ЗначениеЗаполнено(БизнесПартнер) И БизнесПартнер.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда
						НовСтр.ОтгрузкаВРозницу	 = Истина;						
					Иначе
						НовСтр.ОтгрузкаВРозницу  = НовСтр.УНК;
					КонецЕсли;
					//---Конец Гарчуков (10 августа 2021)
					НовСтр.АдресДоставки         = АдресДоставки;
					НовСтр.ВыставитьСчетНаОплату = Ложь;
					// Датареон, 07.10.2020, Лемцё (по требованию задачи 7787)-->
					НовСтр.КЛКлиентаПоДоставке   = ?(ЗначениеЗаполнено(грКонтактноеЛицо),грКонтактноеЛицо,ОбъектОбработки.грКонтактноеЛицоЗаказа);
					// <-- Датареон, 07.10.2020, Лемцё
					НовСтр.РазныеЦены            = Ложь;
					НовСтр.СуммаМРЦ              = 0;
					НовСтр.СуммаРКУ              = НовСтр.ЦенаРКУ * НовСтр.Количество;
					НовСтр.ЦенаПК                = НовСтр.Цена;
					НовСтр.ДатаДоставкиПо        = КонецДня(НовСтр.ДатаДоставки);
					НовСтр.КачествоТовара        = Справочники.грКачествоТоваров.Кондиция;
					
					СкидкаНаценка = Неопределено;
					
					// Датареон, Новиков, 28.08.2020 -->
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					// ++ Градум Вахрушев А.В. 29.06.2021 Задача № ERP-480					
					ЭтоПодарок = _.ЗначениеРеквизита(xdtoСтрока, "IS_GIFT", "Булево",, Ложь);
					// -- Градум Вахрушев А.В. 29.06.2021 Задача № ERP-480					
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда
						
						СтокКод =  _.ЗначениеРеквизита(xdtoСтрока, "STOCK_CODE", "Строка", Истина, ""); 						
						Если (ЗначениеЗаполнено(СтокКод)) Тогда                                         						
							Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.СкидкиНаценки ГДЕ ЭтоГруппа = ЛОЖЬ И грВнешнийКод = &грВнешнийКод И &грВнешнийКод <> """"");
							Запрос.УстановитьПараметр("грВнешнийКод", СтокКод);
							Выборка = Запрос.Выполнить().Выбрать();
							Если Выборка.Следующий() тогда
								СкидкаНаценка = Выборка.Ссылка;							
								
								// ++ Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480
								//// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
								//Если (НЕ СкидкаНаценка.грПредоставляетсяНаЛюбуюНоменклатуру) Тогда
								//	// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
								//	
								//	Запрос = Новый Запрос(
								//	"ВЫБРАТЬ
								//	|	ДействиеСкидокНаценокСрезПоследних.Источник КАК СкидкаНаценка
								//	|ИЗ
								//	|	РегистрСведений.ДействиеСкидокНаценокПоНоменклатуре.СрезПоследних(
								//	|			,
								//	|			Источник = &СкидкаНаценка
								//	|				И (Номенклатура = &SKU
								//	|					ИЛИ Номенклатура = &АГТ
								//	|					ИЛИ грСвойствоАГТ В
								//	|						(ВЫБРАТЬ
								//	|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних.Свойство
								//	|						ИЗ
								//	|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних(&Период, Объект = &АГТ)))) КАК ДействиеСкидокНаценокСрезПоследних
								//	|ГДЕ
								//	|	ДействиеСкидокНаценокСрезПоследних.Статус = &СтатусДействует"
								//	);
								//	Запрос.УстановитьПараметр("SKU", НовСтр.SKU);
								//	Запрос.УстановитьПараметр("АГТ", НовСтр.АГТ);
								//	Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
								//	Запрос.УстановитьПараметр("СкидкаНаценка", СкидкаНаценка);
								//	Запрос.УстановитьПараметр("СтатусДействует", Перечисления.СтатусыДействияСкидок.Действует);
								//	
								//	Если НЕ Запрос.Выполнить().Пустой() Тогда 
								//		НовСтр.АКУ = СкидкаНаценка;
								//	КонецЕсли;
								//	// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360	
								//Иначе
								//	НовСтр.АКУ = СкидкаНаценка;
								//КонецЕсли; 
								//// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
								
								// -- Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480 							
								НовСтр.АКУ = СкидкаНаценка;
							КонецЕсли;
							
							// ++ Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480
							//Если
							//	// ++ Градум Вахрушев А.В. 01.07.2021 Задача № ERP-480
							//	НЕ ЭтоПодарок
							//	//ЗначениеЗаполнено( _.ЗначениеРеквизита(xdtoСтрока, "STOCK_CODE", "Строка", Истина, "")) 
							//	// ++ Градум Вахрушев А.В. 01.07.2021 Задача № ERP-480	
							//	
							//	И Не ЗначениеЗаполнено(НовСтр.АКУ) тогда
							//	НовСтр.АКУ = Справочники.СкидкиНаценки.ПолучитьСсылку();
							//	// ++ Градум Вахрушев А.В. 29.06.2021 Задача № ERP-480
							//ИначеЕсли (ЭтоПодарок И НЕ ЗначениеЗаполнено(НовСтр.АКУ)) Тогда				
							//	НовСтр.АКУ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("ПодарочнаяАкцияПоУмолчанию");						
							//	// -- Градум Вахрушев А.В. 29.06.2021 Задача № ERP-480
							//КонецЕсли;
							
							Если (НЕ ЗначениеЗаполнено(НоваяСтрока.АКУ)) Тогда
								Если (ЭтоПодарок) Тогда
									НовСтр.АКУ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("ПодарочнаяАкцияПоУмолчанию");
								Иначе
									НовСтр.АКУ = Справочники.СкидкиНаценки.ПолучитьСсылку();
								КонецЕсли;							
							КонецЕсли;
							// -- Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480					
							
						КонецЕсли;
						НовСтр.ЦенаАКУ = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0);						
						
					КонецЕсли;					
					
					
					Если ТипСкидки = "4" Тогда 
						НовСтр.ПроцентСкидкиРучная = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);
						НовСтр.ЦенаРучнаяСкидка = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0);
						НовСтр.СуммаСкидкиРучная = Окр(НовСтр.Количество * НовСтр.ЦенаРучнаяСкидка , 2);
					КонецЕсли; 					
					
					Если ЗначениеЗаполнено(СкидкаНаценка) 
						И ЗначениеЗаполнено(Купон) 
						И ТипСкидки = "5" 
						И тзСкидкиИКупоны <> Неопределено тогда						
						
						НайденаяСкидка = тзСкидкиИКупоны.Найти(СкидкаНаценка, "СкидкаНаценка");
						Если (НайденаяСкидка <> Неопределено) Тогда
							НовСтр.Купон = Купон; 
						Иначе
							НовСтр.Купон = Справочники.грСкидочныеКупоны.ПолучитьСсылку();
						КонецЕсли; 						
						
						// ++ Градум Вахрушев А.В. 29.04.2021 Задача № ERP-363
						// ++ Градум Вахрушев А.В. 12.07.2021 Задача № ERP-493
						// НовСтр.ВидКанальнойЦены		= ВидЦенДокумента;	
						// НовСтр.КанальнаяЦена		= ?(ВидЦенДокумента.ЦенаВключаетНДС, _.ЗначениеРеквизита(xdtoСтрока, "PRICE_BRUTTO", "Число",, 0),
						// _.ЗначениеРеквизита(xdtoСтрока, "PRICE_NETTO", "Число",, 0));
						// НовСтр.ЦенаРКУ				= НовСтр.КанальнаяЦена;
						// -- Градум Вахрушев А.В. 12.07.2021 Задача № ERP-493 						
						НовСтр.Цена					= ?(ВидЦенДокумента.ЦенаВключаетНДС, _.ЗначениеРеквизита(xdtoСтрока, "PRICE", "Число",, 0),
						_.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0));
						// -- Градум Вахрушев А.В. 29.04.2021 Задача № ERP-363
						
					КонецЕсли;
					
					// ГРАДУМ ++ Приходько, 05.07.2021, ERP-488
					// ++ Градум Вахрушев А.В. 12.07.2021 Задача № ERP-493
					//Если Не ЗначениеЗаполнено(НовСтр.КанальнаяЦена) Тогда
					//	Если ЗначениеЗаполнено(ВидЦенДокумента) И ВидЦенДокумента.ЦенаВключаетНДС Тогда	
					//		НовСтр.КанальнаяЦена = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_BRUTTO", "Число",, 0)
					//	Иначе						
					//		НовСтр.КанальнаяЦена = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_NETTO", "Число",, 0);
					//	КонецЕсли;
					//КонецЕсли; 
					// -- Градум Вахрушев А.В. 12.07.2021 Задача № ERP-493
					НовСтр.ВидКанальнойЦены		= ВидЦенДокумента;
					// ГРАДУМ ++ Приходько, 05.07.2021, ERP-488
					
					// ++ Градум Вахрушев А.В. 12.07.2021 Задача № ERP-493
					Если ЗначениеЗаполнено(ВидЦенДокумента) И НЕ ВидЦенДокумента.ЦенаВключаетНДС Тогда	
						НовСтр.КанальнаяЦена = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_NETTO", "Число",, 0)
					Иначе						
						НовСтр.КанальнаяЦена = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_BRUTTO", "Число",, 0);
					КонецЕсли;
					
					НовСтр.ЦенаРКУ				= НовСтр.КанальнаяЦена;
					// -- Градум Вахрушев А.В. 12.07.2021 Задача № ERP-493
					
					//+++Начало Гарчуков (16 августа 2021) https://ludingkis.atlassian.net/browse/ERP-550
					//Если ТипСкидки = "3" ИЛИ ТипСкидки = "0" Тогда
					//	НовСтр.ЦенаРКУ = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_NETTO", "Число",, 0);
					//КонецЕсли; 
					//---Конец Гарчуков (16 августа 2021)
					
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НовСтр, СтруктураДействий, КэшированныеЗначения);	
					НовСтр.СуммаУпр = НовСтр.Сумма;
				КонецЦикла;
				
				// Датареон, 28.08.2020, Новиков -->
				Если (ПерезаписыватьДокументы // ++ Градум Вахрушев А.В. 29.03.2021 Задача № ERP-281
					// ++ Градум Вахрушев А.В. 22.06.2021
					ИЛИ  (ПараметрыОбработки.МассоваяЗагрузка И НЕ ЕстьЗаказКлиентаУникум)
					// -- Градум Вахрушев А.В. 22.06.2021
					) Тогда						
					
					ОбъектОбработки.ОбменДанными.Загрузка = Истина;
					ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
					ОбъектОбработки.Записать(); 					
				КонецЕсли;														// -- Градум Вахрушев А.В. 29.03.2021 Задача № ERP-281
				// <-- Датареон, 28.08.2020, Новиков
				
				МассивНоменклатуры = Товары.ВыгрузитьКолонку("SKU");
				
				ТаблицаУпаковки = грОбработкаПакетовИнтеграции.ТаблицаУпаковокНоменклатуры(МассивНоменклатуры);   				
				
				// ++ Градум Вахрушев А.В. 28.04.2021 Задача № ERP-363
				ВидЦеныМРЦ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("МРЦ");
				// -- Градум Вахрушев А.В. 28.04.2021 Задача № ERP-363
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("Упаковки",         ТаблицаУпаковки);
				Запрос.УстановитьПараметр("Товары",           Товары);
				Запрос.УстановитьПараметр("ДатаРасчета",      ОбъектОбработки.Дата);
				Запрос.УстановитьПараметр("ВидЦены", 		  ВидЦеныМРЦ);
				Запрос.УстановитьПараметр("Организация", 	  ОбъектОбработки.Организация);
				Запрос.УстановитьПараметр("ДокументВладелец", ОбъектОбработки.Ссылка);
				Запрос.УстановитьПараметр("Инкассация", 	  Ложь);
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	Товары.НомерСтроки КАК НомерСтроки,				
				|	Товары.КанальнаяЦена КАК КанальнаяЦена,
				|	Товары.ВидКанальнойЦены КАК ВидКанальнойЦены,				
				|	Товары.АдресДоставки КАК АдресДоставки,
				|	Товары.ВремяДоставкиПо КАК ВремяДоставкиПо,
				|	Товары.ВремяДоставкиС КАК ВремяДоставкиС,
				|	Товары.ВыставитьСчетНаОплату КАК ВыставитьСчетНаОплату,
				|	Товары.ДатаДоставки КАК ДатаДоставки,
				|	Товары.ДатаДоставкиПо КАК ДатаДоставкиПо,
				|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
				|	Товары.Количество КАК Количество,
				|	Товары.КомментарийДКС КАК КомментарийДКС,
				|	Товары.КомментарийСклад КАК КомментарийСклад,
				|	Товары.КомментарийТК КАК КомментарийТК,
				|	Товары.SKU КАК SKU,
				|	Товары.ОтгрузкаВРозницу КАК ОтгрузкаВРозницу,
				|	Товары.ПроцентСкидкиАКУ КАК ПроцентСкидкиАКУ,
				|	Товары.Серия КАК Серия,
				|	Товары.СтавкаНДС КАК СтавкаНДС,
				|	Товары.Сумма КАК Сумма,
				|	Товары.СуммаНДС КАК СуммаНДС,
				|	Товары.СуммаСкидкиРучная КАК СуммаСкидкиРучная,
				|	Товары.УНК КАК УНК,
				|	Товары.Купон КАК Купон,
				|	Товары.Цена КАК Цена,
				|	Товары.АГТ КАК АГТ,
				|	Товары.АКУ КАК АКУ,
				|	Товары.ДатаДокРеализации КАК ДатаДокРеализации,
				|	Товары.КЛКлиентаПоДоставке КАК КЛКлиентаПоДоставке,
				|	Товары.ПроцентСкидкиРучная КАК ПроцентСкидкиРучная,
				|	Товары.РазныеЦены КАК РазныеЦены,
				|	Товары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
				|	Товары.СуммаМРЦ КАК СуммаМРЦ,
				|	Товары.СуммаРКУ КАК СуммаРКУ,
				|	Товары.СуммаУПР КАК СуммаУПР,
				|	Товары.ЦенаАКУ КАК ЦенаАКУ,
				|	Товары.ЦенаМРЦ КАК ЦенаМРЦ,
				|	Товары.ЦенаРучнаяСкидка КАК ЦенаРучнаяСкидка,
				|	Товары.ЦенаПК КАК ЦенаПК,
				|	Товары.ЦенаРКУ КАК ЦенаРКУ,
				|	Товары.КачествоТовара КАК КачествоТовара,
				|	Товары.ВложенностьВКороб КАК ВложенностьВКороб,
				|	Товары.ТипДоставки КАК ТипДоставки,
				|	Товары.ЧастьСправкиБ КАК ЧастьСправкиБ,
				//+++Начало Гарчуков (02 августа 2021) https://ludingkis.atlassian.net/browse/ERP-585
				|	Товары.АссортиментнаяДистрибьюция КАК АссортиментнаяДистрибьюция
				//---Конец Гарчуков (02 августа 2021)
				|ПОМЕСТИТЬ ВТ_Товары
				|ИЗ
				|	&Товары КАК Товары
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Упаковки.Номенклатура КАК Номенклатура,
				|	Упаковки.УпаковкаШтука КАК ЕдиницаИзмерения
				|ПОМЕСТИТЬ ВТ_Упаковки
				|ИЗ
				|	&Упаковки КАК Упаковки
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Товары.SKU КАК SKU,
				|	МАКСИМУМ(ЕСТЬNULL(грСтрокаЗаказаКлиентаПлан.Ссылка, ЗНАЧЕНИЕ(Документ.грСтрокаЗаказаКлиента.ПустаяСсылка))) КАК СтрокаПлан,
				|	МАКСИМУМ(ЕСТЬNULL(грСтрокаЗаказаКлиентаФакт.Ссылка, ЗНАЧЕНИЕ(Документ.грСтрокаЗаказаКлиента.ПустаяСсылка))) КАК СтрокаФакт,
				|	ВТ_Товары.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ втДокументыСтроки
				|ИЗ
				|	ВТ_Товары КАК ВТ_Товары
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.грСтрокаЗаказаКлиента КАК грСтрокаЗаказаКлиентаФакт
				|		ПО ВТ_Товары.SKU = грСтрокаЗаказаКлиентаФакт.SKU
				|			И (грСтрокаЗаказаКлиентаФакт.Вид = ЗНАЧЕНИЕ(Перечисление.грВидыДокументовСтрок.ФактическаяСтрока))
				|			И (грСтрокаЗаказаКлиентаФакт.ДокументВладелец = &ДокументВладелец)
				|			И ВТ_Товары.Цена = грСтрокаЗаказаКлиентаФакт.Цена
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.грСтрокаЗаказаКлиента КАК грСтрокаЗаказаКлиентаПлан
				|		ПО ВТ_Товары.SKU = грСтрокаЗаказаКлиентаПлан.SKU
				|			И (грСтрокаЗаказаКлиентаПлан.Вид = ЗНАЧЕНИЕ(Перечисление.грВидыДокументовСтрок.ПлановаяСтрока))
				|			И (грСтрокаЗаказаКлиентаПлан.ДокументВладелец = &ДокументВладелец)
				|			И ВТ_Товары.Цена = грСтрокаЗаказаКлиентаПлан.Цена
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_Товары.SKU,
				|	ВТ_Товары.НомерСтроки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Товары.НомерСтроки КАК НомерСтроки,				
				|	ВТ_Товары.КанальнаяЦена КАК КанальнаяЦена,
				|	ВТ_Товары.ВидКанальнойЦены КАК ВидКанальнойЦены,				
				|	ВТ_Товары.ВыставитьСчетНаОплату КАК ВыставитьСчетНаОплату,
				|	ВТ_Товары.ДатаДоставкиПо КАК ДатаДоставкиПо,
				|	ВТ_Товары.Количество КАК Количество,
				|	ВТ_Товары.КомментарийДКС КАК КомментарийДКС,
				|	ВТ_Товары.КомментарийСклад КАК КомментарийСклад,
				|	ВТ_Товары.SKU КАК SKU,
				|	ВТ_Товары.ОтгрузкаВРозницу КАК ОтгрузкаВРозницу,
				|	ВТ_Товары.Серия КАК Серия,
				|	ВТ_Товары.СтавкаНДС КАК СтавкаНДС,
				|	ВТ_Товары.Сумма КАК Сумма,
				|	ВТ_Товары.СуммаНДС КАК СуммаНДС,
				|	ВТ_Товары.УНК КАК УНК,
				|	ВТ_Товары.Купон КАК Купон,
				|	ВТ_Товары.Цена КАК Цена,
				|	ВТ_Товары.АГТ КАК АГТ,
				|	ВТ_Товары.ЦенаРучнаяСкидка КАК ЦенаРучнаяСкидка,
				|	ВТ_Упаковки.ЕдиницаИзмерения КАК Упаковка,
				|	ЕСТЬNULL(грСкладыПоУмолчанию.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
				|	ЗНАЧЕНИЕ(Перечисление.грСтатусыПО.ВНаличии) КАК СтатусПО,
				//+++Начало Гарчуков (30 июля 2021) https://ludingkis.atlassian.net/browse/ERP-553
				//|	ВЫРАЗИТЬ(ВЫБОР
				//|			КОГДА НЕ ЦеныНоменклатурыСрезПоследних.Цена ЕСТЬ NULL
				//|				ТОГДА ЦеныНоменклатурыСрезПоследних.Цена * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) / ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1)
				//|			ИНАЧЕ 0
				//|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ЦенаМРЦ,
				|	ВТ_Товары.ЦенаМРЦ КАК ЦенаМРЦ,
				//---Конец Гарчуков (30 июля 2021)
				|	ВТ_Товары.ДатаДоставки КАК ДатаДоставкиС,
				|	ВТ_Товары.ДатаОтгрузки КАК ДатаОтгрузкиС,
				|	ВТ_Товары.ДатаОтгрузки КАК ДатаОтгрузкиПо,
				|	ВТ_Товары.ЧастьСправкиБ КАК ЧастьСправкиБ,
				|	ВТ_Товары.ЦенаПК КАК ЦенаПК,
				|	ВТ_Товары.ЦенаРКУ КАК ЦенаРКУ,
				|	ВТ_Товары.СуммаРКУ КАК СуммаРКУ,
				|	ВТ_Товары.АКУ КАК АКУ,
				|	ВТ_Товары.ПроцентСкидкиРучная КАК ПроцентСкидкиРучная,
				|	ВТ_Товары.ЦенаАКУ КАК ЦенаАКУ,
				|	ВТ_Товары.ПроцентСкидкиАКУ КАК ПроцентСкидкиАКУ,
				|	ВТ_Товары.СуммаСкидкиРучная КАК СуммаСкидкиРучная,
				|	ВТ_Товары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
				|	ВТ_Товары.СуммаУПР КАК СуммаУПР,
				|	ВТ_Товары.КомментарийТК КАК КомментарийТК,
				|	ВТ_Товары.КЛКлиентаПоДоставке КАК КЛКлиентаПоДоставке,
				|	ВТ_Товары.КачествоТовара КАК КачествоТовара,
				|	ВТ_Товары.ВложенностьВКороб КАК ВложенностьВКороб,
				|	ВТ_Товары.ТипДоставки КАК ТипДоставки,
				|	ВТ_Товары.АдресДоставки КАК АдресДоставки,
				|	ВТ_Товары.ВремяДоставкиПо КАК ВремяДоставкиПо,
				|	ВТ_Товары.ВремяДоставкиС КАК ВремяДоставкиС,
				|	ВТ_Товары.ДатаДокРеализации КАК ДатаДокРеализации,
				|	ВЫБОР
				|		КОГДА ВТ_Упаковки.ЕдиницаИзмерения ЕСТЬ NULL
				|			ТОГДА 0
				|		КОГДА ВЫРАЗИТЬ(ВТ_Упаковки.ЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Числитель = 0
				|			ТОГДА 0
				|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_Упаковки.ЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Числитель
				|	КОНЕЦ КАК КоличествоТара,
				|	&Инкассация КАК Инкассация,
				|	втДокументыСтроки.СтрокаПлан КАК СтрокаПлан,
				|	втДокументыСтроки.СтрокаФакт КАК СтрокаФакт,
				//+++Градум Гарчуков (02 августа 2021) https://ludingkis.atlassian.net/browse/ERP-585
				|	ВТ_Товары.АссортиментнаяДистрибьюция КАК АссортиментнаяДистрибьюция
				//---Градум Гарчуков (02 августа 2021)
				|ИЗ
				|	ВТ_Товары КАК ВТ_Товары
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Упаковки КАК ВТ_Упаковки
				|		ПО ВТ_Товары.SKU = ВТ_Упаковки.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.грСкладыПоУмолчанию КАК грСкладыПоУмолчанию
				|		ПО (ВЫРАЗИТЬ(ВТ_Товары.SKU КАК Справочник.Номенклатура).ВидНоменклатуры = грСкладыПоУмолчанию.ВидНоменклатуры)
				|			И (&Организация = грСкладыПоУмолчанию.Организация)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаРасчета, ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаРасчета, ) КАК КурсыВалютСрезПоследних
				|			ПО ЦеныНоменклатурыСрезПоследних.ВидЦены.ВалютаЦены = КурсыВалютСрезПоследних.Валюта
				|		ПО ВТ_Товары.АГТ = ЦеныНоменклатурыСрезПоследних.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументыСтроки КАК втДокументыСтроки
				|		ПО ВТ_Товары.НомерСтроки = втДокументыСтроки.НомерСтроки";
				
				РезультатЗапроса = Запрос.Выполнить();
				
				// ++ Градум Вахрушев А.В. 12.04.2021 Задача № ERP-323
				Если (ЭтоНовыйДокумент) Тогда
					ОбъектОбработки.ДополнительныеСвойства.Вставить("НеФормироватьФактические", Истина);
				КонецЕсли;				
				// -- Градум Вахрушев А.В. 12.04.2021 Задача № ERP-323
				
				грОбработкаПакетовИнтеграции.СоздатьИзменитьДокументыСтроки(ОбъектОбработки, РезультатЗапроса, Ключ, ПараметрыОбработки.Отправитель);
				// КОНЕЦ Строки заказа клиента
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+ОбъектОбработки.Ссылка, ОбъектОбработки.Ссылка);
				
				~ЗаписьКлючаЗаказКлиента:
				
				грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
				ОбъектОбработки.Ссылка, 
				Ключ, 
				ПараметрыОбработки.Отправитель,  
				новый Структура(
				"ВидИдентификатораСтрока, ДатаОбновления",
				ВидИдентификатора,
				ПараметрыОбработки.ВремяПакета
				)
				);
				
				ЗаказКлиента = ОбъектОбработки.Ссылка;
				
				~КонецЗаказКлиента:
				
				#КонецОбласти
				
				#Область ЗаказНаТочкуВыдачи
				
				ЗаказНаТочкуВыдачи = Неопределено;
				
				// Тимофеев 11.02.21 по результатам обсуждения с Зотовым поменяли последовательность тэжгов при поиске товаров: сначала PRODUCT_ROWS потом INITIAL_PRODUCTS
				
				Попытка
					Товары = xdtoОбъект.PRODUCT_ROWS.Последовательность();    
				Исключение
					Товары = Новый Массив;
				КонецПопытки;	
				
				Если Товары.Количество() = 0
					ИЛИ Не (ЗначениеЗаполнено(ТочкаВыдачи) И ТочкаВыдачи.ТочкаВыдачи)					
					// ++ Градум Вахрушев А.В. 09.07.2021 Задача № ERP-504
					ИЛИ (ЗначениеЗаполнено(ТочкаВыдачи) И ТочкаВыдачи.Внутригрупповой И 
					// -- Градум Вахрушев А.В. 09.07.2021 Задача № ERP-504					
					КатегорииДляСозданияЗаказаНаТочкуВыдачи.Найти(xdtoОбъект.CATEGORY_ID) = Неопределено) Тогда 
					
					Перейти ~КонецЗаказНаТочкуВыдачи;					
				КонецЕсли;
				
				// <-- Датареон, Новиков, 26.09.2020
				
				сткРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
				Ключ, 
				"Документ.грЗаказНаТочкуВыдачи", 
				ВидИдентификатора, 
				ПараметрыОбработки);   				
				
				Если ЗначениеЗаполнено(сткРезультатПоиска.Ссылка) тогда
					ОбъектОбработки = сткРезультатПоиска.Ссылка.ПолучитьОбъект();
					Если ЗапретитьИзменятьРеквизитыЗаказа тогда
						Перейти ~ЗаписьКлючаЗаказНаТочкуВыдачи;
					КонецЕсли;
				Иначе 	
					Если  ЗапретитьИзменятьРеквизитыЗаказа тогда
						Перейти ~КонецЗаказНаТочкуВыдачи;
					КонецЕсли;
					
					//Тимофеев 25.11 ----не нашли заказ клиента на ТВ совсем - проверяем, что у интереса уже есть связанный заказ на ТВ (первый)
					//и исправляем его 
					
					ЗапросЗаказНаТВПоИнтересу.УстановитьПараметр("Интерес", Интерес);
					РезультатЗапросЗаказНаТВПоИнтересу = ЗапросЗаказНаТВПоИнтересу.Выполнить();
					ВыборкаЗаказНаТВПоИнтересу = РезультатЗапросЗаказНаТВПоИнтересу.Выбрать();
					Если ВыборкаЗаказНаТВПоИнтересу.Следующий() тогда
						ОбъектОбработки =  ВыборкаЗаказНаТВПоИнтересу.Ссылка.ПолучитьОбъект();
					иначе	
						ОбъектОбработки = Документы.грЗаказНаТочкуВыдачи.СоздатьДокумент();
					КонецЕсли;
					
				КонецЕсли;	
				
				ОбъектОбработки.ПометкаУдаления        = Ложь;
				ОбъектОбработки.Номер             = НомерЗаказаНаТочку;
				ОбъектОбработки.Дата              = ДатаДокумента;
				ОбъектОбработки.IDСделкиCRM       = _.ЗначениеРеквизита(xdtoОбъект, "ID", "Строка", Ложь, "");
				
				// ++ Градум Вахрушев А.В. 09.06.2021 Задача № ERP-452
				//ОбъектОбработки.ДатаСамовывоза    = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "CLOSEDATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				ДатаСамовывоза = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "CLOSEDATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				
				//+++Начало Гарчуков (14 июля 2021) https://ludingkis.atlassian.net/browse/ERP-524
				Если НЕ ЗначениеЗаполнено(ДатаСамовывоза) Тогда
					ДатаСамовывоза = КонецДня(ТекущаяДата()) + 1;
				КонецЕсли;
				//---Конец Гарчуков (14 июля 2021)
				
				Если (Год(ДатаСамовывоза) < 1000) Тогда						
					ТекДата = ДатаСамовывоза;
					тГод	= Год(ТекДата);
					тМесяц	= Месяц(ТекДата);
					тДень	= День(ТекДата);
					тЧас	= Час(ТекДата);
					тМин	= Минута(ТекДата);
					тСек	= Секунда(ТекДата);						
					ОбъектОбработки.ДатаСамовывоза = Дата(тГод + 2000, тМесяц, тДень, тчас, тМин, тСек);	
					//+++Начало Гарчуков (30 июля 2021) https://ludingkis.atlassian.net/browse/ERP-581
				Иначе
					ОбъектОбработки.ДатаСамовывоза = ДатаСамовывоза;	
					//---Конец Гарчуков (30 июля 2021)					
				КонецЕсли;
				
				// -- Градум Вахрушев А.В. 09.06.2021 Задача № ERP-452
				
				
				ОбъектОбработки.Комментарий       = Комментарий;
				
				Статус = СтатусыЗаказаКлиента.Получить(_.ЗначениеРеквизита(xdtoОбъект, "STAGE_ID", "Строка", Ложь, ""));
				Если ЗначениеЗаполнено(Статус) тогда
					ОбъектОбработки.Статус = Статус;
				Иначе 
					ОбъектОбработки.Статус = Перечисления.СтатусыЗаказовКлиентов.Закрыт;
				КонецЕсли;	
				
				ОбъектОбработки.ДатаЗавершенияОбработкиЗаказа = Неопределено;
				ОбъектОбработки.БизнесПартнер = БизнесПартнер;
				ОбъектОбработки.Контрагент    = Контрагент;                 
				ОбъектОбработки.КонтактноеЛицо           = КонтактноеЛицо;
				ОбъектОбработки.КонтактноеЛицоПолучатель = КонтактноеЛицо;
				
				// Датареон, Лемцё, 16.09.2020 -->
				сткРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
				Ключ, 
				"Документ.CRM_Интерес", 
				ВидИдентификатора, 
				ПараметрыОбработки);
				
				Интерес = сткРезультатПоиска.Ссылка;
				ОбъектОбработки.Интерес       				= Интерес.Ссылка;
				// <-- Датареон, Лемцё, 16.09.2020
				
				ОбъектОбработки.Менеджер = Менеджер;
				ОбъектОбработки.Ответственный = ОтветственныйПользователь;
				ОбъектОбработки.СкидочныйКупон = Неопределено;
				ОбъектОбработки.СКС = УзелСКС;
				ОбъектОбработки.Соглашение = Справочники.СоглашенияСКлиентами.НайтиПоКоду(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1572942300", "Строка", Ложь, ""));
				ОбъектОбработки.ТочкаВыдачи = ТочкаВыдачи;
				// ГРАДУМ ++ Приходько, 25.06.2021, ERP-473
				//стрУзлыСКС = ОбъектОбработки.УзлыСКС.Найти(УзелСКС, "УзелСКС");
				//Если стрУзлыСКС = Неопределено тогда
				//	стрУзлыСКС = ОбъектОбработки.УзлыСКС.Добавить();
				//КонецЕсли;	
				//стрУзлыСКС.УзелСКС = УзелСКС;
				//стрУзлыСКС.Менеджер = ОбъектОбработки.Ответственный;
				
				МассивТочкиВыдачи = Новый Массив;
				МассивТочкиВыдачи.Добавить(ТочкаВыдачи);
				СоответствиеУзловСКСТочкамВыдачи	= грСКССервер.СоответствиеУзловСКСТочкамВыдачи(МассивТочкиВыдачи);
				ОбъектОбработки.СКС = СоответствиеУзловСКСТочкамВыдачи.Получить(ТочкаВыдачи);				
				грСКССервер.ЗаполнитьУзлыСКС(ОбъектОбработки, Новый Структура("ИмяПартнер, ИмяТЧ", "СКС", "УзлыСКС"));
				// ГРАДУМ -- Приходько, 25.06.2021, ERP-473
				
				// ++ Градум Вахрушев А.В. 28.04.2021 Задача № ERP-363
				ВидЦеныМРЦ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("МРЦ");
				// -- Градум Вахрушев А.В. 28.04.2021 Задача № ERP-363 				
				
				КэшированныеЗначения = Новый Структура;
				
				СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ОбъектОбработки);
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
				//+++Начало Гарчуков (10 августа 2021) https://ludingkis.atlassian.net/browse/ERP-545
				СтруктураДействий.Вставить("ЗаполнитьНормуВложенностиПоНоменклатуре"	, Новый Структура("SKU", "ВложенностьВКороб"));
				//---Конец Гарчуков (10 августа 2021)
				
				ОбъектОбработки.Товары.Очистить();
				Для индекс = 0 по Товары.Количество()-1 цикл
					xdtoСтрока = Товары.ПолучитьЗначение(индекс);
					
					Если _.ЗначениеРеквизита(xdtoСтрока, "QUANTITY", "Число",, 0)=0 тогда 
						Продолжить;
					КонецЕсли;	
					
					НоваяСтрока = ОбъектОбработки.Товары.Добавить();
					
					PRODUCT_CODE = _.ЗначениеРеквизита(xdtoСтрока, "PRODUCT_CODE", "Строка", Ложь, "");
					
					Если ЗначениеЗаполнено(PRODUCT_CODE) тогда
						ЗапросСКЮпоКодуУникум.УстановитьПараметр("грКодУникум", PRODUCT_CODE);
						Выборка = ЗапросСКЮпоКодуУникум.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НоваяСтрока.SKU = Выборка.Ссылка;
						КонецЕсли;
					КонецЕсли;
					
					
					Если ЗначениеЗаполнено(НоваяСтрока.SKU) тогда
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	грСоответствиеАГТ_SKUСрезПоследних.АГТ КАК АГТ
						|ИЗ
						|	РегистрСведений.грСоответствиеАГТ_SKU.СрезПоследних(&Период, SKU = &SKU) КАК грСоответствиеАГТ_SKUСрезПоследних";
						Запрос.УстановитьПараметр("SKU", НоваяСтрока.SKU);
						Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НоваяСтрока.АГТ = Выборка.АГТ;
							//+++Начало Гарчуков (02 августа 2021) https://ludingkis.atlassian.net/browse/ERP-585
							НоваяСтрока.АссортиментнаяДистрибьюция = ПланыВидовХарактеристик.грСвойстваАГТSKU.ПолучитьСвойствоАссортиментнаяДистрибуция(НоваяСтрока.АГТ);
							//---Градум Гарчуков (02 августа 2021)
						КонецЕсли;
					КонецЕсли;	
					
					Если Не ЗначениеЗаполнено(НоваяСтрока.SKU) И ЗначениеЗаполнено(PRODUCT_CODE) тогда
						НоваяСтрока.SKU = Справочники.Номенклатура.ПолучитьСсылку();
					КонецЕсли;	
					
					Если ЗначениеЗаполнено(ВидЦеныМРЦ) И ЗначениеЗаполнено(НоваяСтрока.SKU) тогда
						ОтборЦен = Новый Структура;
						ОтборЦен.Вставить("Номенклатура", НоваяСтрока.SKU);
						ОтборЦен.Вставить("ВидЦены",      ВидЦеныМРЦ);
						НоваяСтрока.ЦенаМРЦ = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ОбъектОбработки.Дата, ОтборЦен).Цена;	
					КонецЕсли;	
					
					НоваяСтрока.Упаковка              = НоваяСтрока.SKU.ЕдиницаИзмерения;
					НоваяСтрока.РКУ					  = РКУ; 					
					НоваяСтрока.ПотребностьКлиента    = ПотребностьКлиента;
					НоваяСтрока.Цена                  = _.ЗначениеРеквизита(xdtoСтрока, "PRICE", "Число",, 0);
					НоваяСтрока.Количество            = _.ЗначениеРеквизита(xdtoСтрока, "QUANTITY", "Число",, 0);
					НоваяСтрока.СтавкаНДС             = СтавкиНДС[_.ЗначениеРеквизита(xdtoСтрока, "TAX_RATE", "Число",, Неопределено)];
					НоваяСтрока.СуммаУПР              = НоваяСтрока.Сумма;
					//+++Начало Гарчуков (21 июля 2021) https://ludingkis.atlassian.net/browse/ERP-550
					//НоваяСтрока.ПроцентСкидкиАКУ      = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда
						НоваяСтрока.ПроцентСкидкиАКУ      = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);
					КонецЕсли;
					//---Конец Гарчуков (21 июля 2021)
					НоваяСтрока.КачествоТовара        = Справочники.грКачествоТоваров.Кондиция;
					НоваяСтрока.ДатаПоставкиВТВ       = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoСтрока, "UF_CRM_1568093854", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
					НоваяСтрока.ДатаСамовывоза        = ОбъектОбработки.ДатаСамовывоза;
					НоваяСтрока.СуммаМРЦ              = НоваяСтрока.Количество * НоваяСтрока.ЦенаМРЦ;  					
					СкидкаНаценка = Неопределено;
					
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					// ++ Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480					
					ЭтоПодарок = _.ЗначениеРеквизита(xdtoСтрока, "IS_GIFT", "Булево",, Ложь);
					// -- Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480					
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда 
						Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.СкидкиНаценки ГДЕ ЭтоГруппа = ЛОЖЬ И грВнешнийКод = &грВнешнийКод И &грВнешнийКод <> """"");
						Запрос.УстановитьПараметр("грВнешнийКод", _.ЗначениеРеквизита(xdtoСтрока, "STOCK_CODE", "Строка", Истина, ""));
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() тогда
							СкидкаНаценка = Выборка.Ссылка;
							
							// ++ Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480
							//// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
							//Если (НЕ СкидкаНаценка.грПредоставляетсяНаЛюбуюНоменклатуру) Тогда
							//	// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
							//	
							//	Запрос = Новый Запрос(
							//	"ВЫБРАТЬ
							//	|	ДействиеСкидокНаценокСрезПоследних.Источник КАК СкидкаНаценка
							//	|ИЗ
							//	|	РегистрСведений.ДействиеСкидокНаценокПоНоменклатуре.СрезПоследних(
							//	|			,
							//	|			Источник = &СкидкаНаценка
							//	|				И (Номенклатура = &SKU
							//	|					ИЛИ Номенклатура = &АГТ
							//	|					ИЛИ грСвойствоАГТ В
							//	|						(ВЫБРАТЬ
							//	|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних.Свойство
							//	|						ИЗ
							//	|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних(&Период, Объект = &АГТ)))) КАК ДействиеСкидокНаценокСрезПоследних
							//	|ГДЕ
							//	|	ДействиеСкидокНаценокСрезПоследних.Статус = &СтатусДействует"
							//	);
							//	Запрос.УстановитьПараметр("SKU", НоваяСтрока.SKU);
							//	Запрос.УстановитьПараметр("АГТ", НоваяСтрока.АГТ);
							//	Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
							//	Запрос.УстановитьПараметр("СкидкаНаценка", СкидкаНаценка);
							//	Запрос.УстановитьПараметр("СтатусДействует", Перечисления.СтатусыДействияСкидок.Действует);
							//	
							//	Если НЕ Запрос.Выполнить().Пустой() Тогда 
							//		НоваяСтрока.АКУ = СкидкаНаценка;
							//	КонецЕсли;
							//	
							//	// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360	
							//Иначе
							//	НоваяСтрока.АКУ = СкидкаНаценка;
							//КонецЕсли; 
							//// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
							
							НоваяСтрока.АКУ = СкидкаНаценка;
							// -- Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480 							
							
						КонецЕсли;
						
						// ++ Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480
						//Если							
						//	// ++ Градум Вахрушев А.В. 01.07.2021 Задача № ERP-480
						//	НЕ ЭтоПодарок
						//	// ++ Градум Вахрушев А.В. 01.07.2021 Задача № ERP-480							
						//	И ЗначениеЗаполнено(_.ЗначениеРеквизита(xdtoСтрока, "STOCK_CODE", "Строка", Истина, "")) 
						//	И Не ЗначениеЗаполнено(НоваяСтрока.АКУ) тогда                                                        							
						//	НоваяСтрока.АКУ = Справочники.СкидкиНаценки.ПолучитьСсылку();
						//	// ++ Градум Вахрушев А.В. 29.06.2021 Задача № ERP-480
						//ИначеЕсли (ЭтоПодарок И НЕ ЗначениеЗаполнено(НовСтр.АКУ)) Тогда				
						//	НоваяСтрока.АКУ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("ПодарочнаяАкцияПоУмолчанию");						
						//	// -- Градум Вахрушев А.В. 29.06.2021 Задача № ERP-480
						//КонецЕсли;
						
						Если (НЕ ЗначениеЗаполнено(НоваяСтрока.АКУ)) Тогда
							Если (ЭтоПодарок) Тогда
								НоваяСтрока.АКУ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("ПодарочнаяАкцияПоУмолчанию");
							Иначе
								НоваяСтрока.АКУ = Справочники.СкидкиНаценки.ПолучитьСсылку();
							КонецЕсли;							
						КонецЕсли;
						// -- Градум Вахрушев А.В. 02.07.2021 Задача № ERP-480
						
						НоваяСтрока.ЦенаАКУ = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0);
						
					КонецЕсли;					
					
					
					Если ЗначениеЗаполнено(СкидкаНаценка) 
						И ЗначениеЗаполнено(Купон) 
						И ТипСкидки = "5" 
						// ++ Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
						И тзСкидкиИКупоны <> Неопределено
						// -- Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
						Тогда 					
						
						НайденаяСкидка = тзСкидкиИКупоны.Найти(СкидкаНаценка, "СкидкаНаценка");
						Если (НайденаяСкидка <> Неопределено) Тогда
							НоваяСтрока.Купон = Купон; 
						Иначе
							НоваяСтрока.Купон = Справочники.грСкидочныеКупоны.ПолучитьСсылку();
						КонецЕсли;     						
					КонецЕсли; 
					
					Если ТипСкидки = "4" Тогда						
						НоваяСтрока.ПроцентСкидкиРучная = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);
						НоваяСтрока.ЦенаРучнаяСкидка = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0);
						НоваяСтрока.СуммаСкидкиРучная = Окр(НоваяСтрока.Количество * НоваяСтрока.ЦенаРучнаяСкидка , 2);
					КонецЕсли;
					
					// ++ Градум Вахрушев А.В. 12.07.2021 Задача № ERP-493
					Если ЗначениеЗаполнено(ВидЦенДокумента) И НЕ ВидЦенДокумента.ЦенаВключаетНДС Тогда	
						НоваяСтрока.КанальнаяЦена = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_NETTO", "Число",, 0)
					Иначе						
						НоваяСтрока.КанальнаяЦена = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_BRUTTO", "Число",, 0);
					КонецЕсли;
					НоваяСтрока.ВидКанальнойЦены		= ВидЦенДокумента;
					НоваяСтрока.ЦенаРКУ					= НоваяСтрока.КанальнаяЦена;
					
					
					//Если ТипСкидки = "3" ИЛИ ТипСкидки = "0" Тогда
					//	НоваяСтрока.ЦенаРКУ = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_NETTO", "Число",, 0);
					//КонецЕсли;
					// -- Градум Вахрушев А.В. 12.07.2021 Задача № ERP-493
					
					// <-- Датареон, Новиков, 27.08.2020
					
					// КОНЕЦ Акция
					
					
					// Датареон, Новиков, 27.08.2020 -->
					//+++Начало Гарчуков (21 июля 2021) https://ludingkis.atlassian.net/browse/ERP-550
					//НоваяСтрока.СуммаСкидкиАКУ        = НоваяСтрока.ЦенаРКУ * НоваяСтрока.Количество - НоваяСтрока.ЦенаАКУ * НоваяСтрока.Количество;			
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда
						НоваяСтрока.СуммаСкидкиАКУ = НоваяСтрока.ЦенаАКУ * НоваяСтрока.Количество;			
					КонецЕсли;
					//---Конец Гарчуков (21 июля 2021)
					НоваяСтрока.СуммаРКУ              = НоваяСтрока.Количество * НоваяСтрока.ЦенаРКУ;
					// <-- Датареон, Новиков, 27.08.2020
					
					ОбъектОбработки.ЦенаВключаетНДС = ЦенаВключаетНДС[_.ЗначениеРеквизита(xdtoСтрока, "TAX_INCLUDED", "Строка", Ложь, "")];
					
					//+++Начало Гарчуков (10 августа 2021) https://ludingkis.atlassian.net/browse/ERP-568
					//НовСтр.ОтгрузкаВРозницу      = НовСтр.УНК;
					Если ЗначениеЗаполнено(БизнесПартнер) И БизнесПартнер.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда
						НоваяСтрока.ОтгрузкаВРозницу = Истина;						
					Иначе
						НоваяСтрока.ОтгрузкаВРозницу = УНК.Получить(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1511359326", "Строка",, ""));
					КонецЕсли;
					//---Конец Гарчуков (10 августа 2021)
					
					СтруктураПересчетаСуммы.ЦенаВключаетНДС = ОбъектОбработки.ЦенаВключаетНДС;
					ОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
				КонецЦикла;
				
				
				Если (ПерезаписыватьДокументы                   // ++ Градум Вахрушев А.В. 29.03.2021 Задача № ERP-281
					// ++Градум Вахрушев А.В. 22.06.2021
					ИЛИ ПараметрыОбработки.МассоваяЗагрузка) Тогда	
					// ++Градум Вахрушев А.В. 22.06.2021)
					ОбъектОбработки.ОбменДанными.Загрузка = Истина;
					ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
					ОбъектОбработки.Записать();
				КонецЕсли;								// -- Градум Вахрушев А.В. 29.03.2021 Задача № ERP-281
				
				~ЗаписьКлючаЗаказНаТочкуВыдачи:
				ЗаказНаТочкуВыдачи = ОбъектОбработки.Ссылка;
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+ОбъектОбработки.Ссылка, ОбъектОбработки.Ссылка);
				
				Если ЗначениеЗаполнено(ОбъектОбработки.Ссылка) Тогда
					грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
					ОбъектОбработки.Ссылка, 
					Ключ, 
					ПараметрыОбработки.Отправитель,  
					новый Структура(
					"ВидИдентификатораСтрока, ДатаОбновления",
					ВидИдентификатора,
					ПараметрыОбработки.ВремяПакета
					)
					);
				КонецЕсли;
				
				~КонецЗаказНаТочкуВыдачи:
				
				#КонецОбласти //ЗаказНаТочкуВыдачи
				
				#Область грИсторическаяРеализация
				
				STAGE_ID = _.ЗначениеРеквизита(xdtoОбъект, "STAGE_ID", "Строка", Ложь, "");
				
				Если Найти(STAGE_ID,"EXECUTING") > 0 тогда
					ДатаДокРеализации = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "CLOSEDATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
					// ++ Градум Вахрушев А.В. 18.03.2021 Задача № ERP-237
					Если (Год(ДатаДокРеализации) < 1000) Тогда						
						ТекДата = ДатаДокРеализации;
						тГод	= Год(ТекДата);
						тМесяц	= Месяц(ТекДата);
						тДень	= День(ТекДата);
						тЧас	= Час(ТекДата);
						тМин	= Минута(ТекДата);
						тСек	= Секунда(ТекДата);						
						ДатаДокРеализации = Дата(тГод + 2000, тМесяц, тДень, тчас, тМин, тСек);						
					КонецЕсли;					
					// -- Градум Вахрушев А.В. 18.03.2021 Задача № ERP-237
				КонецЕсли;
				
				Если КатегорииДляСозданияИсторическаяРеализация.Найти(xdtoОбъект.CATEGORY_ID) = Неопределено
					ИЛИ ДатаДокРеализации >= Дата(2019,1,1)                       // Тимофеев 12.11 было ДатаЗакрытия
					ИЛИ (Найти(STAGE_ID,"WON") = 0  и Найти(STAGE_ID,"EXECUTING") = 0)Тогда 
					Перейти ~КонецИсторическаяРеализация;						
				КонецЕсли;
				
				// ++ Градум Вахрушев А.В. 22.04.2021 Задача Хасанов
				Если (БизнесПартнер = Справочники.грБизнесПартнеры.НетКонтактовВСделке) Тогда
					Перейти ~КонецИсторическаяРеализация;
				КонецЕсли;
				// -- Градум Вахрушев А.В. 22.04.2021 Задача Хасанов
				
				сткРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
				Ключ, 
				"Документ.грИсторическаяРеализация", 
				ВидИдентификатора, 
				ПараметрыОбработки
				);
				
				ИсторическаяРеализация = сткРезультатПоиска.Ссылка;	
				Если ЗначениеЗаполнено(ИсторическаяРеализация) тогда
					ОбъектОбработки = ИсторическаяРеализация.ПолучитьОбъект();
				Иначе 	
					ОбъектОбработки = Документы.грИсторическаяРеализация.СоздатьДокумент();
				КонецЕсли;				
				// ++ Градум Вахрушев А.В. 31.03.2021 Задача № ERP-290
				Если (ДатаДокРеализации = Дата(1,1,1)) Тогда
					ДатаДокРеализации = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "CLOSEDATE", "Строка", Ложь, ""), "ДД.ММ.ГГГГ чч:мм:сс");
					Если (Год(ДатаДокРеализации) < 1000) Тогда                                 						
						ТекДата = ДатаДокРеализации;
						тГод	= Год(ТекДата);
						тМесяц	= Месяц(ТекДата);
						тДень	= День(ТекДата);
						тЧас	= Час(ТекДата);
						тМин	= Минута(ТекДата);
						тСек	= Секунда(ТекДата);                                            						
						ДатаДокРеализации = Дата(тГод + 2000, тМесяц, тДень, тчас, тМин, тСек);						
					КонецЕсли;
				КонецЕсли;
				// -- Градум Вахрушев А.В. 31.03.2021 Задача № ERP-290
				
				ОбъектОбработки.Дата                              = ДатаДокРеализации;
				Если ОбъектОбработки.ЭтоНовый() Тогда 
					ОбъектОбработки.УстановитьНовыйНомер();
				КонецЕсли;
				
				ОбъектОбработки.БизнесПартнер = БизнесПартнер;
				ОбъектОбработки.Контрагент = Контрагент;
				ОбъектОбработки.Соглашение                      = Соглашение;
				ОбъектОбработки.Заказ = ЗаказКлиента;
				ОбъектОбработки.Интерес = Интерес;
				
				КэшированныеЗначения = Новый Структура;
				
				Попытка
					Товары = xdtoОбъект.PRODUCT_ROWS.Последовательность();
				Исключение
					Товары = Новый Массив;		
				КонецПопытки;
				Для индекс = 0 по Товары.Количество()-1 цикл
					xdtoСтрока = Товары.ПолучитьЗначение(индекс);				
					
					PRODUCT_CODE = _.ЗначениеРеквизита(xdtoСтрока, "PRODUCT_CODE", "Строка", Ложь, "");
					TAX_RATE = _.ЗначениеРеквизита(xdtoСтрока, "TAX_RATE", "Число",, 0);
					PRICE_NETTO = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_NETTO", "Число",, 0);
					PRICE_BRUTTO = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_BRUTTO", "Число",, 0);
					PRICE_EXCLUSIVE = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0);				
					
					// ++ Вахрушев А.В. 24.12.2020 Задача № 19069
					_Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
					// -- Вахрушев А.В. 24.12.2020 Задача № 19069
					
					//Градум.Начало; Гарчуков (11 ноября 2020) 18089 
					PRODUCT_CODE = _.ЗначениеРеквизита(xdtoСтрока, "PRODUCT_CODE", "Строка", Ложь, "");			
					Если ЗначениеЗаполнено(PRODUCT_CODE) тогда						
						ЗапросСКЮпоКодуУникум.УстановитьПараметр("грКодУникум", PRODUCT_CODE);
						Выборка = ЗапросСКЮпоКодуУникум.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда
							// ++ Вахрушев А.В. 24.12.2020 Задача № 19069
							_Номенклатура = Выборка.Ссылка;
							// -- Вахрушев А.В. 24.12.2020 Задача № 19069
						КонецЕсли;
					КонецЕсли;
					//Градум.Конец; Гарчуков (11 ноября 2020)
					
					// ++ Градум Вахрушев А.В. 09.06.2021 Задача № ERP-451
					Если (_Номенклатура.Пустая()) Тогда
						Продолжить;
					КонецЕсли; 					
					// -- Градум Вахрушев А.В. 09.06.2021 Задача № ERP-451
					
					// ++ Вахрушев А.В. 24.12.2020 Задача № 19069
					НоваяСтрока = Неопределено;
					НашлиНоменклатуру = ОбъектОбработки.Товары.НайтиСтроки(Новый Структура("Номенклатура", _Номенклатура));
					Если (НашлиНоменклатуру.Количество() = 0) Тогда
						НоваяСтрока = ОбъектОбработки.Товары.Добавить();
						НоваяСтрока.Номенклатура = _Номенклатура;	
					Иначе
						НомерСтрокиВТЗ = индекс + 1;
						Для Каждого СтрокаНоменклатура Из НашлиНоменклатуру Цикл
							Если(СтрокаНоменклатура.НомерСтроки = НомерСтрокиВТЗ) Тогда
								НоваяСтрока = СтрокаНоменклатура; 
								Прервать;
							КонецЕсли;							
						КонецЦикла;
						Если (НоваяСтрока = Неопределено) Тогда
							НоваяСтрока = НашлиНоменклатуру[0];
						КонецЕсли;						
					КонецЕсли; 					
					// -- Вахрушев А.В. 24.12.2020 Задача № 19069
					
					НоваяСтрока.Количество             = _.ЗначениеРеквизита(xdtoСтрока, "QUANTITY", "Число",, 0);
					
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					СкидкаНаценка = Неопределено;	
					
					// ++ Вахрушев А.В. 21.01.2021 Задача № 19069
					АГТ = Справочники.Номенклатура.ПустаяСсылка();
					Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура) тогда
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	грСоответствиеАГТ_SKUСрезПоследних.АГТ КАК АГТ
						|ИЗ
						|	РегистрСведений.грСоответствиеАГТ_SKU.СрезПоследних(&Период, SKU = &SKU) КАК грСоответствиеАГТ_SKUСрезПоследних";
						Запрос.УстановитьПараметр("SKU", НоваяСтрока.Номенклатура);
						Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							АГТ = Выборка.АГТ;
							// ++ Вахрушев А.В. 23.12.2020 Задача № 19069
							НоваяСтрока.АГТ = АГТ;
							// -- Вахрушев А.В. 23.12.2020 Задача № 19069
						КонецЕсли;
					КонецЕсли;
					// -- Вахрушев А.В. 21.01.2021 Задача № 19069
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда 
						Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.СкидкиНаценки ГДЕ ЭтоГруппа = ЛОЖЬ И грВнешнийКод = &грВнешнийКод И &грВнешнийКод <> """"");
						Запрос.УстановитьПараметр("грВнешнийКод", _.ЗначениеРеквизита(xdtoСтрока, "STOCK_CODE", "Строка", Истина, ""));
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() тогда
							СкидкаНаценка = Выборка.Ссылка;
							// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
							Если (НЕ СкидкаНаценка.грПредоставляетсяНаЛюбуюНоменклатуру) Тогда
								// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
								
								Запрос = Новый Запрос(
								"ВЫБРАТЬ
								|	ДействиеСкидокНаценокСрезПоследних.Источник КАК СкидкаНаценка
								|ИЗ
								|	РегистрСведений.ДействиеСкидокНаценокПоНоменклатуре.СрезПоследних(
								|			,
								|			Источник = &СкидкаНаценка
								|				И (Номенклатура = &SKU
								|					ИЛИ Номенклатура = &АГТ
								|					ИЛИ грСвойствоАГТ В
								|						(ВЫБРАТЬ
								|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних.Свойство
								|						ИЗ
								|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних(&Период, Объект = &АГТ)))) КАК ДействиеСкидокНаценокСрезПоследних
								|ГДЕ
								|	ДействиеСкидокНаценокСрезПоследних.Статус = &СтатусДействует"
								);
								Запрос.УстановитьПараметр("SKU", НоваяСтрока.Номенклатура);
								Запрос.УстановитьПараметр("АГТ", АГТ);
								Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
								Запрос.УстановитьПараметр("СкидкаНаценка", СкидкаНаценка);
								Запрос.УстановитьПараметр("СтатусДействует", Перечисления.СтатусыДействияСкидок.Действует);
								
								Если НЕ Запрос.Выполнить().Пустой() Тогда 
									НоваяСтрока.МаркетинговаяАкция = СкидкаНаценка;
								КонецЕсли;
								
								// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360	
							Иначе
								НоваяСтрока.МаркетинговаяАкция = СкидкаНаценка;
							КонецЕсли; 
							// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
						КонецЕсли;
						
						НоваяСтрока.СуммаАкция = Окр((PRICE_NETTO -  PRICE_EXCLUSIVE ) * (1+TAX_RATE/100) * НоваяСтрока.Количество,2);
						
					КонецЕсли;
					
					// ++ Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
					Купон = _.ЗначениеРеквизита(xdtoСтрока, "UF_CRM_1526287400", "Строка", Ложь, "");
					// -- Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360                           					
					Если ЗначениеЗаполнено(СкидкаНаценка) 
						И ЗначениеЗаполнено(Купон) 
						И ТипСкидки = "5"
						// ++ Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
						И тзСкидкиИКупоны <> Неопределено
						// -- Градум Вахрушев А.В. 23.04.2021 Задача № ERP-360
						Тогда											
						
						НайденаяСкидка = тзСкидкиИКупоны.Найти(СкидкаНаценка, "СкидкаНаценка");
						Если (НайденаяСкидка <> Неопределено) Тогда
							НоваяСтрока.Купон = Купон; 
						Иначе
							НоваяСтрока.Купон = Справочники.грСкидочныеКупоны.ПустаяСсылка();
						КонецЕсли; 
					КонецЕсли;
					
					НоваяСтрока.Сумма = _.ЗначениеРеквизита(xdtoСтрока, "SUM_ACCOUNT", "Число",, 0);
					Если НоваяСтрока.Сумма=0 тогда   //++ Тимофеев 22.12.20 18721
						НоваяСтрока.Сумма=НоваяСтрока.Количество*_.ЗначениеРеквизита(xdtoСтрока, "PRICE", "Число",, 0);
					КонецЕсли;   //-- Тимофеев 22.12.20 18721
					
					НоваяСтрока.СуммаСНДС = НоваяСтрока.Сумма;
					НоваяСтрока.СуммаНДС = Окр(НоваяСтрока.СуммаСНДС * TAX_RATE / (100+TAX_RATE), 2);
					НоваяСтрока.СуммаПоКанальнойЦене = НоваяСтрока.Количество * PRICE_BRUTTO;
					НоваяСтрока.СуммаРКУ = НоваяСтрока.СуммаПоКанальнойЦене;
					
					Если ТипСкидки = "4" Тогда 
						ЦенаРучнаяСкидка= _.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0);					
						// ++ Вахрушев А.В. 18.01.2021 Задача № 19435
						НоваяСтрока.СуммаРучСкидка = Окр(НоваяСтрока.Количество * ЦенаРучнаяСкидка , 2);						
					КонецЕсли;
				КонецЦикла;			
				
				ОбъектОбработки.ДополнительныеСвойства.Вставить("_ЗаказНаТочкуВыдачи", ЗаказНаТочкуВыдачи); 
				РегистрыСведений.грКлючиАналитикиСвойствНоменклатуры.ОтразитьКлючиАналитикиСвойствНоменклатуры(ОбъектОбработки, Ложь, ОбъектОбработки.Дата);
				РегистрыСведений.грКлючиАналитикиУзловСКС.ОтразитьКлючиАналитикиУзловСКС(ОбъектОбработки, Ложь, ОбъектОбработки.Дата);
				
				ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
				ОбъектОбработки.Записать(РежимЗаписиДокумента.Проведение);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+ОбъектОбработки.Ссылка, ОбъектОбработки.Ссылка);
				
				грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
				ОбъектОбработки.Ссылка, 
				Ключ, 
				ПараметрыОбработки.Отправитель,  
				новый Структура(
				"ВидИдентификатораСтрока, ДатаОбновления",
				ВидИдентификатора,
				ПараметрыОбработки.ВремяПакета
				)
				);
				
				~КонецИсторическаяРеализация:
				
				#КонецОбласти //ЗаказНаТочкуВыдачи
				
				#Область РеализацияТоваровУслуг
				
				Если _.ЗначениеРеквизита(xdtoОбъект, "STAGE_ID", "Строка", Ложь, "") <> "WON" 
					или _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1555077590", "Булево")=истина  
					или ДатаДокумента<Дата(2019,1,1)         тогда   //Тимофеев 18489;
					
					Перейти ~КонецРеализацияТоваровУслуг;	
				КонецЕсли;	
				
				сткРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
				Ключ, 
				"Документ.РеализацияТоваровУслуг", 
				ВидИдентификатора, 
				ПараметрыОбработки);
				
				Реализация = сткРезультатПоиска.Ссылка;	
				
				// Если нашли РТУ из Уникум по ID заказа клиента и заказ от физического лица, то обновляем только Контрагент и БизнесПартнер.
				Если Не ЗначениеЗаполнено(Реализация)
					Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = 
					//Градум.Начало; Гарчуков (09 ноября 2020) 18001
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
					|ИЗ
					|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.грТаблицаПереходныхКлючейERP КАК грТаблицаПереходныхКлючейERP
					|		ПО РеализацияТоваровУслуг.Ссылка = грТаблицаПереходныхКлючейERP.ОбъектERP
					|			И (грТаблицаПереходныхКлючейERP.ВидИдентификатораСтрока = ""УНИКУМGUID"")
					|ГДЕ
					|	ВЫРАЗИТЬ(РеализацияТоваровУслуг.ЗаказКлиента КАК Документ.ЗаказКлиента).грIDCRM = &IDCRM
					|	И РеализацияТоваровУслуг.УНК = ЛОЖЬ";
					//Градум.Конец; Гарчуков (09 ноября 2020)
					Запрос.УстановитьПараметр("IDCRM", IDCRM);
					
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() тогда
						Реализация = Выборка.Ссылка;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(Реализация) тогда
						ОбъектОбработки = Реализация.ПолучитьОбъект();
						
						Если ЗначениеЗаполнено(Контрагент) И Контрагент.ПолучитьОбъект() <> Неопределено тогда
							ОбъектОбработки.Контрагент = Контрагент;
							//Градум.Начало; Гарчуков (09 ноября 2020) 18001
							ОбъектОбработки.грОПКонтрагента = Контрагент;
							//Градум.Конец; Гарчуков (09 ноября 2020)
						КонецЕсли;
						Если ЗначениеЗаполнено(БизнесПартнер) И БизнесПартнер.ПолучитьОбъект() <> Неопределено тогда 
							ОбъектОбработки.грАдресОтгрузки = ЗаказКлиента;
						КонецЕсли;	
						
						//Градум.Начало; Гарчуков (09 ноября 2020) 18001 
						Если ЗначениеЗаполнено(АдресОтгрузкиФЛ) Тогда
							ОбъектОбработки.грАдресОтгрузки = АдресОтгрузкиФЛ;
						КонецЕсли;
						Если ЗначениеЗаполнено(КонтактноеЛицо) И КонтактноеЛицо.ПолучитьОбъект() <> Неопределено Тогда
							ОбъектОбработки.КонтактноеЛицо = КонтактноеЛицо;
						КонецЕсли;
						Если ЗначениеЗаполнено(ОтветственныйПользователь) Тогда
							ОбъектОбработки.Менеджер = ОтветственныйПользователь;
						КонецЕсли;
						//Градум.Конец; Гарчуков (09 ноября 2020)
						
						Если ОбъектОбработки.Модифицированность() тогда
							ОбъектОбработки.ОбменДанными.Загрузка = Истина;
							ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
							ОбъектОбработки.Записать();
						КонецЕсли;
						
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+Реализация, сткРезультатПоиска.Ссылка);
						Перейти ~КонецРеализацияТоваровУслуг;
					КонецЕсли;	
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Реализация) тогда
					ОбъектОбработки = Реализация.ПолучитьОбъект();
				Иначе 	
					ОбъектОбработки = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
				КонецЕсли;	
				
				ОбъектОбработки.ПометкаУдаления                    = Ложь;
				ОбъектОбработки.Номер                              = НомерДокумента;
				ОбъектОбработки.Дата                               = ДатаДокумента;
				ОбъектОбработки.ХозяйственнаяОперация              = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
				ОбъектОбработки.Организация                        = Организация;
				ОбъектОбработки.Автор                              = ОтветственныйПользователь;
				ОбъектОбработки.АдресДоставки                      = АдресДоставкиСтрокой;
				ОбъектОбработки.Валюта                             = Валюта;
				ОбъектОбработки.ВариантОформленияПродажи           = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
				ОбъектОбработки.ВремяДоставкиС                     = ВремяДоставкиС;
				ОбъектОбработки.ВремяДоставкиПо                    = ВремяДоставкиПо;
				ОбъектОбработки.грАдресОтгрузки                    = АдресОтгрузкиФЛ;
				ОбъектОбработки.грДатаПереходаПрава                = ДатаЗакрытия;
				ОбъектОбработки.грДатаРеализации                   = ДатаЗакрытия;
				ОбъектОбработки.грОПКонтрагента                    = Контрагент;
				ОбъектОбработки.ДатаОтгрузки                       = ДатаЗакрытия;
				ОбъектОбработки.ДатаПереходаПраваСобственности     = ДатаЗакрытия;
				ОбъектОбработки.Контрагент                         = Контрагент;
				ОбъектОбработки.Договор                            = ДоговорКонтрагента;
				ОбъектОбработки.ДополнительнаяИнформацияПоДоставке = Комментарий;
				ОбъектОбработки.ЗаказКлиента                       = ЗаказКлиента;
				ОбъектОбработки.КонтактноеЛицо                     = КонтактноеЛицо;
				ОбъектОбработки.Курс                               = _.ЗначениеРеквизита(xdtoОбъект, "EXCH_RATE", "Число", Ложь, 1);
				ОбъектОбработки.Менеджер                           = ОтветственныйПользователь;
				ОбъектОбработки.Подразделение                      = Подразделение;
				ОбъектОбработки.НалогообложениеНДС                 = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
				ОбъектОбработки.Склад                              = СкладРеализации;
				ОбъектОбработки.Статус                             = Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено;
				ОбъектОбработки.СуммаДокумента                     = _.ЗначениеРеквизита(xdtoОбъект, "OPPORTUNITY", "Число", Ложь, 0);
				ОбъектОбработки.УНК                                = УНК;
				ОбъектОбработки.ЦенаВключаетНДС                    = Истина;
				ОбъектОбработки.Партнер                            = УзелСКС;
				
				КэшированныеЗначения = Новый Структура;
				
				СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ОбъектОбработки);
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
				
				Попытка
					Товары = xdtoОбъект.INITIAL_SITE_PRODUCTS.Последовательность();
				Исключение
					Товары = Новый Массив;
				КонецПопытки;	
				Если Товары.Количество() = 0 тогда
					Попытка
						Товары = xdtoОбъект.PRODUCT_ROWS.Последовательность();
					Исключение
						Товары = Новый Массив;		
					КонецПопытки;	
				КонецЕсли;
				ОбъектОбработки.Товары.Очистить();
				Для индекс = 0 по Товары.Количество()-1 цикл
					xdtoСтрока = Товары.ПолучитьЗначение(индекс);
					
					НоваяСтрока = ОбъектОбработки.Товары.Добавить();
					
					//Градум.Начало; Гарчуков (11 ноября 2020) 18089 
					PRODUCT_CODE = _.ЗначениеРеквизита(xdtoСтрока, "PRODUCT_CODE", "Строка", Ложь, "");			
					Если ЗначениеЗаполнено(PRODUCT_CODE) тогда						
						ЗапросСКЮпоКодуУникум.УстановитьПараметр("грКодУникум", PRODUCT_CODE);
						Выборка = ЗапросСКЮпоКодуУникум.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НоваяСтрока.Номенклатура = Выборка.Ссылка;						
						КонецЕсли;
					КонецЕсли;
					//Градум.Конец; Гарчуков (11 ноября 2020)
					
					Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура) тогда
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	грСоответствиеАГТ_SKUСрезПоследних.АГТ КАК АГТ
						|ИЗ
						|	РегистрСведений.грСоответствиеАГТ_SKU.СрезПоследних(&Период, SKU = &SKU) КАК грСоответствиеАГТ_SKUСрезПоследних";
						Запрос.УстановитьПараметр("SKU", НоваяСтрока.Номенклатура);
						Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НоваяСтрока.грАГТ = Выборка.АГТ;
						КонецЕсли;
					КонецЕсли;	
					
					НоваяСтрока.КоличествоУпаковок     = _.ЗначениеРеквизита(xdtoСтрока, "QUANTITY", "Число",, 0);
					НоваяСтрока.Количество             = НоваяСтрока.КоличествоУпаковок;
					НоваяСтрока.СтавкаНДС              = СтавкиНДС[_.ЗначениеРеквизита(xdtoСтрока, "TAX_RATE", "Число",, Неопределено)];			
					НоваяСтрока.Цена                   = _.ЗначениеРеквизита(xdtoСтрока, "PRICE", "Число",, 0);
					
					СкидкаНаценка = Неопределено;
					
					ТипСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_BASE");
					Если ТипСкидки = "1" ИЛИ ТипСкидки = "2" ИЛИ ТипСкидки = "5" Тогда 
						Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник.СкидкиНаценки ГДЕ ЭтоГруппа = ЛОЖЬ И грВнешнийКод = &грВнешнийКод И &грВнешнийКод <> """"");
						Запрос.УстановитьПараметр("грВнешнийКод", _.ЗначениеРеквизита(xdtoСтрока, "STOCK_CODE", "Строка", Истина, ""));
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() тогда
							СкидкаНаценка = Выборка.Ссылка;
							
							// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
							Если (НЕ СкидкаНаценка.грПредоставляетсяНаЛюбуюНоменклатуру) Тогда
								// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
								
								Запрос = Новый Запрос(
								"ВЫБРАТЬ
								|	ДействиеСкидокНаценокСрезПоследних.Источник КАК СкидкаНаценка
								|ИЗ
								|	РегистрСведений.ДействиеСкидокНаценокПоНоменклатуре.СрезПоследних(
								|			,
								|			Источник = &СкидкаНаценка
								|				И (Номенклатура = &SKU
								|					ИЛИ Номенклатура = &АГТ
								|					ИЛИ грСвойствоАГТ В
								|						(ВЫБРАТЬ
								|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних.Свойство
								|						ИЗ
								|							РегистрСведений.грСвойстваАГТSKU.СрезПоследних(&Период, Объект = &АГТ)))) КАК ДействиеСкидокНаценокСрезПоследних
								|ГДЕ
								|	ДействиеСкидокНаценокСрезПоследних.Статус = &СтатусДействует"
								);
								Запрос.УстановитьПараметр("SKU", НоваяСтрока.Номенклатура);
								Запрос.УстановитьПараметр("АГТ", НоваяСтрока.грАГТ);
								Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
								Запрос.УстановитьПараметр("СкидкаНаценка", СкидкаНаценка);
								Запрос.УстановитьПараметр("СтатусДействует", Перечисления.СтатусыДействияСкидок.Действует);
								
								Если НЕ Запрос.Выполнить().Пустой() Тогда 
									НоваяСтрока.АКУ = СкидкаНаценка;
								КонецЕсли;
								
								// ++ Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360	
							Иначе
								НоваяСтрока.АКУ = СкидкаНаценка;
							КонецЕсли; 
							// -- Градум Вахрушев А.В. 26.04.2021 Задача № ERP-360
							
						КонецЕсли;
						
						НоваяСтрока.ЦенаАКУ = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_EXCLUSIVE", "Число",, 0);					
					КонецЕсли;
					
					//+++Начало Гарчуков (21 июля 2021) https://ludingkis.atlassian.net/browse/ERP-550
					ЭтоПодарок = _.ЗначениеРеквизита(xdtoСтрока, "IS_GIFT", "Булево",, Ложь);
					Если (НЕ ЗначениеЗаполнено(НоваяСтрока.АКУ)) Тогда
						Если (ЭтоПодарок) Тогда
							НоваяСтрока.АКУ = Справочники.грНастройкиПоУмолчанию.ПолучитьЗначениеНастройки("ПодарочнаяАкцияПоУмолчанию");
						Иначе
							НоваяСтрока.АКУ = Справочники.СкидкиНаценки.ПолучитьСсылку();
						КонецЕсли;							
					КонецЕсли;
					//---Конец Гарчуков (21 июля 2021)
					
					Если ЗначениеЗаполнено(СкидкаНаценка) 
						И ЗначениеЗаполнено(Купон) 
						И ТипСкидки = "5" 
						И тзСкидкиИКупоны <> Неопределено
						Тогда					
						
						НайденаяСкидка = тзСкидкиИКупоны.Найти(СкидкаНаценка, "СкидкаНаценка");
						Если (НайденаяСкидка <> Неопределено) Тогда
							НоваяСтрока.Купон = Купон; 
						Иначе
							НоваяСтрока.Купон = Справочники.грСкидочныеКупоны.ПолучитьСсылку();
						КонецЕсли;
					КонецЕсли;
					
					Если ТипСкидки = "4" Тогда 
						НоваяСтрока.ПроцентРучнойСкидки = _.ЗначениеРеквизита(xdtoСтрока, "DISCOUNT_RATE", "Число",, 0);
						// Датареон, Груданов, 13.10.20 -->
						НоваяСтрока.СуммаРучнойСкидки = Окр(НоваяСтрока.Количество * НоваяСтрока.Цена * НоваяСтрока.ПроцентРучнойСкидки / 100, 2);						
						// <-- Датареон, Груданов, 13.10.20
						
					КонецЕсли;
					
					Если ТипСкидки = "3" ИЛИ ТипСкидки = "0" Тогда
						НоваяСтрока.ЦенаРКУ              = _.ЗначениеРеквизита(xdtoСтрока, "PRICE_ACCOUNT", "Число",, 0);
						НоваяСтрока.СуммаРКУ             = НоваяСтрока.ЦенаРКУ * НоваяСтрока.Количество;
					КонецЕсли;
					
					// КОНЕЦ Акция
					
					
					ОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
				КонецЦикла;
				
				//ОбъектОбработки.ОбменДанными.Загрузка = Истина;
				ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
				// ++ Градум Вахрушев А.В. 10.03.2021 Задача № 20137
				ОбъектОбработки.Записать(РежимЗаписиДокумента.Проведение);
				// -- Градум Вахрушев А.В. 10.03.2021 Задача № 20137
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+ОбъектОбработки.Ссылка, ОбъектОбработки.Ссылка);
				
				грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
				ОбъектОбработки.Ссылка, 
				Ключ, 
				ПараметрыОбработки.Отправитель,  
				новый Структура(
				"ВидИдентификатораСтрока, ДатаОбновления",
				ВидИдентификатора,
				ПараметрыОбработки.ВремяПакета
				)
				);
				~КонецРеализацияТоваровУслуг:
				
				#КонецОбласти
				
				#Область грЧекККМВторичнаяПродажа
				
				Если КатегорииДляСозданияЧекаВторичнойПродажи.Найти(xdtoОбъект.CATEGORY_ID) = Неопределено тогда
					Перейти ~КонецЧекККМВторичнаяПродажа;	
				КонецЕсли;	
				
				сткРезультатПоиска = грОбработкаПакетовИнтеграции.ПолучитьОбъектПоКлючуТПК(
				Ключ, 
				"Документ.грЧекККМВторичнаяПродажа", 
				ВидИдентификатора, 
				ПараметрыОбработки);
				
				Если ЗначениеЗаполнено(сткРезультатПоиска.Ссылка) тогда
					ОбъектОбработки = сткРезультатПоиска.Ссылка.ПолучитьОбъект();
				Иначе
					// ++ Градум Вахрушев А.В. 16.03.2021 Задача № 20629
					грЧекККМВторичнаяПродажаОснование.УстановитьПараметр("ЗаказНаТочкуВыдачи", ЗаказНаТочкуВыдачи);
					РезультатЧек = грЧекККМВторичнаяПродажаОснование.Выполнить();
					СоздатьЧек = ?(РезультатЧек.Пустой(), Истина, Ложь);                     				
					Если (НЕ СоздатьЧек) Тогда
						ЧекСсылка = РезультатЧек.Выбрать(); ЧекСсылка.Следующий();
						ОбъектОбработки = ЧекСсылка.Ссылка.ПолучитьОбъект();
					Иначе                                                                       
						ОбъектОбработки = Документы.грЧекККМВторичнаяПродажа.СоздатьДокумент();
					КонецЕсли;					
					// -- Градум Вахрушев А.В. 16.03.2021 Задача № 20629
					
				КонецЕсли;	
				
				ОбъектОбработки.ПометкаУдаления   = Ложь;
				ОбъектОбработки.Номер = НомерДокумента;
				ОбъектОбработки.Дата = ДатаДокумента;
				ОбъектОбработки.ДатаЧека = _.СтрокаВДату(_.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1559569336", "Строка",, ""), "ДД.ММ.ГГГГ чч:мм:сс");
				ОбъектОбработки.НомерЧека = _.ЗначениеРеквизита(xdtoОбъект, "UF_CRM_1544690963", "Строка",, "");
				ОбъектОбработки.Основание = ЗаказНаТочкуВыдачи;
				ОбъектОбработки.БизнесПартнер = БизнесПартнер;
				ОбъектОбработки.Контрагент = Контрагент;
				ОбъектОбработки.ТочкаВыдачи = ТочкаВыдачи;
				ОбъектОбработки.УзелСКС = УзелСКС;
				
				КэшированныеЗначения = Новый Структура;
				
				СтруктураПересчетаСуммы = Новый Структура;
				СтруктураПересчетаСуммы.Вставить("ЦенаВключаетНДС", Истина);
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
				
				Попытка
					Товары = xdtoОбъект.INITIAL_PRODUCTS.Последовательность();
				Исключение
					Товары = Новый Массив;
				КонецПопытки;	
				Если Товары.Количество() = 0 тогда
					Попытка
						Товары = xdtoОбъект.PRODUCT_ROWS.Последовательность();
					Исключение
						Товары = Новый Массив;
					КонецПопытки;	
				КонецЕсли;
				Если Товары.Количество() = 0 тогда 	
					Перейти ~КонецЧекККМВторичнаяПродажа;
				КонецЕсли;	
				ОбъектОбработки.Товары.Очистить();
				Для индекс = 0 по Товары.Количество()-1 цикл
					xdtoСтрока = Товары.ПолучитьЗначение(индекс);
					
					НоваяСтрока = ОбъектОбработки.Товары.Добавить();
					
					//Градум.Начало; Гарчуков (11 ноября 2020) 18089 
					PRODUCT_CODE = _.ЗначениеРеквизита(xdtoСтрока, "PRODUCT_CODE", "Строка", Ложь, "");			
					Если ЗначениеЗаполнено(PRODUCT_CODE) тогда						
						ЗапросСКЮпоКодуУникум.УстановитьПараметр("грКодУникум", PRODUCT_CODE);
						Выборка = ЗапросСКЮпоКодуУникум.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НоваяСтрока.SKU = Выборка.Ссылка;
						КонецЕсли;
					КонецЕсли;
					//Градум.Конец; Гарчуков (11 ноября 2020)
					
					// Датареон, Новиков, 20.09.2020 (
					Если ЗначениеЗаполнено(НоваяСтрока.SKU) тогда
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	грСоответствиеАГТ_SKUСрезПоследних.АГТ КАК АГТ
						|ИЗ
						|	РегистрСведений.грСоответствиеАГТ_SKU.СрезПоследних(&Период, SKU = &SKU) КАК грСоответствиеАГТ_SKUСрезПоследних";
						Запрос.УстановитьПараметр("SKU", НоваяСтрока.SKU);
						Запрос.УстановитьПараметр("Период", ОбъектОбработки.Дата);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							НоваяСтрока.АГТ = Выборка.АГТ;
						КонецЕсли;
					КонецЕсли;	
					// ) Датареон, Новиков, 20.09.2020
					
					
					НоваяСтрока.ЕдиницаИзмерения      = НоваяСтрока.SKU.ЕдиницаИзмерения;
					НоваяСтрока.Цена                  = _.ЗначениеРеквизита(xdtoСтрока, "PRICE", "Число",, 0);
					НоваяСтрока.Количество            = _.ЗначениеРеквизита(xdtoСтрока, "QUANTITY", "Число",, 0);
					НоваяСтрока.СтавкаНДС             = СтавкиНДС[_.ЗначениеРеквизита(xdtoСтрока, "TAX_RATE", "Число",, Неопределено)];
					
					ОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
				КонецЦикла;
				
				ОбъектОбработки.ОбменДанными.Загрузка = Истина;
				ОбъектОбработки.ДополнительныеСвойства.Вставить("СШПНеобрабатывать");
				ОбъектОбработки.Записать();
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+ОбъектОбработки.Ссылка, ОбъектОбработки.Ссылка);
				
				грОбработкаПакетовИнтеграции.УстановитьКлюч_v2(
				ОбъектОбработки.Ссылка, 
				Ключ, 
				ПараметрыОбработки.Отправитель,  
				новый Структура(
				"ВидИдентификатораСтрока, ДатаОбновления",
				ВидИдентификатора,
				ПараметрыОбработки.ВремяПакета
				)
				);
				~КонецЧекККМВторичнаяПродажа:
				
				#КонецОбласти //грЧекККМВторичнаяПродажа
				
				#Область  УдалениеЗаказаПротивоположногоТипа			
				
				//+++Градум Гарчуков (04 августа 2021) https://ludingkis.atlassian.net/browse/ERP-579
				//Дополнить обработчик проверкой на наличие существующего не помеченного на удаление заказа противоположного типа (ЗТВ для ЗКЛ, ЗКЛ для ЗТВ) и ставить на нём пометку на удаление в том случае, если он найден
				Если ПерезаписыватьДокументы Тогда
					Если КатегорииДляСозданияЗаказаНаТочкуВыдачи.Найти(xdtoОбъект.CATEGORY_ID) <> Неопределено Тогда
						//Удалить ЗКЛ
						ЗапросУдаленияЗКЛ_ЗТВ = Новый Запрос;
						ЗапросУдаленияЗКЛ_ЗТВ.Текст = 
						"ВЫБРАТЬ
						|	грТаблицаПереходныхКлючейERP.ОбъектERP КАК Заказ
						|ИЗ
						|	РегистрСведений.грТаблицаПереходныхКлючейERP КАК грТаблицаПереходныхКлючейERP
						|ГДЕ
						|	грТаблицаПереходныхКлючейERP.ИдентификаторОбъекта = &ИдентификаторОбъекта
						|	И грТаблицаПереходныхКлючейERP.ВидИдентификатораСтрока = &ВидИдентификатораСтрока
						|	И грТаблицаПереходныхКлючейERP.ОбъектERP ССЫЛКА Документ.ЗаказКлиента
						|	И ВЫРАЗИТЬ(грТаблицаПереходныхКлючейERP.ОбъектERP КАК Документ.ЗаказКлиента).ПометкаУдаления = ЛОЖЬ
						|
						|ОБЪЕДИНИТЬ
						|
						|ВЫБРАТЬ
						|	ЗаказКлиента.Ссылка
						|ИЗ
						|	Документ.ЗаказКлиента КАК ЗаказКлиента
						|ГДЕ
						|	ЗаказКлиента.грИнтерес = &Интерес
						|	И ЗаказКлиента.ПометкаУдаления = ЛОЖЬ";
					Иначе
						//Удалить ЗТВ
						ЗапросУдаленияЗКЛ_ЗТВ = Новый Запрос;
						ЗапросУдаленияЗКЛ_ЗТВ.Текст = 
						"ВЫБРАТЬ
						|	грТаблицаПереходныхКлючейERP.ОбъектERP КАК Заказ
						|ИЗ
						|	РегистрСведений.грТаблицаПереходныхКлючейERP КАК грТаблицаПереходныхКлючейERP
						|ГДЕ
						|	грТаблицаПереходныхКлючейERP.ИдентификаторОбъекта = &ИдентификаторОбъекта
						|	И грТаблицаПереходныхКлючейERP.ВидИдентификатораСтрока = &ВидИдентификатораСтрока
						|	И грТаблицаПереходныхКлючейERP.ОбъектERP ССЫЛКА Документ.грЗаказНаТочкуВыдачи
						|	И ВЫРАЗИТЬ(грТаблицаПереходныхКлючейERP.ОбъектERP КАК Документ.грЗаказНаТочкуВыдачи).ПометкаУдаления = ЛОЖЬ
						|
						|ОБЪЕДИНИТЬ ВСЕ
						|
						|ВЫБРАТЬ
						|	грЗаказНаТочкуВыдачи.Ссылка
						|ИЗ
						|	Документ.грЗаказНаТочкуВыдачи КАК грЗаказНаТочкуВыдачи
						|ГДЕ
						|	грЗаказНаТочкуВыдачи.Интерес = &Интерес
						|	И грЗаказНаТочкуВыдачи.ПометкаУдаления = ЛОЖЬ";
					КонецЕсли;					
					ЗапросУдаленияЗКЛ_ЗТВ.УстановитьПараметр("ИдентификаторОбъекта", Ключ);
					ЗапросУдаленияЗКЛ_ЗТВ.УстановитьПараметр("ВидИдентификатораСтрока", ВидИдентификатора);
					ЗапросУдаленияЗКЛ_ЗТВ.УстановитьПараметр("Интерес", Интерес);
					РезультатЗапросаУдаленияЗКЛ_ЗТВ = ЗапросУдаленияЗКЛ_ЗТВ.Выполнить();
					Если Не РезультатЗапросаУдаленияЗКЛ_ЗТВ.Пустой() Тогда
						ВыборкаУдаленияЗКЛ_ЗТВ = РезультатЗапросаУдаленияЗКЛ_ЗТВ.Выбрать();
						Пока ВыборкаУдаленияЗКЛ_ЗТВ.Следующий() Цикл
							ЗаказКлиентаОбъект = ВыборкаУдаленияЗКЛ_ЗТВ.Заказ.ПолучитьОбъект();
							ЗаказКлиентаОбъект.УстановитьПометкуУдаления(Истина);
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				//---Градум Гарчуков (04 августа 2021)
				
				#КонецОбласти //УдалениеЗаказаПротивоположногоТипа
				
				#Область УровеньСогласованияКП
				
				//+++Градум Гарчуков (05 августа 2021) https://ludingkis.atlassian.net/browse/ERP-555
				//Расчет реквизита УровеньСогласованияКП
				Если ПерезаписыватьДокументы Тогда
					Если КатегорииДляСозданияЗаказаНаТочкуВыдачи.Найти(xdtoОбъект.CATEGORY_ID) <> Неопределено Тогда
						//ЗТВ
						ЗапросДляРасчетаУровняКП = Новый Запрос;
						ЗапросДляРасчетаУровняКП.Текст = 
						"ВЫБРАТЬ
						|	грЗаказНаТочкуВыдачи.Ссылка КАК Ссылка
						|ИЗ
						|	Документ.грЗаказНаТочкуВыдачи КАК грЗаказНаТочкуВыдачи
						|ГДЕ
						|	грЗаказНаТочкуВыдачи.Ссылка.ПометкаУдаления = ЛОЖЬ
						|	И грЗаказНаТочкуВыдачи.Интерес = &грИнтерес";
						
						ЗапросДляРасчетаУровняКП.УстановитьПараметр("грИнтерес", Интерес);
						РезультатЗапросаТоваровДляРасчетаУровняКП = ЗапросДляРасчетаУровняКП.Выполнить();
						Если Не РезультатЗапросаТоваровДляРасчетаУровняКП.Пустой() Тогда
							ДокИнтересОбъект = Интерес.ПолучитьОбъект();
							
							ВыборкаПоДокументамРасчетаКП = РезультатЗапросаТоваровДляРасчетаУровняКП.Выбрать();
							Пока ВыборкаПоДокументамРасчетаКП.Следующий() Цикл
								ДокЗаказОбъект = ВыборкаПоДокументамРасчетаКП.Ссылка.ПолучитьОбъект();
								
								ТоварыКП = ДокЗаказОбъект.Товары.Выгрузить();			
								//Добавим необходимы для алгоритма расчета колонки
								ТоварыКП.Колонки.Добавить("КлючСвязи");
								ТоварыКП.Колонки.Добавить("ТипАКУ", Новый ОписаниеТипов("Строка"));
								ТоварыКП.Колонки.Добавить("УчитыватьКПАКУ");
								//Заполним добавленные колонки необходимыми данными
								Для каждого СтрокаТовараКП Из ТоварыКП Цикл
									СтрокаТовараКП.КлючСвязи 		= СтрокаТовараКП.ИдСтроки;
									СтрокаТовараКП.УчитыватьКПАКУ 	= Ложь;
								КонецЦикла;
								
								ПараметрыУровнейКП = Новый Структура;
								ПараметрыУровнейКП.Вставить("Период"		, ДокИнтересОбъект.Дата);
								ПараметрыУровнейКП.Вставить("ТаблицаСКС"	, ДокЗаказОбъект.УзлыСКС);
								
								МаксУровеньСогласованияПорядок = -1;
								грКоммерческиеУсловия.ЗаполнитьУровниСогласованияКППоТаблицеЭкспорт(ТоварыКП, ПараметрыУровнейКП);
								МаксУровеньСогласованияПорядок = Макс(МаксУровеньСогласованияПорядок, ПараметрыУровнейКП.МаксУровеньСогласованияПорядок);
								
								Если МаксУровеньСогласованияПорядок >= 0 Тогда
									УровеньСогласования = Справочники.грУровниСогласованиияКУ.НайтиПоРеквизиту("УровеньСогласования", Перечисления.грУровниСогласованияКУ[МаксУровеньСогласованияПорядок]);
									
									Если ДокИнтересОбъект.УровеньСогласованияКП <> УровеньСогласования Тогда
										ДокИнтересОбъект.УровеньСогласованияКП	=  УровеньСогласования;
										ДокИнтересОбъект.ОбменДанными.Загрузка = Истина;	
										ДокИнтересОбъект.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина); // Гусев_Уточнить
										ДокИнтересОбъект.Записать();
									КонецЕсли;
									
									Если ДокЗаказОбъект.УровеньСогласованияКП <> УровеньСогласования Тогда
										ДокЗаказОбъект.УровеньСогласованияКП = УровеньСогласования;									
										ТоварыДокумента = ДокЗаказОбъект.Товары;
										Для каждого СтрТоварыКП Из ТоварыКП Цикл
											НайденныеСтрокиТоваровДокумента = ТоварыДокумента.НайтиСтроки(Новый Структура("ИдСтроки", СтрТоварыКП.ИдСтроки));
											Для каждого НайденнаяСтрока Из НайденныеСтрокиТоваровДокумента Цикл
												НайденнаяСтрока.УровеньЗатратКП = СтрТоварыКП.УровеньЗатратКП;
												НайденнаяСтрока.УровеньСогласованияКП = СтрТоварыКП.УровеньСогласованияКП;
											КонецЦикла;
										КонецЦикла;
										ДокЗаказОбъект.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
										ДокЗаказОбъект.ОбменДанными.Загрузка = Истина;
										ДокЗаказОбъект.Записать();
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;	
						КонецЕсли;
					Иначе
						//ЗКЛ
						ЗапросТоваровДляРасчетаУровняКП = Новый Запрос;
						ЗапросТоваровДляРасчетаУровняКП.Текст = 
						"ВЫБРАТЬ
						|	грСтрокаЗаказаКлиента.Ссылка КАК Ссылка,
						|	грСтрокаЗаказаКлиента.ДокументВладелец КАК ДокументВладелец,
						|	грСтрокаЗаказаКлиента.ИдСтроки КАК ИдСтроки,
						|	грСтрокаЗаказаКлиента.ИдПлановойСтроки КАК ИдПлановойСтроки,
						|	грСтрокаЗаказаКлиента.Сценарий КАК Сценарий,
						|	грСтрокаЗаказаКлиента.НомерСтроки КАК НомерСтроки,
						|	грСтрокаЗаказаКлиента.Вид КАК Вид,
						|	грСтрокаЗаказаКлиента.Склад КАК Склад,
						|	грСтрокаЗаказаКлиента.МестоХранения КАК МестоХранения,
						|	грСтрокаЗаказаКлиента.Помещение КАК Помещение,
						|	грСтрокаЗаказаКлиента.АГТ КАК АГТ,
						|	грСтрокаЗаказаКлиента.SKU КАК SKU,
						|	грСтрокаЗаказаКлиента.СтатусПО КАК СтатусПО,
						|	грСтрокаЗаказаКлиента.КоличествоПлановое КАК КоличествоПлановое,
						|	грСтрокаЗаказаКлиента.Количество КАК Количество,
						|	грСтрокаЗаказаКлиента.КоличествоУпаковок КАК КоличествоУпаковок,
						|	грСтрокаЗаказаКлиента.Упаковка КАК Упаковка,
						|	грСтрокаЗаказаКлиента.ВложенностьВКороб КАК ВложенностьВКороб,
						|	грСтрокаЗаказаКлиента.Серия КАК Серия,
						|	грСтрокаЗаказаКлиента.ЧастьСправкиБ КАК ЧастьСправкиБ,
						|	грСтрокаЗаказаКлиента.КачествоТовара КАК КачествоТовара,
						|	грСтрокаЗаказаКлиента.ЦенаПК КАК ЦенаПК,
						|	грСтрокаЗаказаКлиента.ЦенаПоКП КАК ЦенаПоКП,
						|	грСтрокаЗаказаКлиента.РКУ КАК РКУ,
						|	грСтрокаЗаказаКлиента.ЦенаРКУ КАК ЦенаРКУ,
						|	грСтрокаЗаказаКлиента.СуммаРКУ КАК СуммаРКУ,
						|	грСтрокаЗаказаКлиента.АКУ КАК АКУ,
						|	грСтрокаЗаказаКлиента.ЦенаАКУ КАК ЦенаАКУ,
						|	грСтрокаЗаказаКлиента.ПроцентСкидкиАКУ КАК ПроцентСкидкиАКУ,
						|	грСтрокаЗаказаКлиента.СуммаСкидкиАКУ КАК СуммаСкидкиАКУ,
						|	грСтрокаЗаказаКлиента.ПроцентСкидкиРучная КАК ПроцентСкидкиРучная,
						|	грСтрокаЗаказаКлиента.СуммаСкидкиРучная КАК СуммаСкидкиРучная,
						|	грСтрокаЗаказаКлиента.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
						|	грСтрокаЗаказаКлиента.ЦенаМРЦ КАК ЦенаМРЦ,
						|	грСтрокаЗаказаКлиента.Цена КАК Цена,
						|	грСтрокаЗаказаКлиента.СуммаУПР КАК СуммаУПР,
						|	грСтрокаЗаказаКлиента.СуммаМРЦ КАК СуммаМРЦ,
						|	грСтрокаЗаказаКлиента.Сумма КАК Сумма,
						|	грСтрокаЗаказаКлиента.СтавкаНДС КАК СтавкаНДС,
						|	грСтрокаЗаказаКлиента.СуммаНДС КАК СуммаНДС,
						|	грСтрокаЗаказаКлиента.РазныеЦены КАК РазныеЦены,
						|	грСтрокаЗаказаКлиента.УНК КАК УНК,
						|	грСтрокаЗаказаКлиента.ОтгрузкаВРозницу КАК ОтгрузкаВРозницу,
						|	грСтрокаЗаказаКлиента.ВыставитьСчетНаОплату КАК ВыставитьСчетНаОплату,
						|	грСтрокаЗаказаКлиента.ДатаОтгрузкиС КАК ДатаОтгрузкиС,
						|	грСтрокаЗаказаКлиента.ДатаОтгрузкиПо КАК ДатаОтгрузкиПо,
						|	грСтрокаЗаказаКлиента.ДатаДоставкиС КАК ДатаДоставкиС,
						|	грСтрокаЗаказаКлиента.ДатаДоставкиПо КАК ДатаДоставкиПо,
						|	грСтрокаЗаказаКлиента.ДатаПодтвержденияЗаявки КАК ДатаПодтвержденияЗаявки,
						|	грСтрокаЗаказаКлиента.ТранспортнаяКомпания КАК ТранспортнаяКомпания,
						|	грСтрокаЗаказаКлиента.КомментарийТК КАК КомментарийТК,
						|	грСтрокаЗаказаКлиента.КЛКлиентаПоДоставке КАК КЛКлиентаПоДоставке,
						|	грСтрокаЗаказаКлиента.ПотребностьКлиента КАК ПотребностьКлиента,
						|	грСтрокаЗаказаКлиента.ДатаИзменения КАК ДатаИзменения,
						|	грСтрокаЗаказаКлиента.Ответственный КАК Ответственный,
						|	грСтрокаЗаказаКлиента.ТипДоставки КАК ТипДоставки,
						|	грСтрокаЗаказаКлиента.Инкассация КАК Инкассация,
						|	грСтрокаЗаказаКлиента.АдресДоставки КАК АдресДоставки,
						|	грСтрокаЗаказаКлиента.ВремяДоставкиПо КАК ВремяДоставкиПо,
						|	грСтрокаЗаказаКлиента.ВремяДоставкиС КАК ВремяДоставкиС,
						|	грСтрокаЗаказаКлиента.ДатаДокРеализации КАК ДатаДокРеализации,
						|	грСтрокаЗаказаКлиента.КоличествоТара КАК КоличествоТара,
						|	грСтрокаЗаказаКлиента.КанальнаяЦена КАК КанальнаяЦена,
						|	грСтрокаЗаказаКлиента.ВидКанальнойЦены КАК ВидКанальнойЦены,
						|	грСтрокаЗаказаКлиента.ПроцентКУ КАК ПроцентКУ,
						|	грСтрокаЗаказаКлиента.ВесБрутто КАК ВесБрутто,
						|	грСтрокаЗаказаКлиента.Купон КАК Купон,
						|	грСтрокаЗаказаКлиента.ЦенаРучнаяСкидка КАК ЦенаРучнаяСкидка,
						|	грСтрокаЗаказаКлиента.СкидкаКУ КАК СкидкаКУ,
						|	грСтрокаЗаказаКлиента.УровеньСогласованияКП КАК УровеньСогласованияКП,
						|	грСтрокаЗаказаКлиента.УровеньЗатратКП КАК УровеньЗатратКП,
						|	грСтрокаЗаказаКлиента.Короб КАК Короб,
						|	грСтрокаЗаказаКлиента.Паллет КАК Паллет,
						|	грСтрокаЗаказаКлиента.КоличествоПаллет КАК КоличествоПаллет,
						|	грСтрокаЗаказаКлиента.АКУНазначенаПользователем КАК АКУНазначенаПользователем,
						|	грСтрокаЗаказаКлиента.КлючСвязиДопТоваровАКУ КАК КлючСвязиДопТоваровАКУ,
						|	грСтрокаЗаказаКлиента.НесколькоОдинаковыхЦен КАК НесколькоОдинаковыхЦен,
						|	грСтрокаЗаказаКлиента.АссортиментнаяДистрибьюция КАК АссортиментнаяДистрибьюция,
						|	грСтрокаЗаказаКлиента.ТипИтоговойЦены КАК ТипИтоговойЦены,
						|	грСтрокаЗаказаКлиента.грПроведенВременная КАК грПроведенВременная,
						|	грСтрокаЗаказаКлиента.ИдСтроки КАК КлючСвязи,
						|	"""" КАК ТипАКУ,
						|	ЛОЖЬ КАК УчитыватьКПАКУ
						|ИЗ
						|	Документ.грСтрокаЗаказаКлиента КАК грСтрокаЗаказаКлиента
						|ГДЕ
						|	грСтрокаЗаказаКлиента.ДокументВладелец В
						|			(ВЫБРАТЬ
						|				ЗаказКлиента.Ссылка КАК Ссылка
						|			ИЗ
						|				Документ.ЗаказКлиента КАК ЗаказКлиента
						|			ГДЕ
						|				ЗаказКлиента.грИнтерес = &грИнтерес
						|				И ЗаказКлиента.ПометкаУдаления = ЛОЖЬ)
						|	И грСтрокаЗаказаКлиента.SKU <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
						ЗапросТоваровДляРасчетаУровняКП.УстановитьПараметр("грИнтерес", Интерес);
						
						РезультатЗапросаТоваровДляРасчетаУровняКП = ЗапросТоваровДляРасчетаУровняКП.Выполнить();
						Если Не РезультатЗапросаТоваровДляРасчетаУровняКП.Пустой() Тогда
							ДокИнтересОбъект = Интерес.ПолучитьОбъект();
							
							ТоварыКП = РезультатЗапросаТоваровДляРасчетаУровняКП.Выгрузить();
							
							ТЗЗаказов = ТоварыКП.Скопировать(, "ДокументВладелец");
							ТЗЗаказов.Свернуть("ДокументВладелец");
							
							ТЗТоварыЗаказа = ТоварыКП.Скопировать();
							ТЗТоварыЗаказа.Очистить();
							Для каждого ЗаказКП Из ТЗЗаказов Цикл
								НайденныеСтрокиТоваров = ТоварыКП.НайтиСтроки(Новый Структура("ДокументВладелец", ЗаказКП.ДокументВладелец));
								Для каждого СтрТовара Из НайденныеСтрокиТоваров Цикл
									НоваяСтрокаТовара = ТЗТоварыЗаказа.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрокаТовара, СтрТовара);
								КонецЦикла;
								
								ДокЗаказОбъект = ЗаказКП.ДокументВладелец.ПолучитьОбъект();
								
								ПараметрыУровнейКП = Новый Структура;
								ПараметрыУровнейКП.Вставить("Период"		, ДокИнтересОбъект.Дата);
								ПараметрыУровнейКП.Вставить("ТаблицаСКС"	, ДокЗаказОбъект.СКС);			
								
								МаксУровеньСогласованияПорядок = -1;
								грКоммерческиеУсловия.ЗаполнитьУровниСогласованияКППоТаблицеЭкспорт(ТЗТоварыЗаказа, ПараметрыУровнейКП);
								МаксУровеньСогласованияПорядок = Макс(МаксУровеньСогласованияПорядок, ПараметрыУровнейКП.МаксУровеньСогласованияПорядок);
								
								Если МаксУровеньСогласованияПорядок >= 0 Тогда
									УровеньСогласования = Справочники.грУровниСогласованиияКУ.НайтиПоРеквизиту("УровеньСогласования", Перечисления.грУровниСогласованияКУ[МаксУровеньСогласованияПорядок]);
									
									Если ДокИнтересОбъект.УровеньСогласованияКП <> УровеньСогласования Тогда 
										ДокИнтересОбъект.УровеньСогласованияКП	= Справочники.грУровниСогласованиияКУ.НайтиПоРеквизиту("УровеньСогласования", УровеньСогласования);
										ДокИнтересОбъект.ОбменДанными.Загрузка = Истина;
										ДокИнтересОбъект.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина); // Гусев_Уточнить
										ДокИнтересОбъект.Записать();
									КонецЕсли;
									
									Если ДокЗаказОбъект.УровеньСогласованияКП <> УровеньСогласования Тогда 
										ДокЗаказОбъект.УровеньСогласованияКП = УровеньСогласования; 									
										Для каждого ДокСтрЗаказа Из ТЗТоварыЗаказа Цикл
											ДокСтрЗаказаОбъект = ДокСтрЗаказа.Ссылка.ПолучитьОбъект();
											ДокСтрЗаказаОбъект.УровеньСогласованияКП = ДокСтрЗаказа.УровеньСогласованияКП;
											ДокСтрЗаказаОбъект.УровеньЗатратКП = ДокСтрЗаказа.УровеньЗатратКП;
											ДокСтрЗаказаОбъект.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
											ДокСтрЗаказаОбъект.ОбменДанными.Загрузка = Истина;
											ДокСтрЗаказаОбъект.Записать();
										КонецЦикла;									
										ДокЗаказОбъект.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
										ДокЗаказОбъект.ОбменДанными.Загрузка = Истина;
										ДокЗаказОбъект.Записать();
									КонецЕсли;
								КонецЕсли;	
							КонецЦикла;
						КонецЕсли
					КонецЕсли;
				КонецЕсли;
				//---Градум Гарчуков (05 августа 2021)
				
				#КонецОбласти //УровеньСогласованияКП
				
				//+++Градум Гарчуков (20 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-1086
				МассивИдУдачноОбработанныхСделок.Добавить(Ключ);
				//---Градум Гарчуков (20 сентября 2021)
				
				Пока ТранзакцияАктивна() Цикл
					ЗафиксироватьТранзакцию();
				КонецЦикла;
				
			Исключение
				Пока ТранзакцияАктивна() цикл
					ОтменитьТранзакцию();
				КонецЦикла;	
				
				мсвОшибки.Добавить("Ошибка обработки сделки ID=" + Ключ + ": " + ОписаниеОшибки()); 
			КонецПопытки;	
			
		КонецЦикла;	
		
		// ++ Градум Вахрушев А.В. 09.03.2021 Задача № 19959
		грОбработкаПакетовИнтеграции.УдалитьЗаписьОДозапросе(Ключ, "428_Bitrix_BITRIXGUID");
		// -- Градум Вахрушев А.В. 09.03.2021 Задача № 19959
		
		// ++ Градум Вахрушев А.В. 10.03.2021 Задача № 20477			
		Если ТранзакцияАктивна() Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;  
		
		#КонецОбласти  //ОсновнойАлгоритмОбработкиСпискаЗаказов
		
		#Область Дозапросы
		
		НачатьТранзакцию();
		
		Если 
			// ++ Вахрушев А.В, 23.06.2021
			НЕ ПараметрыОбработки.МассоваяЗагрузка И
			// -- Вахрушев А.В, 23.06.2021
			ПараметрыОбработки.ВыполнятьДозапросы И НенайденныеОбъекты.Количество() > 0 Тогда 
			
			грОбработкаПакетовИнтеграции.СоздатьДозапросыПоТаблице(НенайденныеОбъекты, ПараметрыОбработки.ТаймаутДозапроса, 
			ПараметрыОбработки.КоличествоПопытокБлокировки, ТаблицаИдентификаторовПотоков);
			СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;
			Задержка = ПараметрыОбработки.ЗадержкаПриДозапросе;
			
			//+++ Градум; Курпяев Е.Д. ; 14.07.2021; Задача №  
			сшпОбщегоНазначения.ЗарегистрироватьЗаписьВЖурнале(УровеньЖурналаРегистрации.Предупреждение,
			грОбработкаПакетовИнтеграции.ИмяСобытияОбработкиПакета(), "Задержка сделка", "" + Идентификатор);
			грОбработкаПакетовИнтеграции.ОбработатьИсключениеНенайденныхОбъектов( Идентификатор, НенайденныеОбъекты, ПараметрыОбработки);
			//--- Градум; Курпяев Е.Д. ; 14.07.2021; Задача № 			
		КонецЕсли;
		
		Пока ТранзакцияАктивна() Цикл
			ЗафиксироватьТранзакцию();
		КонецЦикла;
		
		Если НенайденныеОбъекты.Количество() > 0 Тогда 
			
			Если ПараметрыОбработки.МассоваяЗагрузка Тогда 
				грОбработкаПакетовИнтеграции.ОбработатьИсключениеНенайденныхОбъектов( Идентификатор, НенайденныеОбъекты, ПараметрыОбработки);
			Иначе
				Если ПараметрыОбработки.ВыполнятьДозапросы Тогда 
					ДостигнутТаймаут = грОбработкаПакетовИнтеграции.ОпределитьТаймаутСообщения(КоличествоПопытокОжидания, 
					ДатаРегистрации, ПараметрыОбработки);
					Если ДостигнутТаймаут Тогда 
						УровеньЖР = УровеньЖурналаРегистрации.Ошибка;
						ВызватьИсключение "Истекло время ожидания ответов на дозапросы. См. журнал регистрации.";
					Иначе
						УровеньЖР = УровеньЖурналаРегистрации.Предупреждение;
					КонецЕсли;
					грОбработкаПакетовИнтеграции.ЗаписатьНенайденныеОбъектыВЖР(НенайденныеОбъекты, Идентификатор,, УровеньЖР);
				Иначе
					грОбработкаПакетовИнтеграции.ОбработатьИсключениеНенайденныхОбъектов( Идентификатор, НенайденныеОбъекты, ПараметрыОбработки);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		// -- Градум Вахрушев А.В. 10.03.2021 Задача № 20477
		
		#КонецОбласти
		
		#Область Завершение		
		
		~Возврат:
		
		Пока ТранзакцияАктивна() Цикл  // Градум Гусев А.С. // успешные транзакции закрыты ранее, а открытые транзакции должны быть отменены, так как это Возврат
			ОтменитьТранзакцию();
		КонецЦикла;
		
		//+++Градум Гарчуков (20 сентября 2021) https://ludingkis.atlassian.net/browse/ERP-1086
		Если НужноСохранятьУспешноОбработанныеСделки Тогда
			НаборОтложеннойОбработкиДанных = РегистрыСведений.грЗаданияОтложеннойОбработкиДанных.СоздатьНаборЗаписей();
			НаборОтложеннойОбработкиДанных.Отбор.Задание.Установить(УИДСообщения);
			
			Если МассивИдУдачноОбработанныхСделок.Количество() = Последовательность.Количество() Тогда
				//Прогрузили все сделки текущего пакета, больше не нужен массив частично прогруженных сделок
				НаборОтложеннойОбработкиДанных.Записать(Истина);
			Иначе
				ЗаписьУспешноОбработанныхСделок = НаборОтложеннойОбработкиДанных.Добавить();
				
				ЗаписьУспешноОбработанныхСделок.Задание = УИДСообщения;
				ЗаписьУспешноОбработанныхСделок.Процесс = Новый УникальныйИдентификатор;
				ЗаписьУспешноОбработанныхСделок.Данные = Новый ХранилищеЗначения(МассивИдУдачноОбработанныхСделок);
				ЗаписьУспешноОбработанныхСделок.Описание = "Массив удачно обработанных сдеок из обработчика 428 класса, количество " + Строка(МассивИдУдачноОбработанныхСделок.Количество());
				ЗаписьУспешноОбработанныхСделок.ДатаОбновления = ТекущаяДата();
				
				НаборОтложеннойОбработкиДанных.Записать(Истина);
			КонецЕсли;
		КонецЕсли;
		//---Градум Гарчуков (20 сентября 2021)
		
		Если мсвОшибки.Количество() тогда
			ТекстОшибки = "";
			Для Каждого Ошибка из мсвОшибки цикл
				ТекстОшибки = ТекстОшибки + Ошибка + Символы.ПС;
			КонецЦикла;	
			
			сшпОбщегоНазначения.ЗарегистрироватьЗаписьВЖурнале(УровеньЖурналаРегистрации.Предупреждение,
			грОбработкаПакетовИнтеграции.ИмяСобытияОбработкиПакета(), ТекстОшибки, "" + Идентификатор);
			
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		#КонецОбласти		
		
		#КонецОбласти //Обработчик								//Выполнить(сткОбработчик.ПроцедураОбработки);		~Выход:	
		
