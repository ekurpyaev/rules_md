	// Проведение документов
	// Контекст
	// СписокДокументов_ОбработкаПроведения - Массив объектов типа ДокументОбъект, которые нужно провест
	
	КоличествоЗаписейВБлоке = 0;
	РазмерБлока = 10;
	ОбработанныеДокументы = Новый Соответствие;
	
	//+++ GRADUM, Теплоухов А.В. 2021_04_05 Задача № 20971{
	Если НенайденныеОбъекты.Количество() Тогда
	//+++ Теплоухов Задача 21377
		//Перейти ~НеВыполнятьОтложенноеПроведение;
	//--- Теплоухов Задача 21377
	КонецЕсли;
	//--- GRADUM, Теплоухов А.В. 2021_04_05 Задача № 20971}

	Если Не ПараметрыОбработки.МассоваяЗагрузка  Тогда
	
		НачатьТранзакцию();
		
		//+++ GRADUM, Теплоухов А.В. 2021_06_02 Задача № 19497{
		МассивЗаказов = Новый Массив;
		Для Каждого ЭлементМассива Из СписокДокументов_ОбработкаПроведения Цикл
			Если ТипЗнч(ЭлементМассива) = Тип("ДокументОбъект.ЗаказПоставщику")
				Или ТипЗнч(ЭлементМассива) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				Если ТипЗнч(ЭлементМассива) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
					МассивЗаказов.Добавить(ЭлементМассива);
				Иначе
					МассивЗаказов.Добавить(ЭлементМассива.Ссылка);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ЗаказДатаРозлива = Новый Соответствие;
		Если МассивЗаказов.Количество() Тогда
		
			Запрос = Новый Запрос(
			"ВЫБРАТЬ ЗаказПоставщику.Ссылка КАК Ссылка,
			|	МАКСИМУМ(грСтрокаЗаказаПоставщику.ФактическаяДатаРозлива) КАК ФактическаяДатаРозлива
			|ИЗ Документ.ЗаказПоставщику КАК ЗаказПоставщику
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.грСтрокаЗаказаПоставщику КАК грСтрокаЗаказаПоставщику
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.грТекущиеДокументыСтроки КАК грТекущиеДокументыСтроки
			|			ПО грСтрокаЗаказаПоставщику.ДокументВладелец = грТекущиеДокументыСтроки.ДокументВладелец
			|				И грСтрокаЗаказаПоставщику.Ссылка = грТекущиеДокументыСтроки.ДокументСтрока
			|				И (грТекущиеДокументыСтроки.Вид = ЗНАЧЕНИЕ(Перечисление.грВидыДокументовСтрок.ФактическаяСтрока))
			|		ПО (ЗаказПоставщику.Ссылка В (&ЗаказыПоставщику)) И ЗаказПоставщику.Ссылка = грСтрокаЗаказаПоставщику.ДокументВладелец
			|			И (ЗаказПоставщику.грПроведенВременная)
			|СГРУППИРОВАТЬ ПО ЗаказПоставщику.Ссылка ИМЕЮЩИЕ НЕ МАКСИМУМ(грСтрокаЗаказаПоставщику.ФактическаяДатаРозлива) is null ");
			
			Запрос.УстановитьПараметр("ЗаказыПоставщику", МассивЗаказов);
			
			Результат = Запрос.Выполнить();
			
			Если Не Результат.Пустой() Тогда
				Выборка = Результат.Выбрать();
				
				Пока Выборка.Следующий() Цикл
					ЗаказДатаРозлива.Вставить(Выборка.Ссылка, Выборка.ФактическаяДатаРозлива);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		НачалоУчета = сшпРаботаСКонстантами.ПолучитьЗначениеКонстанты( "грНачалоПериодаЗагрузкиБазы" );
		//--- GRADUM, Теплоухов А.В. 2021_06_02 Задача № 19497}
		
		Для Каждого ЭлементМассива Из СписокДокументов_ОбработкаПроведения Цикл
			
			//Бугаев - убрал, до меня Дима Шутенко исправил условие на прод
			////Курпяев заглушка
			//Если Не ОбъектСообщение.Source = "Unimog_PROD" Тогда				
			//	Продолжить;				
			//КонецЕсли;
			////Курпяев
			
			Если Не ОбработанныеДокументы.Получить(ЭлементМассива.Ссылка) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			//+++ GRADUM, Теплоухов А.В. 2021_06_02 Задача № 19497{
			//Если ЭлементМассива.ПометкаУдаления 
			//	Или 
			//	(ТипЗнч(ЭлементМассива.Ссылка) <> Тип("ДокументСсылка.грРаспоряжениеНаДоставку")
			//		И ЭлементМассива.Дата < сшпРаботаСКонстантами.ПолучитьЗначениеКонстанты( "грНачалоПериодаЗагрузкиБазы" ) ) Тогда
			//	Продолжить;
			//КонецЕсли;
			Если ЭлементМассива.ПометкаУдаления Тогда
				Продолжить;
			КонецЕсли;
			
			МеньшеНачалаУчета = ЭлементМассива.Дата < НачалоУчета;
			Если МеньшеНачалаУчета И ТипЗнч(ЭлементМассива.Ссылка) = Тип("ДокументСсылка.грРаспоряжениеНаДоставку") Тогда
				МеньшеНачалаУчета = Ложь;
			КонецЕсли;
			
			Если МеньшеНачалаУчета
				И (ТипЗнч(ЭлементМассива) = Тип("ДокументОбъект.ЗаказПоставщику")
				Или ТипЗнч(ЭлементМассива) = Тип("ДокументСсылка.ЗаказПоставщику")) Тогда
				СсылкаНаЗаказ = ?(ТипЗнч(ЭлементМассива) = Тип("ДокументОбъект.ЗаказПоставщику"),
									ЭлементМассива.Ссылка, ЭлементМассива);
				ДатаРозлива = ЗаказДатаРозлива.Получить(СсылкаНаЗаказ); 
				МеньшеНачалаУчета = ?(ДатаРозлива = Неопределено, МеньшеНачалаУчета, ДатаРозлива < НачалоУчета); 
			КонецЕсли;
			
			Если МеньшеНачалаУчета Тогда
				Продолжить;
			КонецЕсли;
			//--- GRADUM, Теплоухов А.В. 2021_06_02 Задача № 19497}
			
			//+++ GRADUM, Теплоухов А.В. 2021_05_17 Задача № 21503{
			Если ПараметрыОбработки.Свойство("НеРавныВерсииЕРП_Пакета") 
				И ПараметрыОбработки.НеРавныВерсииЕРП_Пакета 
				И ЭлементМассива.Дата <= Дата(2019,12,31,23,59,59) Тогда
				ТекстСообщения = НСтр("ru = 'Загрузка исторического документа [" 
					+ ПараметрыОбработки.КлючПакета + "] , [" 
					+ ЭлементМассива.Ссылка + "]'");
				Заголовок = "Datareon.ПроверкаИсторическихДанных";
				сшпОбщегоНазначения.ЗарегистрироватьЗаписьВЖурнале(УровеньЖурналаРегистрации.Предупреждение, Заголовок, ТекстСообщения);
			КонецЕсли;
			//--- GRADUM, Теплоухов А.В. 2021_05_17 Задача № 21503}
			
			ОбработанныеДокументы.Вставить(ЭлементМассива.Ссылка, ЭлементМассива.Ссылка);
			
			// ++ Градум, Шутенко Д.И., Задача № 19123  , 28.12.2020
			//ЭлементМассива.ОбменДанными.Загрузка = Ложь;
			//ЭлементМассива.Записать(РежимЗаписиДокумента.Проведение);
			МенеджерЗаписи = РегистрыСведений.грОтложеннноеПроведение.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Документ	= ЭлементМассива.Ссылка;
			МенеджерЗаписи.ДатаПакета = ПараметрыОбработки.ВремяПакета;
			МенеджерЗаписи.Записать();
			// -- Градум, Шутенко Д.И., Задача № 19123  , 28.12.2020
			
			КоличествоЗаписейВБлоке = КоличествоЗаписейВБлоке + 1;
			
			Если КоличествоЗаписейВБлоке = РазмерБлока Тогда 
				
				Пока ТранзакцияАктивна() Цикл
					ЗафиксироватьТранзакцию();
				КонецЦикла;
				
				НачатьТранзакцию();
				
			КонецЕсли;
			
		КонецЦикла;
		
		Пока ТранзакцияАктивна() Цикл
			ЗафиксироватьТранзакцию();
		КонецЦикла; 
	
	КонецЕсли;
	
	~НеВыполнятьОтложенноеПроведение:
