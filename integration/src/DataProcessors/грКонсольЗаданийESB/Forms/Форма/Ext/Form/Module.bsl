
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда
		ВызватьИсключение НСтр("ru = 'Недостаточно прав доступа.
		                             |
		                             |Работа с регламентными и фоновыми заданиями
		                             |выполняется только администраторами.'");
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		Если НЕ Пользователи.ЭтоПолноправныйПользователь() Тогда
			ВызватьИсключение НСтр("ru = 'Нарушение прав доступа.'");
		КонецЕсли;
	Иначе
		Если НЕ ПривилегированныйРежим() Тогда
			ВыполнитьПроверкуПравДоступа("Администрирование", Метаданные);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФорму(Команда)
	
	ЗаполнитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуНаСервере()
	
	ТаблицаОбработчиков.Очистить();
	
	ЗапросКоличестваСообщений = Новый Запрос;
	ЗапросКоличестваСообщений.Текст = "ВЫБРАТЬ
	                                  |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ грESBВходящиеСообщенияВОбработке.ИдентификаторСообщения) КАК КоличествоВОбработке
	                                  |ИЗ
	                                  |	РегистрСведений.грESBВходящиеСообщенияВОбработке КАК грESBВходящиеСообщенияВОбработке
	                                  |ГДЕ
	                                  |	грESBВходящиеСообщенияВОбработке.КлючЗадания = &КлючЗадания";
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ИмяМетода", "грОбработкаПакетовИнтеграции.ОбработатьВходящиеСообщения");
	СтруктураОтбора.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	Обработчики = ФоновыеЗадания.ПолучитьФоновыеЗадания(СтруктураОтбора);
	
	Для Каждого Обработчик Из Обработчики Цикл
		СтрокаКонсоли = ТаблицаОбработчиков.Добавить();
		Если СтрНачинаетсяС(Обработчик.Ключ, "ОбщийОбработчик") Тогда
			СтрокаКонсоли.ВидОбработчика = "Общий обработчик";
		ИначеЕсли СтрНачинаетсяС(Обработчик.Ключ, "ОбщийПриоритет") Тогда
			СтрокаКонсоли.ВидОбработчика = "Общий приоритет";
		ИначеЕсли СтрНачинаетсяС(Обработчик.Ключ, "ОбщийНагрузка") Тогда
			СтрокаКонсоли.ВидОбработчика = "Общий нагрузка";
		ИначеЕсли СтрНачинаетсяС(Обработчик.Ключ, "РезервныйОчередь") Тогда
			СтрокаКонсоли.ВидОбработчика = "Резервный очередь";
		Иначе	
			СтрокаКонсоли.ВидОбработчика = "";
		КонецЕсли;
		УИД = Новый УникальныйИдентификатор(Прав(Обработчик.Ключ, 36));
		Очередь = Справочники.грВходящиеВнутренниеОчереди.ПолучитьСсылку(УИД);
		Если Очередь = Справочники.грВходящиеВнутренниеОчереди.ПустаяСсылка() Тогда
			СтрокаКонсоли.Наименование = "Общая очередь";
			СтрокаКонсоли.Отключена = Ложь;
		Иначе
			СтрокаКонсоли.Наименование = Очередь.Наименование;
			СтрокаКонсоли.Отключена = Очередь.ОчередьОтключена;
		КонецЕсли;
		СтрокаКонсоли.Ссылка = Очередь;
		СтрокаКонсоли.НачалоВыполнения = Обработчик.Начало;
		СтрокаКонсоли.Выполняется = Истина;
		ЗапросКоличестваСообщений.УстановитьПараметр("КлючЗадания", Обработчик.Ключ);
		ВыборкаКоличества = ЗапросКоличестваСообщений.Выполнить().Выбрать();
		Если ВыборкаКоличества.Следующий() Тогда
			СтрокаКонсоли.КоличествоСообщенийВОбработке = ВыборкаКоличества.КоличествоВОбработке;
		Иначе
			СтрокаКонсоли.КоличествоСообщенийВОбработке = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


