
#Область ДлительныеОперации

Процедура ОбработатьРезультатыЗадания( Форма, Результат ) Экспорт
	
	Если Результат.Статус = "Выполнено" Тогда
		
		Форма.Элементы.Список.Обновить();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Операция выполнена." );
		
	ИначеЕсли Результат.Статус = "Выполняется" Тогда
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(Форма.ПараметрыОбработчикаОжидания);
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		Форма.ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(Форма, Форма.ИдентификаторЗадания);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатВыполненияЗадания()
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Операция выполнена." );
	
КонецПроцедуры

Процедура Подключаемый_ПроверитьВыполнениеЗадания(Форма) Экспорт

	Попытка
		Если Форма.ФормаДлительнойОперации.Открыта() 
			И Форма.ФормаДлительнойОперации.ИдентификаторЗадания = Форма.ИдентификаторЗадания Тогда
			
			Если грОтложенныеОперацииИнтеграцииВызовСервера.ЗаданиеВыполнено(Форма.ИдентификаторЗадания) Тогда 
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(Форма.ФормаДлительнойОперации);
				ОбработатьРезультатВыполненияЗадания();
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(Форма.ПараметрыОбработчикаОжидания);
				Форма.ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания", 
					Форма.ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(Форма.ФормаДлительнойОперации);
		//ЗаписатьИсключениеНаСервере(ПредставлениеОшибки);
		ВызватьИсключение ПредставлениеОшибки;
	КонецПопытки;

КонецПроцедуры

Процедура ЗапуститьФоновоеЗаданиеОбработатьИсточникиДанных(Форма, ИмяКоманды) Экспорт

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Метод"	, ПредопределенноеЗначение(СтрШаблон("Перечисление.грМетодыОтложенныхОперацийИнтеграции.%1", ИмяКоманды)));
	ДополнительныеПараметры.Вставить("Форма"	, Форма);
	
	ПараметрыЗадания = грОтложенныеОперацииИнтеграцииКлиентСервер.ПараметрыЗапускаФоновыхЗаданий(ДополнительныеПараметры);
	ПараметрыЗадания.Вставить("ИспользоватьНаименованиеМетодаИсточникиДанных");
	ПараметрыЗадания.Вставить("КлючФоновогоЗадания"	, Новый УникальныйИдентификатор);
	ПараметрыЗадания.Вставить("Отборы"				, Новый Структура("ТипДозапроса", ПредопределенноеЗначение("Перечисление.грТипыДозапросов.Дозапрос")));
	
	Результат = грОтложенныеОперацииИнтеграцииВызовСервера.ЗапуститьОбработкуВФоновомРежиме(
		ПараметрыЗадания.ВыполняемыйМетодИсточникиДанных,
		ПараметрыЗадания);
	
	Форма.АдресХранилища		= Результат.АдресРезультата;
	Форма.ИдентификаторЗадания	= Результат.ИдентификаторЗадания;
	
	ОбработатьРезультатыЗадания( Форма, Результат );

КонецПроцедуры

#КонецОбласти
