
#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если Поле.Имя = "ИсточникСтрокой" Тогда		
		СсылкаДанных = ПолучитьСсылкуНаСервере(ВыбраннаяСтрока);
		Если НЕ СсылкаДанных = Неопределено Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьЗначение(, СсылкаДанных);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	грИсторияОбработкиИсходящихСообщений.Источник КАК Источник
	               |ИЗ
	               |	РегистрСведений.грИсторияОбработкиИсходящихСообщений КАК грИсторияОбработкиИсходящихСообщений
	               |ГДЕ
	               |	грИсторияОбработкиИсходящихСообщений.ДатаВыгрузки = &ДатаВыгрузки
	               |	И грИсторияОбработкиИсходящихСообщений.ИдентификаторСообщения = &ИдентификаторСообщения
	               |	И грИсторияОбработкиИсходящихСообщений.ПорядковыйНомер = &ПорядковыйНомер";
	
	Для Каждого СтрокаСписка Из Строки Цикл
		Запрос.УстановитьПараметр("ДатаВыгрузки", СтрокаСписка.Ключ.ДатаВыгрузки);
		Запрос.УстановитьПараметр("ИдентификаторСообщения", СтрокаСписка.Ключ.ИдентификаторСообщения);
		Запрос.УстановитьПараметр("ПорядковыйНомер", СтрокаСписка.Ключ.ПорядковыйНомер);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ИсточникХранилища = Выборка.Источник.Получить();
			Если ЗначениеЗаполнено(ИсточникХранилища) Тогда
				Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ИсточникХранилища) Тогда
					СтрокаСписка.Значение.Данные.ИсточникСтрокой = ИсточникХранилища;
				Иначе
					СтрокаСписка.Значение.Данные.ИсточникСтрокой = ТипЗнч(ИсточникХранилища);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьСсылкуНаСервере(КлючЗаписи)
	
	СсылкаДанных = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	грИсторияОбработкиИсходящихСообщений.Источник КАК Источник
	               |ИЗ
	               |	РегистрСведений.грИсторияОбработкиИсходящихСообщений КАК грИсторияОбработкиИсходящихСообщений
	               |ГДЕ
	               |	грИсторияОбработкиИсходящихСообщений.ДатаВыгрузки = &ДатаВыгрузки
	               |	И грИсторияОбработкиИсходящихСообщений.ИдентификаторСообщения = &ИдентификаторСообщения
	               |	И грИсторияОбработкиИсходящихСообщений.ПорядковыйНомер = &ПорядковыйНомер";
	
	Запрос.УстановитьПараметр("ДатаВыгрузки", КлючЗаписи.ДатаВыгрузки);
	Запрос.УстановитьПараметр("ИдентификаторСообщения", КлючЗаписи.ИдентификаторСообщения);
	Запрос.УстановитьПараметр("ПорядковыйНомер", КлючЗаписи.ПорядковыйНомер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ИсточникХранилища = Выборка.Источник.Получить();
		Если ЗначениеЗаполнено(ИсточникХранилища) Тогда
			Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ИсточникХранилища) Тогда
				СсылкаДанных = ИсточникХранилища;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СсылкаДанных;
	
КонецФункции

#КонецОбласти


