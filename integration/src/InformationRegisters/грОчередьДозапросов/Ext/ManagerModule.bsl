#Область ПрограммныйИнтерфейс

// Записывает ключи в очередь дозапросов, используется для многопоточной обработки
//
// Параметры:
//  Ключи - Массив - ключи ТПК;
//  idflow - Строка - идентификатор потока;
//  Информация - Структура - Информация по дозапросу:
//     * ДатаОтправки - Дата - дата отправки дозапроса
//     * Описание - Строка - описание дозапроса
//     * Ошибка - Ошибка - описание ошибки дозапроса
//  ДополнительныеПараметры - Структура - дополнительные параметры отправки:
//     * ОтправлятьДозапрос - Истина - признак отправки дозапроса в esb
// 
Процедура ЗаписатьКлючиВОчередьДозапросов( Ключи, idflow, Информация = Неопределено, ДополнительныеПараметры = Неопределено  ) Экспорт 
	
	МассивКлючей = СтрРазделить( Ключи, Символы.ПС );
	Для каждого Ключ Из МассивКлючей Цикл
		
		Если Не ЗначениеЗаполнено( Ключ ) Тогда
			Продолжить;
		КонецЕсли;
		
		РегистрыСведений.грОчередьДозапросов.ЗаписатьВОчередьДозапросов( Ключ, idflow, Информация, ДополнительныеПараметры );
		
	КонецЦикла;
	
КонецПроцедуры

// Отправляет дозапросы в ESB
//
// Параметры:
//  Ключ - Строка - ключ объекта;
//  idflow - Строка - идентификатор потока;
//  Информация - Структура - Информация по дозапросу:
//     * ДатаОтправки - Дата - дата отправки дозапроса
//     * Описание - Строка - описание дозапроса
//     * Ошибка - Ошибка - описание ошибки дозапроса
//  ДополнительныеПараметры - Структура - дополнительные параметры отправки:
//     * ОтправлятьДозапрос - Истина - признак отправки дозапроса в esb
// 
Процедура ЗаписатьВОчередьДозапросов( Ключ, idflow, Информация = Неопределено, ДополнительныеПараметры = Неопределено ) Экспорт 
	
	МЗ = РегистрыСведений.грОчередьДозапросов.СоздатьМенеджерЗаписи();
	МЗ.Ключ = Ключ;
	МЗ.idflow = idflow;
	
	Если Не Информация = Неопределено Тогда
		Информация.Свойство( "ДатаОтправки", МЗ.ДатаОтправки);
		Информация.Свойство( "Описание", МЗ.Описание);
		Информация.Свойство( "Ошибка", МЗ.Ошибка);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( МЗ.ДатаОтправки ) Тогда
		МЗ.ДатаОтправки = ТекущаяДатаСеанса();
	КонецЕсли;
	
	МЗ.Записать();
	
	Если ДополнительныеПараметры.ОтправлятьДозапрос Тогда
		
		ПараметрыДозапроса = Новый Структура( "idflow,Ключ", idflow, Ключ );
		сшпПользовательскиеМетоды.ПоместитьВОчередьИсходящих( "Дозапрос" , ПараметрыДозапроса );
		
	КонецЕсли;

КонецПроцедуры

// Устарела. Следует использовать новую см. ОбщегоНазначения.ЗаписатьВОчередьДозапросов
//
// Отправляет дозапросы в ESB
//  idflow - Строка - идентификатор потока;
//  Ключ - Строка - ключ объекта;
// 
Процедура ОтправитьДозапрос( idflow, Ключ, УдалитьЗапись = Ложь ) Экспорт 
	
	ПараметрыДозапроса = Новый Структура( "idflow,Ключ", idflow, Ключ );
	сшпПользовательскиеМетоды.ПоместитьВОчередьИсходящих( "Дозапрос" , ПараметрыДозапроса );
	
	МЗ = РегистрыСведений.грОчередьДозапросов.СоздатьМенеджерЗаписи();
	МЗ.Ключ = Ключ;
	МЗ.idflow = idflow;
	
	Если УдалитьЗапись Тогда
		МЗ.Удалить();
	Иначе
		МЗ.Прочитать();
		Если МЗ.Выбран() Тогда
			
			МЗ.ДатаОтправки = ТекущаяДатаСеанса();
			
			//+++ GRADUM, Теплоухов А.В. 2021_05_19 Задача № 21539{
			МЗ.СчетчикОтправки = МЗ.СчетчикОтправки + 1;
			//--- GRADUM, Теплоухов А.В. 2021_05_19 Задача № 21539}
			
			МЗ.Записать();
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти